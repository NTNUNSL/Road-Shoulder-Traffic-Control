{"_id":"@serverless/platform-sdk","_rev":"93-618b67092917ef0315125fc6b9bb8c8e","name":"@serverless/platform-sdk","dist-tags":{"latest":"2.2.1","next":"2.2.1-2-g90e3144"},"versions":{"0.0.1":{"name":"@serverless/platform-sdk","version":"0.0.1","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","test":"./scripts/test.sh","watch":"./scripts/watch.sh"},"dependencies":{"babel-polyfill":"^6.26.0","bluebird":"^3.5.1","body-parser":"^1.18.3","chalk":"^2.4.1","cors":"^2.8.4","express":"^4.16.3","is-docker":"^1.1.0","is-wsl":"^1.1.0","isomorphic-fetch":"^2.2.1","node-fetch":"^2.1.2","opn":"^5.3.0","querystring":"^0.2.0","ramda":"^0.25.0","source-map-support":"^0.5.5"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^22.4.3","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-airbnb-base":"^12.1.0","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.11.0","eslint-plugin-prettier":"^2.6.0","jest":"^22.4.3","prettier":"^1.12.1"},"publishConfig":{"access":"public"},"gitHead":"7c8b39870c25572b9c6326d41d7ea65362e20fe2","_id":"@serverless/platform-sdk@0.0.1","_npmVersion":"5.6.0","_nodeVersion":"8.11.3","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-rJ6keL4IYEn56me3iTFi7PPQZJSM8LFNcxF25ceSD2W7q5kz3BcxV5/I2F4y5QQAL65BpUcZVCOOWQNP/p71hg==","shasum":"b37bb2b75865ae13fa518fc19ebdc4e80e0d6d71","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-0.0.1.tgz","fileCount":31,"unpackedSize":35112,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbJ7qRCRA9TVsSAnZWagAATakP/jB00JKBJnfKHXRxkpPm\nKFKYIwFJPpZ/oaPOpKh+Y28zvOeouNzFpm0MllT2yR7j+oMNqKxnet/iDSs5\nRWzUSnExZQCdHuacbOoAxxcTZit7Cr7AB7aabFRMylgKXLwv+0tg5PpkvKhr\nxuQ6cCCncvPR+VaUc8tnoDBcPN7tpjT61lSkkotM0FwiX8IQjB0bVj2egZPt\n7qF65IQzFne3Dt794yJoQqq+sVZ4rq6rSmVJkEGJ63KMsWgIqXMjK0FOpIeU\nAeVs7T2DihBahIm4o2+vqkExCnY1MZZG+esx/tdN7pLVt7u+WlREVMbQ+at2\ngUrCCeNzUbaZJXauJjidh1BoAzDotw/O8xVSUmi6kGSG1Kzl5eR9XD8nyhCE\nbYqt0icxA9u9sJpg3LVKK5ZVcZC9E4WoYpUdTZU6xuKnr7XF7Zifpqb7FwR/\nx1BwFZUzooi1ReK2cZqzajwkN1SbhreBhJgiQ066xHaVedtG8T3ewrCpOegc\nLAGvjzmkwr2hDsAQY5tK7ZqBjYbqPK3DDq6k2BUdPeYeJZLbGgwidVCVw5mA\nma4cAZI+voPwxYITr31k9sMV0hzqgNqRZDS9y9vf6AmAJ2dzlYHL+2LZO9QM\nRnherm+cwhpZ7go+199kaevM4B7CZQ3giIor58ribnZCXMuLUsV47y96F/Tv\nhRZO\r\n=oxsH\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"mthenw","email":"maciej.winnicki@gmail.com"},{"name":"serverless-main","email":"services@serverless.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_0.0.1_1529330320882_0.4166516479536475"},"_hasShrinkwrap":false},"0.0.2":{"name":"@serverless/platform-sdk","version":"0.0.2","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","test":"./scripts/test.sh","watch":"./scripts/watch.sh"},"dependencies":{"babel-polyfill":"^6.26.0","bluebird":"^3.5.1","body-parser":"^1.18.3","chalk":"^2.4.1","cors":"^2.8.4","express":"^4.16.3","is-docker":"^1.1.0","is-wsl":"^1.1.0","isomorphic-fetch":"^2.2.1","node-fetch":"^2.1.2","opn":"^5.3.0","querystring":"^0.2.0","ramda":"^0.25.0","source-map-support":"^0.5.5"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^22.4.3","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-airbnb-base":"^12.1.0","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.11.0","eslint-plugin-prettier":"^2.6.0","jest":"^22.4.3","prettier":"^1.12.1"},"publishConfig":{"access":"public"},"gitHead":"9cc1b99040e5db1f2557133eb69ebc6de3368109","_id":"@serverless/platform-sdk@0.0.2","_npmVersion":"6.1.0","_nodeVersion":"10.4.1","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-SjEG4jMaAeMax+i2zjfrZGfrnQvYZ2wiAFTdjleVyzciaSrXLWacOqvSKy0M9K+DGRsn467eNyDbWJs8gkTJDw==","shasum":"5d54420df0b095ea93bc1bbd29061bcfe182521c","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-0.0.2.tgz","fileCount":31,"unpackedSize":35312,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbKjVaCRA9TVsSAnZWagAA/ugQAKG/Y92vMoNagp3vrHML\nK72/8ZiIDsV2dTIWKHXKi+fK4MZ7cFA2dg+lfSpNVE48uD2mU9xDCt2k5n9/\nbIsnlSJEoKtTmh+wDNEpPRytXttsYpwACzL+OijUV0J60uGViE4qiGRZX+HO\nJjQO8k2GBsb/zB/FuPBdhXYFJfGQUfiyqYsSLvoTsXW8BCRgHj+yjddlXNsG\nFb44+zvQ2HrUcf4D0KV0vbE6dLUUx70dCIWw48GaQs9xLi1nGUe6CaSOXM+g\nBt4Nf6xl8MvfoAwEPiV2widmHT2Uf1QXOoQMSzMST7aYDtcZwytZGR1MItH4\nfE6WKyNvnqXKv7pfXR4yZpR3mfIm+p8Eik+bGvkC311xpaxE7hN8QSUnHNFK\npH2U0m9LwJqfA46lnAOmJEte3VFmtcM8XrkCX+DD6WjBCU/0kwGOVKcJofAL\nIVyueLWyWihYSMWR8guqobgtgTRsMh2w5OxYnAYSvQ3Y+6P8zlfEkPpQl+KW\ni2Pyl2XsxlNCCIWw6JSxM+s2AgkeqQAGLMW4KTsbBQHJ9kCzk66umemPGeev\nrz/N7+3F/wRYVKGXNdo5e6FDMpY8/zlzRobazoOcdPQHwMj85/xGr/QJ/9TP\nJKgu5jHej64wRTg38WpNEMmUgr+a7QDl5kyuze/tJRIQDhGr7oLr4MWeNkRm\n2mnY\r\n=PmXm\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"mthenw","email":"maciej.winnicki@gmail.com"},{"name":"serverless-main","email":"services@serverless.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_0.0.2_1529492825592_0.29902367115340556"},"_hasShrinkwrap":false},"0.0.3":{"name":"@serverless/platform-sdk","version":"0.0.3","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","test":"./scripts/test.sh","watch":"./scripts/watch.sh"},"dependencies":{"babel-polyfill":"^6.26.0","bluebird":"^3.5.1","body-parser":"^1.18.3","chalk":"^2.4.1","cors":"^2.8.4","express":"^4.16.3","is-docker":"^1.1.0","is-wsl":"^1.1.0","isomorphic-fetch":"^2.2.1","node-fetch":"^2.1.2","opn":"^5.3.0","querystring":"^0.2.0","ramda":"^0.25.0","source-map-support":"^0.5.5"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^22.4.3","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-airbnb-base":"^12.1.0","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.11.0","eslint-plugin-prettier":"^2.6.0","jest":"^22.4.3","prettier":"^1.12.1"},"publishConfig":{"access":"public"},"gitHead":"df2db64273d7d56693f2b99a14bbfa3b87379670","_id":"@serverless/platform-sdk@0.0.3","_npmVersion":"6.1.0","_nodeVersion":"10.4.1","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-FXUeUzEL8dpWdNUEop1Mj8t5owSahFkWfC69ERQhNWUFTQL3jACyVHuqx6XZHPtlUu8MqyuiP/CXFHJmI8ZF9A==","shasum":"8be68054b94958786d98f2a02eef3f1abe077c67","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-0.0.3.tgz","fileCount":31,"unpackedSize":35312,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbKkaKCRA9TVsSAnZWagAACPsP/21UyQRmsC/cPODnGxLv\nxS1n0UFwCF5nt8+5ipfZU6a5XRYDX5iOzPp9KrzN4TxpdQvwvm2HQSU8ZPzD\n6GbUPluWGn80r9qhVbWxZfZXNUcamcMVcGC6sKLlv3gMLJzzwISZpsx6N/bB\n2nMdxA/I6SxZ+bvFLqPjs7+VPyZXcLHe4TqRXYojRr7tKu/Q1gtmDPafiQWz\nlAtTIEYVwPbYUJ5desiIudiGpwWhyn42Q1cJbXdjYlpljsfR3P/GjEe/g4dJ\nKUMnXwvA+H7Zr/qAdk37iqkumTuJzcHqzfrLBo4MvKfmWgpNbFMwDg+R6kZ5\n/CdbJ6kd+hTV+Z5XKSAxDIoMZh5QowCkAN/69vG65PKpkXyYOhYTZE/GjFKl\nusxfm9ATz6bAZCIOKUq/G7WLv0yu60API5zgxSWPP45aVctyZZ4vlC9UlRrP\n1871G6o1HgP6xhxF/qid66QI9rG30e1MDJilWhVH+KL4TZzspQuLQiusC2wQ\ngaoiHyZtU1pNunJkRmCcfM/xtVt1llkNiqyOBO6txFxY9ymGNco6By1ViOsD\nC4QqWMzy+ToODCiK/mlDs9Y/vewjRxVDoiLgoNq37CtoAMUunUjvSXVsjz3O\nBPr5O+gOFslIX9nS5M0FjeCZCBEdlHEN8eM9/JGO+habfttfgNf25nvowuFx\ntaF+\r\n=UKiB\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"mthenw","email":"maciej.winnicki@gmail.com"},{"name":"serverless-main","email":"services@serverless.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_0.0.3_1529497226126_0.89223715461098"},"_hasShrinkwrap":false},"0.0.4":{"name":"@serverless/platform-sdk","version":"0.0.4","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","test":"./scripts/test.sh","watch":"./scripts/watch.sh"},"dependencies":{"babel-polyfill":"^6.26.0","bluebird":"^3.5.1","body-parser":"^1.18.3","chalk":"^2.4.1","cors":"^2.8.4","express":"^4.16.3","is-docker":"^1.1.0","is-wsl":"^1.1.0","isomorphic-fetch":"^2.2.1","node-fetch":"^2.1.2","opn":"^5.3.0","querystring":"^0.2.0","ramda":"^0.25.0","source-map-support":"^0.5.5"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^22.4.3","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-airbnb-base":"^12.1.0","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.11.0","eslint-plugin-prettier":"^2.6.0","jest":"^22.4.3","prettier":"^1.12.1"},"publishConfig":{"access":"public"},"gitHead":"621291f9df4449a01f35f02737dfcd0e9421df13","_id":"@serverless/platform-sdk@0.0.4","_npmVersion":"6.1.0","_nodeVersion":"10.5.0","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-ChPqppNLLjF2Kn4jyDx3W1OxjmcB2Ktg3/y0spScUnfMX73CST/zgv9k/kNfbJ1+ocFRXyPIsXYiZNHyI1vyqQ==","shasum":"d6d1f1b43d2a1a6cea5cad2afaff9d3319bec09b","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-0.0.4.tgz","fileCount":31,"unpackedSize":35327,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbK5cSCRA9TVsSAnZWagAA+30QAIQTBmzusjZs/seMIORX\ncgT6WjeDZR/6rhx/MQDLHfbujExvP7VhtCnbIEzi0f47Vgfe2ML+xf2VpohS\nuN9OE7WCqtIqAIJbU7DrZzioilVV4NyTK5lu9WQKkl8fXce9Hnb8V5mxaMQj\nvPMAEyODxjxUEj6RyhPakjT6a5seDmStPR20WAyd3zwcPaNDlPEzzCJ1g7GP\nl4Wj3rTdvpa/F8UHLNXGt6t/T+xsAKJ0ukWYEFf7Wzzb+/C+N2mnlPwfdJDV\nvkibW58euuLEwJzfcATNz/hI2QdBBoj8wJPWZp+SxUeUo/noZJOOYjT2pBKt\nvcilu4N6zN4ijm5HpWaxldOLMtYchBfZEM4XyJffZgg8nPWdN2weGnyF3goA\nDBT1mT3CwWK2Vh56pbhiudd8KjilsUj1tO4YUAfERB+Sy0EcyLxxCyBu8ch1\nsCAUhImjVtYR+zU4Wud/Ftl/N0fF+VO86CtBmsFecOl07yYwvUtO9+g2FR7c\nlgkTdrgDcAmQCZTi6jOKrEUdCVuHYarqwsqJDGeN0FHU7twOVctgg3JLaKre\nzND8dA7HBUbxkYTH4ZXMxRpyjK3uGl6sB9fs3Dnoiy7IqlDMOhLMUUtcR+Ub\nZ6pctbnbrrE89t52zX6kW8xPns6rugi7WIQIQSIr8QR9t+HXSuif1Z+MYlvt\nWeEr\r\n=huyd\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"mthenw","email":"maciej.winnicki@gmail.com"},{"name":"serverless-main","email":"services@serverless.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_0.0.4_1529583378080_0.5987088622420973"},"_hasShrinkwrap":false},"0.0.5":{"name":"@serverless/platform-sdk","version":"0.0.5","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","test":"./scripts/test.sh","watch":"./scripts/watch.sh"},"dependencies":{"babel-polyfill":"^6.26.0","bluebird":"^3.5.1","body-parser":"^1.18.3","chalk":"^2.4.1","cors":"^2.8.4","express":"^4.16.3","is-docker":"^1.1.0","is-wsl":"^1.1.0","isomorphic-fetch":"^2.2.1","node-fetch":"^2.1.2","opn":"^5.3.0","querystring":"^0.2.0","ramda":"^0.25.0","source-map-support":"^0.5.5"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^22.4.3","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-airbnb-base":"^12.1.0","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.11.0","eslint-plugin-prettier":"^2.6.0","jest":"^22.4.3","prettier":"^1.12.1"},"publishConfig":{"access":"public"},"gitHead":"2178b42965340970900fa3469b001e75dc84d041","_id":"@serverless/platform-sdk@0.0.5","_npmVersion":"6.1.0","_nodeVersion":"10.5.0","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-qH/1bSbouqe/zgMozm7jQeHPM1Z4F/VbAKbnCkCPnKgrzGpvOONSHWsIJJI443QnLnH6UP3ep791twap7CmOPg==","shasum":"3a9384b1aa75b3effb1bf0ac1689cf5de1ef99c9","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-0.0.5.tgz","fileCount":31,"unpackedSize":36186,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbMiB5CRA9TVsSAnZWagAAAy4QAIy5qWW06uQbsM3+BjWn\nZo5MfwE/JoFTlL+8yBYMQdoWExhVjRKfB+sChAzzpUICMEI6JsEuNWZbeKhB\nDJx88NGkBJluGyqocCH1Oqb4r5OaKLk49Zfs6uPw+Dqd70/6uPDKaf2/IurF\nnjH50Pwkvasx+laE8dmUxlV0FkgztQScgiO42rTfCwfpv+6Oc+CWNqQpAq72\nvyt1J3eh5hOpgs8LrEtzR3JB5dDrx/eC8nrxTEr5+hEDIWFITiikPkO+sePb\nY6ZYJbkSu3n31WEuqysVmKYky6tXBjvlwMeJtnJkaYLFhfhLX/zmHzxpVkg7\nUToWNLURUdnLfhOJlsahzuMyQTcY2uHX8iNZXR0kdz7d4PFBYBta+ahc/9Gp\nR1y5nZdYJtbEE6y3AVPRk+6e0o0V4nO4jdo9AvXrORwLfw+GVGl5GpX9XWW9\nmgAIep64wCmPDdV17ohs6z/21nSWPRWPi0GdxOrvw/JpWyr1L4vDCABoj2Zz\netlr1BtjiXnqbC0l1uk6hD0xtbvlITvkb+w/PcolcUBrHlCGsWgmjopVlmVb\nhIsn5yaVMmazBTlLsWjGP0Js2Af0O5TqPJnBWKvOkZMhkYaU8zpIVY/jI34a\nnka7MShrQMTUWm4sWYDuViSJPkrOi9Y3qRFPvPdSER/ojCd4FfXsnnb05sDN\n0JP5\r\n=/FcN\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"mthenw","email":"maciej.winnicki@gmail.com"},{"name":"serverless-main","email":"services@serverless.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_0.0.5_1530011769742_0.28370432573611803"},"_hasShrinkwrap":false},"0.0.6":{"name":"@serverless/platform-sdk","version":"0.0.6","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","test":"./scripts/test.sh","watch":"./scripts/watch.sh"},"dependencies":{"babel-polyfill":"^6.26.0","bluebird":"^3.5.1","body-parser":"^1.18.3","chalk":"^2.4.1","cors":"^2.8.4","express":"^4.16.3","is-docker":"^1.1.0","is-wsl":"^1.1.0","isomorphic-fetch":"^2.2.1","node-fetch":"^2.1.2","opn":"^5.3.0","querystring":"^0.2.0","ramda":"^0.25.0","source-map-support":"^0.5.5"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^22.4.3","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-airbnb-base":"^12.1.0","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.11.0","eslint-plugin-prettier":"^2.6.0","jest":"^22.4.3","prettier":"^1.12.1"},"publishConfig":{"access":"public"},"gitHead":"6cf41a28190411bd40d43cadbfb7c8c52bf9e153","_id":"@serverless/platform-sdk@0.0.6","_npmVersion":"6.1.0","_nodeVersion":"10.5.0","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-/cmJ8tpqa+gDwhabDWqi2+vDAU69iZl2xflenzUwA8nZj8uPMBba3hDW4X+tNkrnsd6n4wYpq51UXWIDKGSObw==","shasum":"158f60fc7551cb0edc4799e16c3eefdc76b7aa70","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-0.0.6.tgz","fileCount":31,"unpackedSize":36206,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbM45JCRA9TVsSAnZWagAAi1QP/Rn+Xy+AWoZdI7pAN5zn\n/APLZhT0viNzd7vBwohjQgSWH6MKAu+GbyM3riweDzl+5Enw8R+V/sKIJ4Oc\nOdUGe58d+NC6ooJ3AvigSBksYkLavz7775uV8g067g/7dE2lWfWbkRnwp5Nr\nR8ModI9kUVEY5XJSNHb+YFPwiCc2sUoe5yqji1dnIbOIqslmtVNqQnGuoeEm\nt+2hFRCq8UBD901hpY+Lseaqkspb6ABiwU2NiNMq7B4ea44/Rhi0Nx/WD26y\npWnj1r2f2GKXDutXWhg1OuC/SGbhZ3O6QmMGNcXiMskaZ4lia8d+D5UMfOJ1\nBemvT48VdOe2Bpue59mIca8Kzz/1tWX1oEjP39NtcuaEx9pP3cN3i8YRHFrs\nP2kPEJha+TU5Ro9ytwwDH8nON5QaskhWyYJHEKBJo8y4WfzpxcoitAGQ2iP5\nyHDYgqKycNpmwgm4rSL3CF2dERuwh2RMlcB5GqVrYhA0oNyHeV1M1uzCbJi5\nlYu+pLKffRd7Gz37jGuDYILtz6wRKm5VYVs0YTesgsOtl2KtXqnqEs4nwe4T\n5phYGtLvaIWyhF8dtkkh+kjvlItdEf4mnO4ifxqbqJJFXuhTChpCk3JVP9q1\nIU8s116KAkTRPu7HaKhP4yfSJIbak2LnbOxMYcxWbz/Mz2eV4EPm7w5awEsL\nGwAp\r\n=TauP\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"mthenw","email":"maciej.winnicki@gmail.com"},{"name":"serverless-main","email":"services@serverless.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_0.0.6_1530105417320_0.3479364560689322"},"_hasShrinkwrap":false},"0.1.0":{"name":"@serverless/platform-sdk","version":"0.1.0","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","test":"./scripts/test.sh","watch":"./scripts/watch.sh"},"dependencies":{"babel-polyfill":"^6.26.0","bluebird":"^3.5.1","body-parser":"^1.18.3","chalk":"^2.4.1","cors":"^2.8.4","express":"^4.16.3","is-docker":"^1.1.0","is-wsl":"^1.1.0","isomorphic-fetch":"^2.2.1","node-fetch":"^2.1.2","opn":"^5.3.0","querystring":"^0.2.0","ramda":"^0.25.0","source-map-support":"^0.5.5"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^22.4.3","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-airbnb-base":"^12.1.0","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.11.0","eslint-plugin-prettier":"^2.6.0","jest":"^22.4.3","prettier":"^1.12.1"},"publishConfig":{"access":"public"},"gitHead":"9a0ff01ef8e930c68aca61b23cb8578ff11284e4","_id":"@serverless/platform-sdk@0.1.0","_npmVersion":"6.1.0","_nodeVersion":"10.5.0","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-Tx9S4w9CjaVOAD9BHk9h/6yCH9rsuTa2ZkI3qC6dSUOtaDRlNwXKiCZmENA30BapKIgxIvRI9cWgpoXEfJl/gQ==","shasum":"69e14f050d1f8dea5cffb559969bec77d628aa81","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-0.1.0.tgz","fileCount":32,"unpackedSize":37673,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbNTqMCRA9TVsSAnZWagAANPUQAKUqABBhaxiDe6zCfR90\nKD2VIlPkh5DDozQsN4JogKqgLr/GoctcnWjL+FdaqELdic8TQARNX67vRINE\nSwjTHmzv68vkuFraUdxtQYL2acaAEncLMMnaGk9aI9WfVFpJlzgCPB13DyD/\nTdFiiji3bNAxt/nIh29t0jhN5AvuctTn3u2zdnKGojtqlHX2Jf+2CucGaKm3\np1fIb4PEaHdU24BOVNjbhcz4drLcTec/d9DBM380orfmTOj8CKftxjAAUwHo\nsdMjyVm7RyFqVrIF8fptPThlJC+GonTm6YtsbjbkokDKKmctS08N3+P6uaOk\nmmAiuzW6PJ6xmFIo92sP9C/ukgMD2nXlZX3MFVDiWL67dAxU90tPk3SUocAY\nwA59cZKNzQH5xImZyUqUB4nISsnx78OcdUBC/LtQufWSbE5oZRQ5inUyAPrB\n71c4mLeFezTh+nSWSagw7Lep0cNy9cA5Yadbf6ttBD6Ym2yrfeZIOrePjlir\nDoFK4bl9kvwyWR709gJSNc+N5Q3WQUUbVJ+X0rp/2R4DmdvbneXFX84xO7/N\n6V7k4WlPemEdNU/A5vyHrX1yyh1OVpoggWxWZYD/5Ow5eCG5fwoamNCv9jE4\nQnXdUsHu9PDYoEcYrXkG8posSzMAF9uA4TH2tN4T3ehexQIfEuGdmb0WXNC6\nGqdF\r\n=Gmua\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"mthenw","email":"maciej.winnicki@gmail.com"},{"name":"serverless-main","email":"services@serverless.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_0.1.0_1530215052401_0.859666703237669"},"_hasShrinkwrap":false},"0.1.1":{"name":"@serverless/platform-sdk","version":"0.1.1","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","test":"./scripts/test.sh","watch":"./scripts/watch.sh"},"dependencies":{"babel-polyfill":"^6.26.0","bluebird":"^3.5.1","body-parser":"^1.18.3","chalk":"^2.4.1","cors":"^2.8.4","express":"^4.16.3","is-docker":"^1.1.0","is-wsl":"^1.1.0","isomorphic-fetch":"^2.2.1","node-fetch":"^2.1.2","opn":"^5.3.0","querystring":"^0.2.0","ramda":"^0.25.0","source-map-support":"^0.5.5"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^22.4.3","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-airbnb-base":"^12.1.0","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.11.0","eslint-plugin-prettier":"^2.6.0","jest":"^22.4.3","prettier":"^1.12.1"},"publishConfig":{"access":"public"},"gitHead":"6d2657568f511104569c4a6a866ca66ed3d59187","_id":"@serverless/platform-sdk@0.1.1","_npmVersion":"6.1.0","_nodeVersion":"10.5.0","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-HlzsbHs+dm3b7zyrQ2v8XdRTys/AIrIDZBDaBbcqSR8f0o9cFbvT7Jo4kt876LuZY8FX2ntkQmvKHIHgcvF9fQ==","shasum":"50f590b6aeae64a699f250af63769dab96beabf3","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-0.1.1.tgz","fileCount":32,"unpackedSize":37995,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbNg1vCRA9TVsSAnZWagAA77UP/3uDwa2g5N9eo4U8aNEs\nCHKb8b6wisV5X9fZQXSW1TUBIzQV0+kFvaN9532CpTH0xq/pIWkpMHEcT2kc\nxrfyxdrKDEi2BNMfZLfaVfWopEBR+go6EpkCOTkpr1zjsjRgrXLcHreNjsNh\nPKvxBmNUo6S3ufy+7doMIvzjkDlhep6ulp6pXDFt5okimCZl51pDSacaW61g\nBgNwg1+T+BeYmSnFzyFTekmX+uE+XBHZS8+CzvmlF/2qERAnc3ykFxGDwWpB\ndIupNIK3JjMyvW9/Bw6cATrfaoLH37Y6d0/imx8ETcBhbRrNssRI/lvcQfIZ\nrNbxM1Sy3YWyRxYB7ivxUMLLMINPInYU3r1nWl5Hwx7NeHkH3qi6w1h+Zg7x\n5GM+1gwyBBq4VclDXaE2tfex4ASOvPb/LEcrwcSTkoPPZ0phEq8uwgmeG/Qc\nael1IhEpTEguKNSoc5LsbXSjq5zXfgI38pGrrvv9RRcy7aB6M0KaGy/00q4/\nLQn42fWqYuvZSbY+60PVdqXRPbfRiSLCkIRxCYCnv+ijgasiWDV/oBzpMxVt\nwezQTGVJyOVEGG/hJ0P8l5kJNKwRvds7/y0j2IAhYDolwtmzLmMl0ELTBomq\nPh8pTMy1bLUyP8gBQjkX6+tZWgCaws3AJIgM00NlpjlV4mFAipWyA6q8Gmrz\nB3SQ\r\n=VdAc\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"mthenw","email":"maciej.winnicki@gmail.com"},{"name":"serverless-main","email":"services@serverless.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_0.1.1_1530269039636_0.8804569706127756"},"_hasShrinkwrap":false},"0.1.2":{"name":"@serverless/platform-sdk","version":"0.1.2","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","test":"./scripts/test.sh","watch":"./scripts/watch.sh"},"dependencies":{"babel-polyfill":"^6.26.0","bluebird":"^3.5.1","body-parser":"^1.18.3","chalk":"^2.4.1","cors":"^2.8.4","express":"^4.16.3","is-docker":"^1.1.0","is-wsl":"^1.1.0","isomorphic-fetch":"^2.2.1","node-fetch":"^2.1.2","opn":"^5.3.0","querystring":"^0.2.0","ramda":"^0.25.0","source-map-support":"^0.5.5"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^22.4.3","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-airbnb-base":"^12.1.0","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.11.0","eslint-plugin-prettier":"^2.6.0","jest":"^22.4.3","prettier":"^1.12.1"},"publishConfig":{"access":"public"},"gitHead":"40f75a0f40e1f93237d06b9dd1f3ea658b8b839e","_id":"@serverless/platform-sdk@0.1.2","_npmVersion":"5.6.0","_nodeVersion":"8.11.3","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-9IUhnETrx7JdRbnJTAEJmrAEOGfkaDq+xfIcWOdFbF7qWMCRjdc1ajkRaAF9i8n+L53FVsUYXR8xZCmJEemnhw==","shasum":"47b41e773df274680a78071c2089b9ed5c8cd472","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-0.1.2.tgz","fileCount":32,"unpackedSize":41967,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbN2o0CRA9TVsSAnZWagAAtckP/RR4lQ4457eUgkcwjLyO\nFnLshm9Ko464LdKjTfsjydt0lp82/QD5QJNmB+H6lMoPKz7KD4l6PJreBUWJ\nMKl64kagCt7Xm4gErMdMn2Fufj1FaUkFz5dRhUZhhpsDwKvSFnsJQDm4I8xD\nzg7c1wL7wq4J87MhnoljuggKCXmSXk3HGeR5o9l45jYtiDGiLFRifpaZZvCr\nwMIDYY2XvtmbsKy7x3D6j3ufBTf9SFU2BJl1B14i4gTxeCX4/NRGt/xnbUoE\nfPe87oeYYVsBcygtRsUcxciXkY7L+VYArTRzWuF/9i1LmzvrFEm6XaU1s8eU\nysS12dzZmtNTabh3qtyqQY7FZ/Q/tVQ4WABcdRhEE+hJgWATd74PqsWJEptu\nluKQXmiKJ9aEP76p9NlJnze8Td+XqMVmLO88qO095lLAaqNh1Og/WoanYN1a\n80DwTUMJWlld5ZeJshs5TpctDf3FYmgmMkr1v2Y7nfQlpEASc7lA+STReDP0\nJvacjQnA2pUJ7K7faWAD3f7OKV0DJsMTc/ozjQnH+k70i4VrqY9WxrxSi5zd\nbMB8D+MHxVs282hZk1QOoFsR5wsAh8/zR5s9uB7k9pUbE/+J1DquXZEBilMO\n9Qcu23UrlKRcvP2HhbssDFMFg+x3So6KmyP2QqtHTkOiuLCd4ajHUbwLN6w4\nagaw\r\n=JSet\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"mthenw","email":"maciej.winnicki@gmail.com"},{"name":"serverless-main","email":"services@serverless.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_0.1.2_1530358324828_0.3116782397497535"},"_hasShrinkwrap":false},"0.1.3":{"name":"@serverless/platform-sdk","version":"0.1.3","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","test":"./scripts/test.sh","watch":"./scripts/watch.sh"},"dependencies":{"babel-polyfill":"^6.26.0","bluebird":"^3.5.1","body-parser":"^1.18.3","chalk":"^2.4.1","cors":"^2.8.4","express":"^4.16.3","is-docker":"^1.1.0","is-wsl":"^1.1.0","isomorphic-fetch":"^2.2.1","node-fetch":"^2.1.2","opn":"^5.3.0","querystring":"^0.2.0","ramda":"^0.25.0","source-map-support":"^0.5.5"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^22.4.3","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-airbnb-base":"^12.1.0","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.11.0","eslint-plugin-prettier":"^2.6.0","jest":"^22.4.3","prettier":"^1.12.1"},"publishConfig":{"access":"public"},"gitHead":"c4c8703a53d18646cacd8389139c527a07068629","_id":"@serverless/platform-sdk@0.1.3","_npmVersion":"6.1.0","_nodeVersion":"10.5.0","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-vLUU8wkwK8HVwRy5LU93bm8rMSMx+XoQ+OTI8f7rBtBmFWwWC1Wae3t7YW38NCmkZvqVONCeKtKuer7tFlLH5Q==","shasum":"9097521be0945d47c085aa508ee0e854f8962e78","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-0.1.3.tgz","fileCount":36,"unpackedSize":46798,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbO38KCRA9TVsSAnZWagAAPXsQAJ08IR5T/40N0bsQoLNP\npg7UwoLzz4Lqv9Kvi0k3H8/zPmWowEie9OXiqkpvZA02bZW40saOMIYwuKg+\naFTpLn3nwzASpg+ax5j+oPZ0pRcLRPA02PaHhFifu9NhAex16rbcf5qQWI9z\nOJDCI4vw5MXEH8Cn5qftXcu7t/KvXYHDCGqhIQy9ABlMRXftPz1lBN/5NJqB\ni/ddGKk91JEsG8pfo5DZ2tl9pJ24bEtgroJgmupUUnq5t1MaiuNVJ6b2hlpU\n+oCdShKNqBK9eqKqDuySvgbYKXz0DeFVU2xt04qrkQrdH2BRnp66UGrccdNg\n2NvgBvbl1IsMbgjX4OPWKjK6JIL9Iw9x44c1w6pq1wpx0OClTVoj/9i9QZDn\ns57ubP84h1V1T3eim4K9cOoKEXiI2PCELJ24aMshyDlxwji8cVJDqJjIEDwf\nv4cgDvuWm4LKYPYJIpAno+kt7JqXsCqxNwKlzv7FSmIyQ51Ap9avgpc3SfuP\n9T2H3YzAEWDLBw62lK8w/PZJQxigPWRLBaYKrerLuRV0q95OYUy8IlNWkALh\nmWnRQk140iuKXMZWGHy1cw+Erk1ZSzSkmd0FwqzOweg7jjICvTSIFq/Up2ib\nb3hz9bv3TOuGQZZUzZ29Ny35xu1Np5otwQTCpLc3AnVfK4ycXkyrOjC/CSQi\nKtg6\r\n=wZcS\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"mthenw","email":"maciej.winnicki@gmail.com"},{"name":"serverless-main","email":"services@serverless.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_0.1.3_1530625802466_0.08605637157591062"},"_hasShrinkwrap":false},"0.1.4":{"name":"@serverless/platform-sdk","version":"0.1.4","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","test":"./scripts/test.sh","watch":"./scripts/watch.sh"},"dependencies":{"babel-polyfill":"^6.26.0","bluebird":"^3.5.1","body-parser":"^1.18.3","chalk":"^2.4.1","cors":"^2.8.4","express":"^4.16.3","is-docker":"^1.1.0","is-wsl":"^1.1.0","isomorphic-fetch":"^2.2.1","node-fetch":"^2.1.2","opn":"^5.3.0","querystring":"^0.2.0","ramda":"^0.25.0","source-map-support":"^0.5.5"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^22.4.3","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-airbnb-base":"^12.1.0","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.11.0","eslint-plugin-prettier":"^2.6.0","jest":"^22.4.3","prettier":"^1.12.1"},"publishConfig":{"access":"public"},"gitHead":"4d07326753e61fc33fd608aaf7db165ca925f676","_id":"@serverless/platform-sdk@0.1.4","_npmVersion":"5.6.0","_nodeVersion":"8.11.3","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-HyyRgiTy6R1nmrXMceC9ft3qjJhW0lkLaFYBvG2jfGkYrxWq4d5GrUGwYAaSJnqMZIVTxICpokthhSM5wWIcYA==","shasum":"223e3f407d539036186d4137f8fe6fe692d4cee2","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-0.1.4.tgz","fileCount":36,"unpackedSize":46798,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbO57fCRA9TVsSAnZWagAA3bsP/Re8f5SKQ+4MXWWydgzP\nzg99TGaZpDn0p792UCTxImYY1K7AMK+nRQIqHgMPzk9+WCC858DtKMahfgU2\nqduOpT4uGxiOIO6khL6bMYmb7FPK31vguNF/rVySpCAPcx0Ys5lXcf5FlKYH\neIyTca35ObyODfLqxqb57F8R5Z/YIdetkl/oRDha4G7w7ikGp2o+vanmfiwK\n7u892rkW+F97mmi7usjHmMQXZwHUG7r9SQd5JzAgZIdcA4xTuoEJyiMiDV+o\nabXoZ6ARbxoJJ61IvLasCNcXnTOr3z++lAdNOpcUltXrcXO5AcYNLCvXX8n8\n46BA7r3ycq8KQRokMXDx/W/dmtjtlol0ICWw2/rF0/WDiKqsow61fbbEdzCp\nTi2SAsgF5KId4kKiVlgORmU9KScWVnfyHypYd5H5jPywIkMx12b6oE48gyza\nvU61+EKHgyqahw8xIFLOmv1rnS4MymGUBxAdnbZ3oT3bFOxKUSkwWs7N1itl\nz0i/MhqYd/JdVu/PI+sP3rA6a0+iPoKo2KTg5BVE4kDYPRyziYzoCehySJaE\nR7hSfKEHlBXkIQ19L3o4RasIZDMfW41t8/zCkPkSYN1WMzf3T/9c4ieywMeb\nTeuUP/o8O4VV0G1Y+v1gfQi5a1TH8c3lYw5RXyv87BXqFJzmZm2D6mymXPB8\nNnP1\r\n=UHtd\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"mthenw","email":"maciej.winnicki@gmail.com"},{"name":"serverless-main","email":"services@serverless.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_0.1.4_1530633951216_0.9194188848987048"},"_hasShrinkwrap":false},"0.1.5":{"name":"@serverless/platform-sdk","version":"0.1.5","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","test":"./scripts/test.sh","watch":"./scripts/watch.sh"},"dependencies":{"babel-polyfill":"^6.26.0","bluebird":"^3.5.1","body-parser":"^1.18.3","chalk":"^2.4.1","cors":"^2.8.4","express":"^4.16.3","is-docker":"^1.1.0","is-wsl":"^1.1.0","isomorphic-fetch":"^2.2.1","node-fetch":"^2.1.2","opn":"^5.3.0","querystring":"^0.2.0","ramda":"^0.25.0","source-map-support":"^0.5.5"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^22.4.3","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-airbnb-base":"^12.1.0","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.11.0","eslint-plugin-prettier":"^2.6.0","jest":"^22.4.3","prettier":"^1.12.1"},"publishConfig":{"access":"public"},"gitHead":"c749fc1fd832ae8b65d6e182bd4511e8daa063bf","_id":"@serverless/platform-sdk@0.1.5","_npmVersion":"5.6.0","_nodeVersion":"8.11.3","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-d61v7iSAqvNlT+9TBZnsJwmSmVtu6MERwa+IUTHj46RwICPYsup3dB0U4jy3mhTAk1XtQ+EWuUOSTZdck2aD8w==","shasum":"9ab1f14f4e14933f80cf20a3123dc21b0b7977cf","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-0.1.5.tgz","fileCount":36,"unpackedSize":46728,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbPGFuCRA9TVsSAnZWagAApvwP/i7nlOgaHVzJ5GoFauMB\nOR4Efe5DdAZuAm87ivlT38LrQ2BQ7YLP0CPdU9CXjQ0QLnsuhTA/UkNBbe99\nsxVDjsUcGTgT7msQKbEtAEksmvUrx0f1GooS/k0cI1OabFWepnqkrz4o0pF6\nk7DSAuy1w077fm0XUZ5K/Df52iAV9Zlw7rSpssjWeDXMdwmxO5Yez6KXTIwB\nB7G402jS3ntJfIjIAcm9cL8CwIr6uCW2eJDmCrvrIgZzqov4KmrvgFtNUncx\nmKx3qwSia/iy4B1ADxi/SAW1vscpsaKgy2aHBTkuzxCtVFt4NBme0v6XyvP4\notzhOxwDXhbvgo0bWD8jJnlzYKxeWGLm9XK/upIM7ZsfhFuukAcEmjN8YmSo\nz0Zj+X3fabP05PysyQCcmsmm+KiDLVjS8co5oMg7eMdU7wTvYHGnLenoGUde\nvI1B9KTO8CVKDMW/FsD6REMlDr2UcrK7n3ZXRuLDg6gDE69RaX23FTxDoTcF\nDvZ6hgO5eobmh5A4Me5ftu2/9S36JwaJeQ9pfwGtBhSCmLZzake182UJkTKD\nnWO20ZNfBTnDAA5Y66v+/Tad/+W0hXN1orxmwzRx9LhE8Va5KhQVD/jmS5wz\nhy1EgkCKwNjnuKKXaxqHBbRE+qbbp5hsbUsQCfmsJ358uTw5P+uGZgszUszl\npI1A\r\n=D1/t\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"mthenw","email":"maciej.winnicki@gmail.com"},{"name":"serverless-main","email":"services@serverless.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_0.1.5_1530683758151_0.5075294201238814"},"_hasShrinkwrap":false},"0.2.0":{"name":"@serverless/platform-sdk","version":"0.2.0","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","lint:staged":"./scripts/lint-staged.sh","setup":"./scripts/setup.sh","setup:ci":"./scripts/setup-ci.sh","test":"./scripts/test.sh","test:ci":"./scripts/test-ci.sh","watch":"./scripts/watch.sh"},"dependencies":{"babel-polyfill":"^6.26.0","source-map-support":"^0.5.5","body-parser":"^1.18.3","chalk":"^2.4.1","cors":"^2.8.4","express":"^4.16.3","is-docker":"^1.1.0","isomorphic-fetch":"^2.2.1","opn":"^5.3.0","querystring":"^0.2.0","ramda":"^0.25.0"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^21.2.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.13.0","eslint-plugin-prettier":"^2.6.1","jest-cli":"^21.2.0","lint-staged":"7.1.3","pre-commit":"^1.2.2","prettier":"^1.13.6"},"publishConfig":{"access":"public"},"pre-commit":["lint:staged"],"gitHead":"0f5043ec6b4f861f61a1605966345a31cc982958","_id":"@serverless/platform-sdk@0.2.0","_npmVersion":"6.1.0","_nodeVersion":"10.7.0","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-QOVJ0KP1VMNs6Gm64wdGBDQTwwRQYgZjC9f29r0sB94/zOBdhLCbfIfMNYE5Qe26ym9IGoKPj+cmJZo4QrGc5A==","shasum":"4394afb221b215e27b0f5c4ef713f93ec88cb2d5","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-0.2.0.tgz","fileCount":44,"unpackedSize":78558,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbVy1wCRA9TVsSAnZWagAAeS0P/28MFfVnGzhaKI1Lil3U\nBBHfstww/dpjJOBHt38XDgGPzh7Mn87jdXWiPIcdhRFTDgswT/xdqtqG9crA\nW0q6ELrjREitaNetvScPRxewQ1O2CVhDWK7cWILQw0p6r/FBAChGjd89x+H5\nCKtKnbnTvjfUtaUyjxE7Y9xqT9UVY/REsq5IfhJg67s21bmrxTBy6j/7M5WS\nIW8KN5CuP96rVoD80pUcydTe888zHSC6CfWuE+YER486gFZWZnCJoEc71PAF\nexMfF3X0qXlxK0Z4mXkD/jWcMXbBKzwMbOlFqdp391jnsigd2oJmf2JuqcR1\nnfKrj6gXd8IC0rQmtBxVL6BvrKgzixUNZ2v7hGQ2tj+vLyI05/g5WkcnM2rI\n3R5iNKbaVqd91Lhn0lf2Xs32vn0BqBESgGICA/mC3US7ZiP11KtmnwHf5shj\nmqkFhrKs07RoQc4YmqEm/TR38U8J3xXSdflvdgjAocc4yiikrAOemPNeXdLN\nR22ovq5iwxOPN1qEguS1RMrxmCSD8S/xKRNGZYFPH3Ax4NdlcV4jGzpAH7e0\n8NriXhKoUjMQjTQR6QvVaeGeBpqSp224txD0fTbErRdCYb7YQu/U8Tds7Ysr\njW0Htbon/rss86mALfyTt8Y+5kh/DMMw/hRe6dsvzWNdeYfXTkVow83sJbW9\nv4NV\r\n=f2lm\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"mthenw","email":"maciej.winnicki@gmail.com"},{"name":"serverless-main","email":"services@serverless.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_0.2.0_1532439920167_0.22020854388021505"},"_hasShrinkwrap":false},"0.2.1":{"name":"@serverless/platform-sdk","version":"0.2.1","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","lint:staged":"./scripts/lint-staged.sh","setup":"./scripts/setup.sh","setup:ci":"./scripts/setup-ci.sh","test":"./scripts/test.sh","test:ci":"./scripts/test-ci.sh","watch":"./scripts/watch.sh"},"dependencies":{"babel-polyfill":"^6.26.0","source-map-support":"^0.5.5","body-parser":"^1.18.3","chalk":"^2.4.1","cors":"^2.8.4","express":"^4.16.3","is-docker":"^1.1.0","isomorphic-fetch":"^2.2.1","opn":"^5.3.0","querystring":"^0.2.0","ramda":"^0.25.0"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^21.2.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.13.0","eslint-plugin-prettier":"^2.6.1","jest-cli":"^21.2.0","lint-staged":"7.1.3","pre-commit":"^1.2.2","prettier":"^1.13.6"},"publishConfig":{"access":"public"},"pre-commit":["lint:staged"],"gitHead":"d9341d34a8dc29b3f20a91a932d0ef7cf8bcb868","_id":"@serverless/platform-sdk@0.2.1","_npmVersion":"5.6.0","_nodeVersion":"8.11.3","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-Iq9t67LNSVXUiw/r66NS6EhIwQvc67Hd1D+1buGkBFz0T2TA5dOPvP1cmInDO4L2pxeWoZ4tLCsksz1XKHfDaw==","shasum":"1c6a804f489dcb85e2af641c9ed7c85cc202dc8b","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-0.2.1.tgz","fileCount":44,"unpackedSize":79843,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbbEu5CRA9TVsSAnZWagAAh6UP/1/ZYDaPSy4Y6W0IZCDP\nxd/s1nlxBSnPQkd9fvs1hjEs0N+uvsFgWk72g1cEuYvm6VjMEUr7LLkJ39NQ\nOTvYTc/LEkD6D6etmV56l2UQPQ1U9iDy8g3h6VStW6PTGx3SjUhJ74CSySgi\nwKEmJ8bhe3o+0zZ2TiyXN3TM84BMxJRXY0BiaKAfPyNAJJb+YkKJuOWboPTt\ndH3Z5WkfM9xcei/0qRN1O5WKOftGIkrisfO5mzbb89YFOwUw84/duOvBhQ0H\nVxx+61WI6AgCoFR9+u3d4l4VNUsgBkN7yJjntMdwGv//2HM7iYAhsvhvvaQT\nla3taWpWSaCBMNWYkWwJYHlhSJ3JlO4QT2WidIQ1Fk+5lqOoEfNPf/hchz+z\nlAHgEHsgNB8fInTad62gpsIC0WryGrIr8eKB7q1lxhlOltwkvKLqPAgxfLZN\nWvgBp8cy9zPOtoSBuUd6BEeGhqBi84XqgmlrXQ0+ImApY+iBw2iPeI3k5Ke7\nlGik+k4JggeJkv44XkJnbPZFe7nOjan48JMdMdT627DmjF7Y4VF/p+gA5jeZ\n4vzc/MfT5lLUFRlhPXlvjHAGelJyr7vCGdmsLnpYmLXM5nHTTMBte9hTslUG\nG1WQRJzZmGPuxxGSHIZnqYE1IU7oUsq7E7bbaA2203aB6/gXn7ufjBeu73CE\nd7ru\r\n=B4k8\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"mthenw","email":"maciej.winnicki@gmail.com"},{"name":"serverless-main","email":"services@serverless.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_0.2.1_1533823928695_0.5828681120566919"},"_hasShrinkwrap":false},"0.3.0":{"name":"@serverless/platform-sdk","version":"0.3.0","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","lint:staged":"lint-staged","setup":"./scripts/setup.sh","setup:ci":"./scripts/setup-ci.sh","test":"./scripts/test.sh","test:ci":"snyk test && ./scripts/test-ci.sh","watch":"./scripts/watch.sh"},"dependencies":{"babel-polyfill":"^6.26.0","source-map-support":"^0.5.5","body-parser":"^1.18.3","chalk":"^2.4.1","cors":"^2.8.4","express":"^4.16.3","is-docker":"^1.1.0","isomorphic-fetch":"^2.2.1","opn":"^5.3.0","querystring":"^0.2.0","ramda":"^0.25.0"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^21.2.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.13.0","eslint-plugin-prettier":"^2.6.1","jest-cli":"^21.2.0","lint-staged":"7.1.3","pre-commit":"^1.2.2","prettier":"^1.13.6","snyk":"^1.92.5"},"publishConfig":{"access":"public"},"lint-staged":{"*.js":["eslint --fix .","git add -A"]},"pre-commit":["lint:staged"],"gitHead":"ec9153ef840ba366d42fe56cef0d4ad97aec2366","_id":"@serverless/platform-sdk@0.3.0","_npmVersion":"6.4.1","_nodeVersion":"10.10.0","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-Gw0y/HTy/+fA78DYABloFBBvz4g1iupuKBFeTP5+TSl7pDfhGHOiqjEKWPnqQHmvJ0ON3KnmV+3z8RcFw3vOAQ==","shasum":"335adeb2759760e4232c321d72b4022e4dce7818","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-0.3.0.tgz","fileCount":45,"unpackedSize":80900,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbn7/tCRA9TVsSAnZWagAAALsP/RRHdD1vpQLUjoQW+gOW\nW39umIBnABbcXWFy03unRb+MV3lv2O8JdKgCl+35BvPOr/B8nczbPnxWg4X7\niW1CwQHTrVoxPpk63vow4debhEdtJ4ACtMBkLnajxfHCs1AifmTkPpOXaIL8\ncvRL0tqsoKSttT4rGNKb51s7KRNrJNX53+oEQuMRY9uD2pYv2gs8J7NORytp\nCp8XvjgyvUTDqTutJF9ZwitXtpNtv7B52CxEd+nz2CZ4eTRc8BPrji766cUY\nmnx3hpnB58O7t6lFcHR37rqBiRW4zuf2ApzcP0thG4ZUcwZUHp5EBy/fchiR\nXaKYiMeT0teQDj5YvSwyOIShW0f8nBxfcFDls6aw4xrQa9a9hWd2SqRGW1q4\nlv588tgnpmXhJ7oHDzIsWimjwtCa+10QovVCCon7VZmLGUqV0dGHPVH8442d\nRBmqswzV9eQUTCh6PBSXiFNCubwsR/nod7rqeqMAhpiZAA/iHVLbPMzaHVFH\nWKHBx8dLZN2m1zMEuqbixjVEJBqkTAoBT5SginxWbsEfP+fu4dQoyGTkoUAe\nAXiiIiqW5aOY2/afRwUQgTVEhWY66TplsfgwXiUx6HZ0uAzfGvaaB+c5O27I\nbMEkSDdgLb8E1le9CSPOaUNrZkYEctiHdZYbbRFbE7pgHLMTg2y/VrBtOv00\nBMCl\r\n=PC9M\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"mthenw","email":"maciej.winnicki@gmail.com"},{"name":"serverless-main","email":"services@serverless.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_0.3.0_1537196012853_0.9156857896526549"},"_hasShrinkwrap":false},"0.4.0-beta":{"name":"@serverless/platform-sdk","version":"0.4.0-beta","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"prepare":"npm run build","build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","lint:staged":"lint-staged","setup":"./scripts/setup.sh","setup:ci":"./scripts/setup-ci.sh","test":"./scripts/test.sh","test:ci":"snyk test && ./scripts/test-ci.sh","watch":"./scripts/watch.sh"},"dependencies":{"babel-polyfill":"^6.26.0","source-map-support":"^0.5.5","body-parser":"^1.18.3","chalk":"^2.4.1","cors":"^2.8.4","express":"^4.16.3","is-docker":"^1.1.0","isomorphic-fetch":"^2.2.1","opn":"^5.3.0","querystring":"^0.2.0","ramda":"^0.25.0"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^21.2.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.13.0","eslint-plugin-prettier":"^2.6.1","jest-cli":"^21.2.0","lint-staged":"7.1.3","pre-commit":"^1.2.2","prettier":"^1.13.6","snyk":"^1.92.5"},"publishConfig":{"access":"public"},"lint-staged":{"*.js":["eslint --fix .","git add -A"]},"pre-commit":["lint:staged"],"gitHead":"7801fad5c1f91e726e69f869b03e4f6519ae3187","readme":"# Platform SDK\nFunctional SDK for the Serverless Platfrom.\n\n## Project Status\n\n[![Build Status](https://travis-ci.org/serverless/platform-sdk.svg)](https://travis-ci.org/serverless/platform-sdk)\n[![license](https://img.shields.io/npm/l/@serverless/platform-sdk.svg)](https://www.npmjs.com/package/@serverless/platform-sdk)\n[![coverage](https://img.shields.io/codecov/c/github/serverless/platform-sdk.svg)](https://codecov.io/gh/serverless/platform-sdk)\n[![Known Vulnerabilities](https://snyk.io/test/github/serverless/platform-sdk/badge.svg)](https://snyk.io/test/github/serverless/platform-sdk)\n\n## Contents\n\n- [Installation](#installation)\n- [Functions](#functions)\n  - [login](#login)\n  - [refreshToken](#refreshtoken)\n  - [createAccessKey](#createaccesskey)\n  - [archiveService](#archiveservice)\n  - [getServiceUrl](#getserviceurl)\n  - [listTenants](#listtenants)\n  - [createDeployment](#createdeployment)\n  - [updateDeployment](#updatedeployment)\n  - [getApp](#getapp)\n  - [createApp](#createapp)\n\n## installation\n\n```\nnpm i -s @serverless/platform-sdk\n```\n\n## Functions\n### `login`\nOpens a browser for the user to login, along with a running server awaiting auth data once the user logs in.\n\n**Parameters**\n\nNone\n\n**Returns**\n\nPromise resolving to the following object:\n\n- `username` - `string` - dashboard username\n- `accessToken` - `string` - Auth0 access token\n- `idToken` - `string` - Auth0 idToken\n- `refreshToken` - `string` - Auth0 refreshToken\n- `expiresAt` - `string` - epoch time at which the idToken expires\n\n**Example**\n\n```js\nconst { login } = require('@serverless/platform-sdk')\n\nconst { username, accessToken, idToken, expiresAt } = await login()\n```\n\n---\n\n### `refreshToken`\nRefreshes Auth0 idToken\n\n**Parameters**\n\nrefresh token string\n\n**Returns**\n\n\nPromise resolving to the following object:\n\n- `id_token` - `string` - new Auth0 id token\n- `access_token` - `string` - new Auth0 access token\n- `expires_in` - `string` - number of seconds until token expiration\n\n**Example**\n\n```js\nconst { refreshToken } = require('@serverless/platform-sdk')\n\nconst { id_token, access_token, expires_in } = await refreshToken('some-refresh-token')\n```\n\n---\n\n### `createAccessKey`\nCreates a platform access key for the authenticated user.\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `tenant` - `string` - dashboard tenant\n- `idToken` - `string` - Auth0 idToken\n- `title` - `string` - title of the access key\n\n**Returns**\n\nPromise resolving to an `accessKey` string, that is the access key.\n\n**Example**\n\n```js\nconst { createAccessKey } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  tenant: 'eahefnawy',\n  idToken: 'abc',\n  title: 'Framework'\n}\n\nconst accessKey = await createAccessKey(data)\n```\n\n---\n\n### `archiveService`\nArchives a service in the platform.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `accessKey` - `string` - dashboard access key\n- `app` - `string` - service app\n- `name` - `string` - service name\n- `provider` - `string` - provider name\n- `region` - `string` - region name\n\n**Returns**\n\nNone\n\n**Example**\n\n```js\nconst { archiveService } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  accessKey: 'abc',\n  app: 'my-app',\n  name: 'my-service',\n  provider: 'aws',\n  region: 'us-east-1'\n}\n\nawait archiveService(data)\n```\n\n---\n\n### `getServiceUrl`\nConstructs a service url based on passed-in data.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `app` - `string` - service app\n- `name` - `string` - service name\n\n\n**Returns**\n\nThe service url string.\n\n**Example**\n\n```js\nconst { getServiceUrl } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  name: 'my-service'\n}\n\nconst serviceUrl = getServiceUrl(data)\n```\n\n---\n\n### `listTenants`\nLists the tenants for a given username\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `idToken` - `string` - auth0 user id token\n\n\n**Returns**\n\nArray of objects, each represents a single tenant data model.\n\n**Example**\n\n```js\nconst { listTenants } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  idToken: 'abc'\n}\n\nconst tenants = await listTenants(data)\n```\n\n---\n\n### `createDeploymnet`\nCreates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `accessKey` - `string` - dashboard access key\n- `files` - `object` - files which should be stored in the Platforms deployment record\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { createDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  accessKey: 'abc',\n  files: {\n    'serverless-state.json': {\n      //...snip...\n    }\n  }\n}\n\nconst { id } = await createDeployment(data)\n```\n\n---\n\n### `updateDeployment`\nUpdates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `deploymentId` - `string` - id of the previously created deployment\n- `status` - `string` - status of the deployment to update\n- `accessKey` - `string` - dashboard access key\n- `computedData` - `object` - computed data the Platform needs to generate the state items\n\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { updateDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  deploymentId: 'abc',\n  status: 'failed',\n  accessKey: 'abc',\n  computedData: {\n    // ...snip...\n  }\n}\n\nconst { id } = await updateDeployment(data)\n```\n\n---\n\n### `getApp`\nGets a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { getApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await getApp(data)\n```\n\n---\n\n### `createApp`\nCreates a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { createApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await createApp(data)\n```\n","readmeFilename":"README.md","_id":"@serverless/platform-sdk@0.4.0-beta","_npmVersion":"6.4.1","_nodeVersion":"8.15.0","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-vDiq82v7qKcP1Baff6of+eeFVJXKOpaJPIKfvDaAQ8bPZN379yRdtllVl2EHDlBy/X6UsqsqNyoA8K4IRMtHyQ==","shasum":"4e75502c764ba7684e0d70caab6bc283b5f81028","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-0.4.0-beta.tgz","fileCount":57,"unpackedSize":100731,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcL1W8CRA9TVsSAnZWagAA7Z4P/1mWPsRiFnqs7GLTLsHt\n1icaaJ1p9sDEq+K2CwK7ptkJmP6wTnW1XAJcJsIaV4QezIHnWppwnD2YNYiq\nby8dCztkQ3o+4g3YAVdsl2JwcqS2TcryY+0HjxsIIlNyoeRFNnSm2Jou0OOF\nxlnCKaDQBRXL9mlhFiADDB1fvyCTs8sZOcdKYH1P47I2rnKmk61PmCdvCUeW\n9FmE4fsyP5v08v5KsxDVrE2RCJpcZmNWhguo/OVGEaxfbQ3Rq3FNCAq0r9a/\nJnXYGEQ3HysMdiNr9N5mbVyGD5I1BHY+7kzXulgC8CAwDuTV4lXr1apy6vTK\n52TrvI4BCksCtnmOmMkMrQz0vP49a4mf/H7gZ1gQwMnAsEshvxZr952DC6ms\nbqmPLGRKBwv/6MUKeARduWJSKAUrlnRNWs/+QKb/dmVtSRMTWUUtNcC1L6Gl\nXTLMa3ahQiaicut6V/xKlvxhQju6zSvz/NJYEaV9lr6qR01iU9Qh/o988Nfk\nW2TZ9CQYo/teTpkbutS4W3s5FdKobK9IgwqYojNXBckyYraST8nrM0uxHotP\nxaa1DJviDquBH4HqCwF2qy4JeSH7rVfL5KrXoSwdu9NDeURZ7lZrz0osKqeP\nQ41KlbxmyZZ4lszX0jO5HRn6rMofgqp0aWb33Hu9nupXpiT6Y5udshLUrh5F\nwFgE\r\n=OZHg\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"services@serverless.com","name":"serverless-main"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_0.4.0-beta_1546606012208_0.6174114849423318"},"_hasShrinkwrap":false},"0.4.0-beta-2-gc07b199":{"name":"@serverless/platform-sdk","version":"0.4.0-beta-2-gc07b199","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"prepare":"npm run build","build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","lint:staged":"lint-staged","setup":"./scripts/setup.sh","setup:ci":"./scripts/setup-ci.sh","test":"./scripts/test.sh","test:ci":"snyk test && ./scripts/test-ci.sh","watch":"./scripts/watch.sh"},"dependencies":{"babel-polyfill":"^6.26.0","source-map-support":"^0.5.5","body-parser":"^1.18.3","chalk":"^2.4.1","cors":"^2.8.4","express":"^4.16.3","is-docker":"^1.1.0","isomorphic-fetch":"^2.2.1","opn":"^5.3.0","querystring":"^0.2.0","ramda":"^0.25.0"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^21.2.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.13.0","eslint-plugin-prettier":"^2.6.1","jest-cli":"^21.2.0","lint-staged":"7.1.3","pre-commit":"^1.2.2","prettier":"^1.13.6","snyk":"^1.92.5"},"publishConfig":{"access":"public"},"lint-staged":{"*.js":["eslint --fix .","git add -A"]},"pre-commit":["lint:staged"],"gitHead":"c07b1990e90f7f4d0f3b36e1956d0b3d3c764f1b","readme":"# Platform SDK\nFunctional SDK for the Serverless Platfrom.\n\n## Project Status\n\n[![Build Status](https://travis-ci.org/serverless/platform-sdk.svg)](https://travis-ci.org/serverless/platform-sdk)\n[![license](https://img.shields.io/npm/l/@serverless/platform-sdk.svg)](https://www.npmjs.com/package/@serverless/platform-sdk)\n[![coverage](https://img.shields.io/codecov/c/github/serverless/platform-sdk.svg)](https://codecov.io/gh/serverless/platform-sdk)\n[![Known Vulnerabilities](https://snyk.io/test/github/serverless/platform-sdk/badge.svg)](https://snyk.io/test/github/serverless/platform-sdk)\n\n## Contents\n\n- [Installation](#installation)\n- [Functions](#functions)\n  - [login](#login)\n  - [refreshToken](#refreshtoken)\n  - [createAccessKey](#createaccesskey)\n  - [archiveService](#archiveservice)\n  - [getServiceUrl](#getserviceurl)\n  - [listTenants](#listtenants)\n  - [createDeployment](#createdeployment)\n  - [updateDeployment](#updatedeployment)\n  - [getApp](#getapp)\n  - [createApp](#createapp)\n\n## installation\n\n```\nnpm i -s @serverless/platform-sdk\n```\n\n## Functions\n### `login`\nOpens a browser for the user to login, along with a running server awaiting auth data once the user logs in.\n\n**Parameters**\n\nNone\n\n**Returns**\n\nPromise resolving to the following object:\n\n- `username` - `string` - dashboard username\n- `accessToken` - `string` - Auth0 access token\n- `idToken` - `string` - Auth0 idToken\n- `refreshToken` - `string` - Auth0 refreshToken\n- `expiresAt` - `string` - epoch time at which the idToken expires\n\n**Example**\n\n```js\nconst { login } = require('@serverless/platform-sdk')\n\nconst { username, accessToken, idToken, expiresAt } = await login()\n```\n\n---\n\n### `refreshToken`\nRefreshes Auth0 idToken\n\n**Parameters**\n\nrefresh token string\n\n**Returns**\n\n\nPromise resolving to the following object:\n\n- `id_token` - `string` - new Auth0 id token\n- `access_token` - `string` - new Auth0 access token\n- `expires_in` - `string` - number of seconds until token expiration\n\n**Example**\n\n```js\nconst { refreshToken } = require('@serverless/platform-sdk')\n\nconst { id_token, access_token, expires_in } = await refreshToken('some-refresh-token')\n```\n\n---\n\n### `createAccessKey`\nCreates a platform access key for the authenticated user.\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `tenant` - `string` - dashboard tenant\n- `idToken` - `string` - Auth0 idToken\n- `title` - `string` - title of the access key\n\n**Returns**\n\nPromise resolving to an `accessKey` string, that is the access key.\n\n**Example**\n\n```js\nconst { createAccessKey } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  tenant: 'eahefnawy',\n  idToken: 'abc',\n  title: 'Framework'\n}\n\nconst accessKey = await createAccessKey(data)\n```\n\n---\n\n### `archiveService`\nArchives a service in the platform.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `accessKey` - `string` - dashboard access key\n- `app` - `string` - service app\n- `name` - `string` - service name\n- `provider` - `string` - provider name\n- `region` - `string` - region name\n\n**Returns**\n\nNone\n\n**Example**\n\n```js\nconst { archiveService } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  accessKey: 'abc',\n  app: 'my-app',\n  name: 'my-service',\n  provider: 'aws',\n  region: 'us-east-1'\n}\n\nawait archiveService(data)\n```\n\n---\n\n### `getServiceUrl`\nConstructs a service url based on passed-in data.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `app` - `string` - service app\n- `name` - `string` - service name\n\n\n**Returns**\n\nThe service url string.\n\n**Example**\n\n```js\nconst { getServiceUrl } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  name: 'my-service'\n}\n\nconst serviceUrl = getServiceUrl(data)\n```\n\n---\n\n### `listTenants`\nLists the tenants for a given username\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `idToken` - `string` - auth0 user id token\n\n\n**Returns**\n\nArray of objects, each represents a single tenant data model.\n\n**Example**\n\n```js\nconst { listTenants } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  idToken: 'abc'\n}\n\nconst tenants = await listTenants(data)\n```\n\n---\n\n### `createDeploymnet`\nCreates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `accessKey` - `string` - dashboard access key\n- `files` - `object` - files which should be stored in the Platforms deployment record\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { createDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  accessKey: 'abc',\n  files: {\n    'serverless-state.json': {\n      //...snip...\n    }\n  }\n}\n\nconst { id } = await createDeployment(data)\n```\n\n---\n\n### `updateDeployment`\nUpdates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `deploymentId` - `string` - id of the previously created deployment\n- `status` - `string` - status of the deployment to update\n- `accessKey` - `string` - dashboard access key\n- `computedData` - `object` - computed data the Platform needs to generate the state items\n\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { updateDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  deploymentId: 'abc',\n  status: 'failed',\n  accessKey: 'abc',\n  computedData: {\n    // ...snip...\n  }\n}\n\nconst { id } = await updateDeployment(data)\n```\n\n---\n\n### `getApp`\nGets a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { getApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await getApp(data)\n```\n\n---\n\n### `createApp`\nCreates a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { createApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await createApp(data)\n```\n","readmeFilename":"README.md","_id":"@serverless/platform-sdk@0.4.0-beta-2-gc07b199","_npmVersion":"6.4.1","_nodeVersion":"10.15.0","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-EZb94eZP7kz2fCtI8eUt1Oh1l2lzz646XDlfCUGhWqq33AROvs0HraKXJp9bqY9Hm/bvBGM+7YXmc5Eb+HCYhQ==","shasum":"25a63b6039e999978cf9f7ea3f9dd6346153fe71","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-0.4.0-beta-2-gc07b199.tgz","fileCount":57,"unpackedSize":100742,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcPMhfCRA9TVsSAnZWagAAcegP/AtgVulEk5QCqH8aIhyf\n5wqB1YxWc5kLYgOWxn8PdEsdz5fVb4odpe5HEkWxJ5sKjyRUebAUz1QdNp8P\nWaHkIskQRNnW+hpT0W/P01jiKvzzqE8j9YQjOUbNhWO+QZPdXKAoA06GhAtD\n/2mxoBrAKrU+o1Q7i39Mtn0BR4GrM2DkvJtwBQK+TJpB6FSMviFROycbqxs8\nKNUovbd9L1DmQ04qLQzsfeA7mHflHZdxv3mPQlWGpRqvWVzRzGKxNJm5efnD\nifnVc3Rhf6UWvGr0qpM13ZogJam2TLTlPfBN5wnHw2bdWaBXk33eHmqhnGbv\nrTQGU8GVPpOWob2SYZJUP6+aAe/xdZIAvF1Td1z6vkoUcDwt6X+Se0VXtZRw\nAHs6AOw9vVHvKhA5BEIFwl+i6P1zpu3PgK5AFlGG2cgf8NDMR/F2snn2guXT\nIaIDdGabHmyBvZ47TSRdOtMc1RNwGhkLoD+T2kz+cNOLbfg0HwZyxsSWHZ5w\nCx/PlNvTNxw4dmymd6QtXTXUdcJFIeaZNqg7t0E94wGj5mhw2Oho2c9R+KV3\ncjIzj5teHehwa4tw02/s7O/P94LtqBjkI0NQNvoUIvgjbrd0BOZyFLIeT3AK\n34I7BK+IJj6ykp4AlW4JjGxgatNR/+3VVOZzZ2aZhGMfXTD4uQNNy4sYHufN\nZ/5h\r\n=1nyi\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"services@serverless.com","name":"serverless-main"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_0.4.0-beta-2-gc07b199_1547487327369_0.8866001890274913"},"_hasShrinkwrap":false},"0.4.0-beta-6-g29e4617":{"name":"@serverless/platform-sdk","version":"0.4.0-beta-6-g29e4617","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"prepare":"npm run build","build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","lint:staged":"lint-staged","setup":"./scripts/setup.sh","setup:ci":"./scripts/setup-ci.sh","test":"./scripts/test.sh","test:ci":"snyk test && ./scripts/test-ci.sh","watch":"./scripts/watch.sh"},"dependencies":{"babel-polyfill":"^6.26.0","source-map-support":"^0.5.5","body-parser":"^1.18.3","chalk":"^2.4.1","cors":"^2.8.4","express":"^4.16.3","is-docker":"^1.1.0","isomorphic-fetch":"^2.2.1","opn":"^5.3.0","querystring":"^0.2.0","ramda":"^0.25.0"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^21.2.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.13.0","eslint-plugin-prettier":"^2.6.1","jest-cli":"^21.2.0","lint-staged":"7.1.3","pre-commit":"^1.2.2","prettier":"^1.13.6","snyk":"^1.92.5"},"publishConfig":{"access":"public"},"lint-staged":{"*.js":["eslint --fix .","git add -A"]},"pre-commit":["lint:staged"],"gitHead":"29e461781dc23fd223ea8d5b2ecd193629e24ee4","readme":"# Platform SDK\nFunctional SDK for the Serverless Platfrom.\n\n## Project Status\n\n[![Build Status](https://travis-ci.org/serverless/platform-sdk.svg)](https://travis-ci.org/serverless/platform-sdk)\n[![license](https://img.shields.io/npm/l/@serverless/platform-sdk.svg)](https://www.npmjs.com/package/@serverless/platform-sdk)\n[![coverage](https://img.shields.io/codecov/c/github/serverless/platform-sdk.svg)](https://codecov.io/gh/serverless/platform-sdk)\n[![Known Vulnerabilities](https://snyk.io/test/github/serverless/platform-sdk/badge.svg)](https://snyk.io/test/github/serverless/platform-sdk)\n\n## Contents\n\n- [Installation](#installation)\n- [Functions](#functions)\n  - [login](#login)\n  - [refreshToken](#refreshtoken)\n  - [createAccessKey](#createaccesskey)\n  - [archiveService](#archiveservice)\n  - [getServiceUrl](#getserviceurl)\n  - [listTenants](#listtenants)\n  - [createDeployment](#createdeployment)\n  - [updateDeployment](#updatedeployment)\n  - [getApp](#getapp)\n  - [createApp](#createapp)\n\n## installation\n\n```\nnpm i -s @serverless/platform-sdk\n```\n\n## Functions\n### `login`\nOpens a browser for the user to login, along with a running server awaiting auth data once the user logs in.\n\n**Parameters**\n\nNone\n\n**Returns**\n\nPromise resolving to the following object:\n\n- `username` - `string` - dashboard username\n- `accessToken` - `string` - Auth0 access token\n- `idToken` - `string` - Auth0 idToken\n- `refreshToken` - `string` - Auth0 refreshToken\n- `expiresAt` - `string` - epoch time at which the idToken expires\n\n**Example**\n\n```js\nconst { login } = require('@serverless/platform-sdk')\n\nconst { username, accessToken, idToken, expiresAt } = await login()\n```\n\n---\n\n### `refreshToken`\nRefreshes Auth0 idToken\n\n**Parameters**\n\nrefresh token string\n\n**Returns**\n\n\nPromise resolving to the following object:\n\n- `id_token` - `string` - new Auth0 id token\n- `access_token` - `string` - new Auth0 access token\n- `expires_in` - `string` - number of seconds until token expiration\n\n**Example**\n\n```js\nconst { refreshToken } = require('@serverless/platform-sdk')\n\nconst { id_token, access_token, expires_in } = await refreshToken('some-refresh-token')\n```\n\n---\n\n### `createAccessKey`\nCreates a platform access key for the authenticated user.\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `tenant` - `string` - dashboard tenant\n- `idToken` - `string` - Auth0 idToken\n- `title` - `string` - title of the access key\n\n**Returns**\n\nPromise resolving to an `accessKey` string, that is the access key.\n\n**Example**\n\n```js\nconst { createAccessKey } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  tenant: 'eahefnawy',\n  idToken: 'abc',\n  title: 'Framework'\n}\n\nconst accessKey = await createAccessKey(data)\n```\n\n---\n\n### `archiveService`\nArchives a service in the platform.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `accessKey` - `string` - dashboard access key\n- `app` - `string` - service app\n- `name` - `string` - service name\n- `provider` - `string` - provider name\n- `region` - `string` - region name\n\n**Returns**\n\nNone\n\n**Example**\n\n```js\nconst { archiveService } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  accessKey: 'abc',\n  app: 'my-app',\n  name: 'my-service',\n  provider: 'aws',\n  region: 'us-east-1'\n}\n\nawait archiveService(data)\n```\n\n---\n\n### `getServiceUrl`\nConstructs a service url based on passed-in data.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `app` - `string` - service app\n- `name` - `string` - service name\n\n\n**Returns**\n\nThe service url string.\n\n**Example**\n\n```js\nconst { getServiceUrl } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  name: 'my-service'\n}\n\nconst serviceUrl = getServiceUrl(data)\n```\n\n---\n\n### `listTenants`\nLists the tenants for a given username\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `idToken` - `string` - auth0 user id token\n\n\n**Returns**\n\nArray of objects, each represents a single tenant data model.\n\n**Example**\n\n```js\nconst { listTenants } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  idToken: 'abc'\n}\n\nconst tenants = await listTenants(data)\n```\n\n---\n\n### `createDeploymnet`\nCreates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `accessKey` - `string` - dashboard access key\n- `files` - `object` - files which should be stored in the Platforms deployment record\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { createDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  accessKey: 'abc',\n  files: {\n    'serverless-state.json': {\n      //...snip...\n    }\n  }\n}\n\nconst { id } = await createDeployment(data)\n```\n\n---\n\n### `updateDeployment`\nUpdates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `deploymentId` - `string` - id of the previously created deployment\n- `status` - `string` - status of the deployment to update\n- `accessKey` - `string` - dashboard access key\n- `computedData` - `object` - computed data the Platform needs to generate the state items\n\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { updateDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  deploymentId: 'abc',\n  status: 'failed',\n  accessKey: 'abc',\n  computedData: {\n    // ...snip...\n  }\n}\n\nconst { id } = await updateDeployment(data)\n```\n\n---\n\n### `getApp`\nGets a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { getApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await getApp(data)\n```\n\n---\n\n### `createApp`\nCreates a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { createApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await createApp(data)\n```\n","readmeFilename":"README.md","_id":"@serverless/platform-sdk@0.4.0-beta-6-g29e4617","_npmVersion":"6.4.1","_nodeVersion":"10.15.0","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-vdEoLrWAIFEJ8k5GH5Tc7PFWwd7E7Ws/7mObOxlP4FfU8TQj5nS+/PfO0Q76zPeI7XBb2kmEjsHNsZ2LgkYiYA==","shasum":"915bf0e1942365ac64bf1ddd50817ffc997f60e4","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-0.4.0-beta-6-g29e4617.tgz","fileCount":57,"unpackedSize":100548,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcPQd7CRA9TVsSAnZWagAAtxkQAJ/54RUh5pY1HQrzfEiY\nVP++ZuyQUvESngarqwbgWLurHaPoNngqaeSLRWYGJUFQ0DBX5HwXSF2Ck2t3\nIC8QsExoyhWzOdGuw8DyV5c71f672ExSOo67u6S22WRPnsab4nhAJpU56CgG\nr43XZ1VdeZvFh3BUbuJ5C4g3RvAeLzjpaWeCXhwC4NxOkBZ5zevKhpHsn59r\n/Ys5MCH6lMCi6H46Ow1yQ6JgUcdTEy9vtHDHmQS+StOW/UO9yr4BejP9Y0CB\nY/Wl4VD2v9uaxccjp33i4mnKFOcERIMCkMcsTwzFuCweujUcqn5nUSu7LDip\nWdMenHjVsokeBkZ//QTQ/Vgyrrp+2GtMqB0jy9Q3o40DBIrahCDUx1qPlbz5\nXkZI9N7bYziBu3rW/rCRlI6/wqR4NlHRZiJ4kLIpV7hvucaH2DicyFRCtbpC\nPAJJW/aer0letJpdKxtplLsu0alAglTpdNr1KZaB5ulZqnjIWV0f9X8RE746\ny/MeXkDuLNy0+jrrDpvDZ5ZpqyGQ3y+uHSCeh5jmP6KNQAvYpwmLr5edj4TU\n1GjFW0t0uiCG4gUcLp2iB3nDqNlZewxBIOt/m/fAFGg2w1imwLW5WQOeC3ay\n5TscpvF3IuqN9Ef+inVNlYShr2lrTs7qSJUPOHDHhuBvQDxRGqrYUMCaoRxY\ndfxb\r\n=EYbD\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"services@serverless.com","name":"serverless-main"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_0.4.0-beta-6-g29e4617_1547503483416_0.7566173056300021"},"_hasShrinkwrap":false},"0.4.0-beta-10-g444552d":{"name":"@serverless/platform-sdk","version":"0.4.0-beta-10-g444552d","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"prepare":"npm run build","build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","lint:staged":"lint-staged","setup":"./scripts/setup.sh","setup:ci":"./scripts/setup-ci.sh","test":"./scripts/test.sh","test:ci":"snyk test && ./scripts/test-ci.sh","watch":"./scripts/watch.sh"},"dependencies":{"babel-polyfill":"^6.26.0","source-map-support":"^0.5.5","body-parser":"^1.18.3","chalk":"^2.4.1","cors":"^2.8.4","express":"^4.16.3","is-docker":"^1.1.0","isomorphic-fetch":"^2.2.1","opn":"^5.3.0","querystring":"^0.2.0","ramda":"^0.25.0"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^21.2.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.13.0","eslint-plugin-prettier":"^2.6.1","jest-cli":"^21.2.0","lint-staged":"7.1.3","pre-commit":"^1.2.2","prettier":"^1.13.6","snyk":"^1.92.5"},"publishConfig":{"access":"public"},"lint-staged":{"*.js":["eslint --fix .","git add -A"]},"pre-commit":["lint:staged"],"gitHead":"444552df0afc330474ab19aeaaf8a45e5b15b080","readme":"# Platform SDK\nFunctional SDK for the Serverless Platfrom.\n\n## Project Status\n\n[![Build Status](https://travis-ci.org/serverless/platform-sdk.svg)](https://travis-ci.org/serverless/platform-sdk)\n[![license](https://img.shields.io/npm/l/@serverless/platform-sdk.svg)](https://www.npmjs.com/package/@serverless/platform-sdk)\n[![coverage](https://img.shields.io/codecov/c/github/serverless/platform-sdk.svg)](https://codecov.io/gh/serverless/platform-sdk)\n[![Known Vulnerabilities](https://snyk.io/test/github/serverless/platform-sdk/badge.svg)](https://snyk.io/test/github/serverless/platform-sdk)\n\n## Contents\n\n- [Installation](#installation)\n- [Functions](#functions)\n  - [login](#login)\n  - [refreshToken](#refreshtoken)\n  - [createAccessKey](#createaccesskey)\n  - [archiveService](#archiveservice)\n  - [getServiceUrl](#getserviceurl)\n  - [listTenants](#listtenants)\n  - [createDeployment](#createdeployment)\n  - [updateDeployment](#updatedeployment)\n  - [getApp](#getapp)\n  - [createApp](#createapp)\n\n## installation\n\n```\nnpm i -s @serverless/platform-sdk\n```\n\n## Functions\n### `login`\nOpens a browser for the user to login, along with a running server awaiting auth data once the user logs in.\n\n**Parameters**\n\nNone\n\n**Returns**\n\nPromise resolving to the following object:\n\n- `username` - `string` - dashboard username\n- `accessToken` - `string` - Auth0 access token\n- `idToken` - `string` - Auth0 idToken\n- `refreshToken` - `string` - Auth0 refreshToken\n- `expiresAt` - `string` - epoch time at which the idToken expires\n\n**Example**\n\n```js\nconst { login } = require('@serverless/platform-sdk')\n\nconst { username, accessToken, idToken, expiresAt } = await login()\n```\n\n---\n\n### `refreshToken`\nRefreshes Auth0 idToken\n\n**Parameters**\n\nrefresh token string\n\n**Returns**\n\n\nPromise resolving to the following object:\n\n- `id_token` - `string` - new Auth0 id token\n- `access_token` - `string` - new Auth0 access token\n- `expires_in` - `string` - number of seconds until token expiration\n\n**Example**\n\n```js\nconst { refreshToken } = require('@serverless/platform-sdk')\n\nconst { id_token, access_token, expires_in } = await refreshToken('some-refresh-token')\n```\n\n---\n\n### `createAccessKey`\nCreates a platform access key for the authenticated user.\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `tenant` - `string` - dashboard tenant\n- `idToken` - `string` - Auth0 idToken\n- `title` - `string` - title of the access key\n\n**Returns**\n\nPromise resolving to an `accessKey` string, that is the access key.\n\n**Example**\n\n```js\nconst { createAccessKey } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  tenant: 'eahefnawy',\n  idToken: 'abc',\n  title: 'Framework'\n}\n\nconst accessKey = await createAccessKey(data)\n```\n\n---\n\n### `archiveService`\nArchives a service in the platform.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `accessKey` - `string` - dashboard access key\n- `app` - `string` - service app\n- `name` - `string` - service name\n- `provider` - `string` - provider name\n- `region` - `string` - region name\n\n**Returns**\n\nNone\n\n**Example**\n\n```js\nconst { archiveService } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  accessKey: 'abc',\n  app: 'my-app',\n  name: 'my-service',\n  provider: 'aws',\n  region: 'us-east-1'\n}\n\nawait archiveService(data)\n```\n\n---\n\n### `getServiceUrl`\nConstructs a service url based on passed-in data.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `app` - `string` - service app\n- `name` - `string` - service name\n\n\n**Returns**\n\nThe service url string.\n\n**Example**\n\n```js\nconst { getServiceUrl } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  name: 'my-service'\n}\n\nconst serviceUrl = getServiceUrl(data)\n```\n\n---\n\n### `listTenants`\nLists the tenants for a given username\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `idToken` - `string` - auth0 user id token\n\n\n**Returns**\n\nArray of objects, each represents a single tenant data model.\n\n**Example**\n\n```js\nconst { listTenants } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  idToken: 'abc'\n}\n\nconst tenants = await listTenants(data)\n```\n\n---\n\n### `createDeploymnet`\nCreates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `accessKey` - `string` - dashboard access key\n- `files` - `object` - files which should be stored in the Platforms deployment record\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { createDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  accessKey: 'abc',\n  files: {\n    'serverless-state.json': {\n      //...snip...\n    }\n  }\n}\n\nconst { id } = await createDeployment(data)\n```\n\n---\n\n### `updateDeployment`\nUpdates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `deploymentId` - `string` - id of the previously created deployment\n- `status` - `string` - status of the deployment to update\n- `accessKey` - `string` - dashboard access key\n- `computedData` - `object` - computed data the Platform needs to generate the state items\n\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { updateDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  deploymentId: 'abc',\n  status: 'failed',\n  accessKey: 'abc',\n  computedData: {\n    // ...snip...\n  }\n}\n\nconst { id } = await updateDeployment(data)\n```\n\n---\n\n### `getApp`\nGets a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { getApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await getApp(data)\n```\n\n---\n\n### `createApp`\nCreates a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { createApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await createApp(data)\n```\n","readmeFilename":"README.md","_id":"@serverless/platform-sdk@0.4.0-beta-10-g444552d","_npmVersion":"6.4.1","_nodeVersion":"10.15.0","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-Ll8LpDZbxiJnSDb7K93Ftq7cE6G2qdWXw+8nBmZ5DxxiZ7aqh1Dci/JOvMh/D/t6IJI19M4+kIPMZZ5OIR8DhA==","shasum":"45601b3f7d67d5d647745dcf0154eac74bf372a3","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-0.4.0-beta-10-g444552d.tgz","fileCount":57,"unpackedSize":102924,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcPV8GCRA9TVsSAnZWagAAD7UP/08Fnn0ryeaFzi7IEbCP\nu0kxRRmJCzXRhpp1i9NcUUQ0vtSNCythMKtEAXtQbCoGRmCcYUMS0UWX03GA\nTum20kpAruyYtzGR1glTHKnwxEGEGpSicv7NaoE2MY9hFCtGNS7Cx8ZFVs3m\n6TrskY4nrScwO9LFLkMEJN+cvGpAp2aBUmosgXCjAM9Fwd26YtVKP7cpZsX0\nlouSnj1d6aVrMZyuGzDpGWPdJ6fmMQ3BfvR5VjbqbWX6nXI8v3IwWrM/1iCi\n/sCrcOmOimGl/pJhH3YVRJn1ZMRXdJLQzL594EYqyogAWIhPBr7d6F3TbJI2\nh+iwIOu83nZWV+4d/RjCuhnXGNDlSIwv4n5DMQubqdUDxMHC4EIIVoUjSNXM\nzXdTIhoQSeTxYXWMXWFe4iIw24QV7HkG1K4kKThLsYlRQPZtBFdNAzvTyhWJ\ncB59uzAaGtBtPcF8SQbz5aPFhqo20buzAtZ+weGU1ndb+/p+/s1s9C6+ZJBQ\nNet06Z2HWjCRNtO45hX0gn/M9amukzTDnTS0uoaDPXLVRQT75v5rdYjBhgn0\nRx7wwJeK3sR2/o6iR9njjg/TdiptTaAEH9AAqjJRrDJfdzvFJUAlo63nlZoN\n3epbKs+MKl2ciOMRSgMctPce7v2Y7dh5/jDv4Lc9LOqrNuqI9DZrTR1shi0x\nxm9I\r\n=e8+H\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"services@serverless.com","name":"serverless-main"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_0.4.0-beta-10-g444552d_1547525893493_0.5188549190462746"},"_hasShrinkwrap":false},"0.4.0-beta-21-gc49dcd4":{"name":"@serverless/platform-sdk","version":"0.4.0-beta-21-gc49dcd4","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"prepare":"npm run build","build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","lint:staged":"lint-staged","setup":"./scripts/setup.sh","setup:ci":"./scripts/setup-ci.sh","test":"./scripts/test.sh","test:ci":"snyk test && ./scripts/test-ci.sh","watch":"./scripts/watch.sh"},"dependencies":{"babel-polyfill":"^6.26.0","body-parser":"^1.18.3","chalk":"^2.4.1","cors":"^2.8.4","express":"^4.16.3","is-docker":"^1.1.0","isomorphic-fetch":"^2.2.1","jwt-decode":"^2.2.0","opn":"^5.3.0","querystring":"^0.2.0","ramda":"^0.25.0","rc":"^1.2.8","source-map-support":"^0.5.5","write-file-atomic":"^2.3.0"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^21.2.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.13.0","eslint-plugin-prettier":"^2.6.1","jest-cli":"^21.2.0","lint-staged":"7.1.3","pre-commit":"^1.2.2","prettier":"^1.13.6","snyk":"^1.92.5"},"publishConfig":{"access":"public"},"lint-staged":{"*.js":["eslint --fix .","git add -A"]},"pre-commit":["lint:staged"],"gitHead":"c49dcd4a7dc0c3705f637a99b81d59bdc4f64750","readme":"# Platform SDK\n\nFunctional SDK for the Serverless Platfrom.\n\n## Project Status\n\n[![Build Status](https://travis-ci.org/serverless/platform-sdk.svg)](https://travis-ci.org/serverless/platform-sdk)\n[![license](https://img.shields.io/npm/l/@serverless/platform-sdk.svg)](https://www.npmjs.com/package/@serverless/platform-sdk)\n[![coverage](https://img.shields.io/codecov/c/github/serverless/platform-sdk.svg)](https://codecov.io/gh/serverless/platform-sdk)\n[![Known Vulnerabilities](https://snyk.io/test/github/serverless/platform-sdk/badge.svg)](https://snyk.io/test/github/serverless/platform-sdk)\n\n## Contents\n\n- [Installation](#installation)\n- [Functions](#functions)\n  - [login](#login)\n  - [refreshToken](#refreshtoken)\n  - [createAccessKey](#createaccesskey)\n  - [archiveService](#archiveservice)\n  - [getServiceUrl](#getserviceurl)\n  - [listTenants](#listtenants)\n  - [createDeployment](#createdeployment)\n  - [updateDeployment](#updatedeployment)\n  - [getApp](#getapp)\n  - [createApp](#createapp)\n\n## installation\n\n```\nnpm i -s @serverless/platform-sdk\n```\n\n## Functions\n### `login`\nOpens a browser for the user to login, along with a running server awaiting auth data once the user logs in.\n\n**Parameters**\n\nNone\n\n**Returns**\n\nPromise resolving to the following object:\n\n- `username` - `string` - dashboard username\n- `accessToken` - `string` - Auth0 access token\n- `idToken` - `string` - Auth0 idToken\n- `refreshToken` - `string` - Auth0 refreshToken\n- `expiresAt` - `string` - epoch time at which the idToken expires\n\n**Example**\n\n```js\nconst { login } = require('@serverless/platform-sdk')\n\nconst { username, accessToken, idToken, expiresAt } = await login()\n```\n\n---\n\n### `refreshToken`\nRefreshes Auth0 idToken\n\n**Parameters**\n\nrefresh token string\n\n**Returns**\n\n\nPromise resolving to the following object:\n\n- `id_token` - `string` - new Auth0 id token\n- `access_token` - `string` - new Auth0 access token\n- `expires_in` - `string` - number of seconds until token expiration\n\n**Example**\n\n```js\nconst { refreshToken } = require('@serverless/platform-sdk')\n\nconst { id_token, access_token, expires_in } = await refreshToken('some-refresh-token')\n```\n\n---\n\n### `createAccessKey`\nCreates a platform access key for the authenticated user.\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `tenant` - `string` - dashboard tenant\n- `idToken` - `string` - Auth0 idToken\n- `title` - `string` - title of the access key\n\n**Returns**\n\nPromise resolving to an `accessKey` string, that is the access key.\n\n**Example**\n\n```js\nconst { createAccessKey } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  tenant: 'eahefnawy',\n  idToken: 'abc',\n  title: 'Framework'\n}\n\nconst accessKey = await createAccessKey(data)\n```\n\n---\n\n### `archiveService`\nArchives a service in the platform.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `accessKey` - `string` - dashboard access key\n- `app` - `string` - service app\n- `name` - `string` - service name\n- `provider` - `string` - provider name\n- `region` - `string` - region name\n\n**Returns**\n\nNone\n\n**Example**\n\n```js\nconst { archiveService } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  accessKey: 'abc',\n  app: 'my-app',\n  name: 'my-service',\n  provider: 'aws',\n  region: 'us-east-1'\n}\n\nawait archiveService(data)\n```\n\n---\n\n### `getServiceUrl`\nConstructs a service url based on passed-in data.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `app` - `string` - service app\n- `name` - `string` - service name\n\n\n**Returns**\n\nThe service url string.\n\n**Example**\n\n```js\nconst { getServiceUrl } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  name: 'my-service'\n}\n\nconst serviceUrl = getServiceUrl(data)\n```\n\n---\n\n### `listTenants`\nLists the tenants for a given username\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `idToken` - `string` - auth0 user id token\n\n\n**Returns**\n\nArray of objects, each represents a single tenant data model.\n\n**Example**\n\n```js\nconst { listTenants } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  idToken: 'abc'\n}\n\nconst tenants = await listTenants(data)\n```\n\n---\n\n### `createDeploymnet`\nCreates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `accessKey` - `string` - dashboard access key\n- `files` - `object` - files which should be stored in the Platforms deployment record\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { createDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  accessKey: 'abc',\n  files: {\n    'serverless-state.json': {\n      //...snip...\n    }\n  }\n}\n\nconst { id } = await createDeployment(data)\n```\n\n---\n\n### `updateDeployment`\nUpdates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `deploymentId` - `string` - id of the previously created deployment\n- `status` - `string` - status of the deployment to update\n- `accessKey` - `string` - dashboard access key\n- `computedData` - `object` - computed data the Platform needs to generate the state items\n\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { updateDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  deploymentId: 'abc',\n  status: 'failed',\n  accessKey: 'abc',\n  computedData: {\n    // ...snip...\n  }\n}\n\nconst { id } = await updateDeployment(data)\n```\n\n---\n\n### `getApp`\nGets a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { getApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await getApp(data)\n```\n\n---\n\n### `createApp`\nCreates a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { createApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await createApp(data)\n```\n","readmeFilename":"README.md","_id":"@serverless/platform-sdk@0.4.0-beta-21-gc49dcd4","_npmVersion":"6.4.1","_nodeVersion":"10.15.0","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-xkWf3EO31OKNJcrHBuSZxcNVN2TVsJX4vZE6a9jlU21mzSPxmJjq2mbz5WVYIFqXkCzzJ7O0RoE3PVHO8jDi6g==","shasum":"ae653ebf7db21fff68524df9564bd1803eee8f95","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-0.4.0-beta-21-gc49dcd4.tgz","fileCount":61,"unpackedSize":123741,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcPyInCRA9TVsSAnZWagAAgxAP/A8CG/F6oo/c50azcVjd\ni53Ve1FP8VRDOWbxuCdt3pgw57Ave0zjosHEnEEftLaUDnxPwbxdUv4w4JjQ\nTNakrQi9Nw2niquzVsVdOGVO00JaQgJbqP/q+72xPVU0OJkKtNi/S1bVAB1H\nLN2lO96npu9nZUl5u8kV6yvspvITkTOEeiP7nUUY0pRb49sG1G8aTL+r5Rmd\n52wTTnby7JnDUApEG36koP+rJVAzAyq1DQzvzuPcapwvLnIzAtmfaSbADLwL\nP9GHglnNF2tnrlwdeqyH53kKhdupqj7gG8uZxMEQA1O1Le6enoAfrbXI9IV8\nDSLO8KEy2f9qEoeABrFo6+3g/HCJ3vlNeQEHL75ULaQAOm9ng1/ITIcnjWSd\ndAGo2/SRKMqXZ5fvvFP1ixllamQjK8YiWpxVs9u45cE3+F7f+WhYiasFWUdQ\nONaMjcfOCI9WCOlltXlaA3e877HI1rFYnXcszXpuyobRTRTSnAJBAzq7RIwN\nA34cIR1Rcffl/FOc/dpvh7dJw4VcZLlvTDxCuCZE/GB/mEpvSGE3wFFCBMGe\ntQ5JfWi2Y4fCM+7a9Og8dSXgTZ73iWhHdFTJ8GjEl8ckfO5PX54PDD2C7ZbJ\nI9WPYhLHQedodcUavsp1HeqMybQSFjwfYU4bGTGnZyEk0PLdXj5yFfrgMWd9\nTsLR\r\n=ILSe\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"services@serverless.com","name":"serverless-main"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_0.4.0-beta-21-gc49dcd4_1547641383230_0.9041837668809998"},"_hasShrinkwrap":false},"0.4.0-beta-23-gda0fa26":{"name":"@serverless/platform-sdk","version":"0.4.0-beta-23-gda0fa26","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"prepare":"npm run build","build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","lint:staged":"lint-staged","setup":"./scripts/setup.sh","setup:ci":"./scripts/setup-ci.sh","test":"./scripts/test.sh","test:ci":"snyk test && ./scripts/test-ci.sh","watch":"./scripts/watch.sh"},"dependencies":{"babel-polyfill":"^6.26.0","body-parser":"^1.18.3","chalk":"^2.4.1","cors":"^2.8.4","express":"^4.16.3","is-docker":"^1.1.0","isomorphic-fetch":"^2.2.1","jwt-decode":"^2.2.0","opn":"^5.3.0","querystring":"^0.2.0","ramda":"^0.25.0","rc":"^1.2.8","source-map-support":"^0.5.5","write-file-atomic":"^2.3.0"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^21.2.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.13.0","eslint-plugin-prettier":"^2.6.1","jest-cli":"^21.2.0","lint-staged":"7.1.3","pre-commit":"^1.2.2","prettier":"^1.13.6","snyk":"^1.92.5"},"publishConfig":{"access":"public"},"lint-staged":{"*.js":["eslint --fix .","git add -A"]},"pre-commit":["lint:staged"],"gitHead":"da0fa2691c4c2aa15f3b4da4da52f042221e2039","readme":"# Platform SDK\n\nFunctional SDK for the Serverless Platfrom.\n\n## Project Status\n\n[![Build Status](https://travis-ci.org/serverless/platform-sdk.svg)](https://travis-ci.org/serverless/platform-sdk)\n[![license](https://img.shields.io/npm/l/@serverless/platform-sdk.svg)](https://www.npmjs.com/package/@serverless/platform-sdk)\n[![coverage](https://img.shields.io/codecov/c/github/serverless/platform-sdk.svg)](https://codecov.io/gh/serverless/platform-sdk)\n[![Known Vulnerabilities](https://snyk.io/test/github/serverless/platform-sdk/badge.svg)](https://snyk.io/test/github/serverless/platform-sdk)\n\n## Contents\n\n- [Installation](#installation)\n- [Functions](#functions)\n  - [login](#login)\n  - [refreshToken](#refreshtoken)\n  - [createAccessKey](#createaccesskey)\n  - [archiveService](#archiveservice)\n  - [getServiceUrl](#getserviceurl)\n  - [listTenants](#listtenants)\n  - [createDeployment](#createdeployment)\n  - [updateDeployment](#updatedeployment)\n  - [getApp](#getapp)\n  - [createApp](#createapp)\n\n## installation\n\n```\nnpm i -s @serverless/platform-sdk\n```\n\n## Functions\n### `login`\nOpens a browser for the user to login, along with a running server awaiting auth data once the user logs in.\n\n**Parameters**\n\nNone\n\n**Returns**\n\nPromise resolving to the following object:\n\n- `username` - `string` - dashboard username\n- `accessToken` - `string` - Auth0 access token\n- `idToken` - `string` - Auth0 idToken\n- `refreshToken` - `string` - Auth0 refreshToken\n- `expiresAt` - `string` - epoch time at which the idToken expires\n\n**Example**\n\n```js\nconst { login } = require('@serverless/platform-sdk')\n\nconst { username, accessToken, idToken, expiresAt } = await login()\n```\n\n---\n\n### `refreshToken`\nRefreshes Auth0 idToken\n\n**Parameters**\n\nrefresh token string\n\n**Returns**\n\n\nPromise resolving to the following object:\n\n- `id_token` - `string` - new Auth0 id token\n- `access_token` - `string` - new Auth0 access token\n- `expires_in` - `string` - number of seconds until token expiration\n\n**Example**\n\n```js\nconst { refreshToken } = require('@serverless/platform-sdk')\n\nconst { id_token, access_token, expires_in } = await refreshToken('some-refresh-token')\n```\n\n---\n\n### `createAccessKey`\nCreates a platform access key for the authenticated user.\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `tenant` - `string` - dashboard tenant\n- `idToken` - `string` - Auth0 idToken\n- `title` - `string` - title of the access key\n\n**Returns**\n\nPromise resolving to an `accessKey` string, that is the access key.\n\n**Example**\n\n```js\nconst { createAccessKey } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  tenant: 'eahefnawy',\n  idToken: 'abc',\n  title: 'Framework'\n}\n\nconst accessKey = await createAccessKey(data)\n```\n\n---\n\n### `archiveService`\nArchives a service in the platform.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `accessKey` - `string` - dashboard access key\n- `app` - `string` - service app\n- `name` - `string` - service name\n- `provider` - `string` - provider name\n- `region` - `string` - region name\n\n**Returns**\n\nNone\n\n**Example**\n\n```js\nconst { archiveService } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  accessKey: 'abc',\n  app: 'my-app',\n  name: 'my-service',\n  provider: 'aws',\n  region: 'us-east-1'\n}\n\nawait archiveService(data)\n```\n\n---\n\n### `getServiceUrl`\nConstructs a service url based on passed-in data.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `app` - `string` - service app\n- `name` - `string` - service name\n\n\n**Returns**\n\nThe service url string.\n\n**Example**\n\n```js\nconst { getServiceUrl } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  name: 'my-service'\n}\n\nconst serviceUrl = getServiceUrl(data)\n```\n\n---\n\n### `listTenants`\nLists the tenants for a given username\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `idToken` - `string` - auth0 user id token\n\n\n**Returns**\n\nArray of objects, each represents a single tenant data model.\n\n**Example**\n\n```js\nconst { listTenants } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  idToken: 'abc'\n}\n\nconst tenants = await listTenants(data)\n```\n\n---\n\n### `createDeploymnet`\nCreates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `accessKey` - `string` - dashboard access key\n- `files` - `object` - files which should be stored in the Platforms deployment record\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { createDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  accessKey: 'abc',\n  files: {\n    'serverless-state.json': {\n      //...snip...\n    }\n  }\n}\n\nconst { id } = await createDeployment(data)\n```\n\n---\n\n### `updateDeployment`\nUpdates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `deploymentId` - `string` - id of the previously created deployment\n- `status` - `string` - status of the deployment to update\n- `accessKey` - `string` - dashboard access key\n- `computedData` - `object` - computed data the Platform needs to generate the state items\n\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { updateDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  deploymentId: 'abc',\n  status: 'failed',\n  accessKey: 'abc',\n  computedData: {\n    // ...snip...\n  }\n}\n\nconst { id } = await updateDeployment(data)\n```\n\n---\n\n### `getApp`\nGets a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { getApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await getApp(data)\n```\n\n---\n\n### `createApp`\nCreates a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { createApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await createApp(data)\n```\n","readmeFilename":"README.md","_id":"@serverless/platform-sdk@0.4.0-beta-23-gda0fa26","_npmVersion":"6.4.1","_nodeVersion":"10.15.0","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-1WNkapS/mXth7QQ4fwnUcl0LjjTrf60lKBahwPNCtgLwTDYxT7icPQhij/hADd5bpw2ThpnZUobt0pagr83Amw==","shasum":"69b6b497b0519c134f3452e36c6390388fec84c9","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-0.4.0-beta-23-gda0fa26.tgz","fileCount":61,"unpackedSize":123741,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcQIPXCRA9TVsSAnZWagAAJBwP/RtH11trG9v0v4fJFHjq\nPdyPLxDXZYLuFAaFsLKkHQ0zAksSads9E2md79s4JKlX8D7iJt3NkUkVxXnd\nF1FczhlAHz5BhJzy2Xb1tsA7VdCIJzueuGURIrhCkLdVGkwsJo/zfhxoUb02\nmfjIogsl0GGlEM/rmXhQJTAcQsYG3UTKijUYdOq8VRyQHcKggEfTTbw91/2o\nTyWlG99PnEJx0uvApEAjVlF//u0o8y5maBxZSD3UD788Sbg26Lp/1P4SAbbU\nZfGbrFHDjidbL89mUOa7xtOwsBEPfYDZCf9Bn9bjMaigXgBvjq+tTTur5B9b\n846j9qrkAvt/wlyyiW9KSk0ZmAuSZi0pY1C1JzRaIm3yD/2eirhYqt3CT7MO\nU/AoIIG6Um/X/fyERUn+TWSVZLD91+GZZdPwGDYG7N45SExnj054T0SEXZta\nrGeHa6gMueZk4lu3Upv8g8zKRkUGWWFKyi9fr6zevQeuESVRbjYjTZ9/2w9b\n/AE8yLRuftEdDPTnnuvFlRgeWQgqA9geuS2wWwdrQSowlqr5CWL/zFhP1L4A\nSOsFiZZxirhal26pMMNre6JbTJKUa7l5uF4pOmotvLcLt/NRDE5e4mPsD2mM\n26/xuWP7K4e61heJT1NCAjhhlTwUKMkPF7kRKgiIpwUBA2a6AlZtXA/Ie0AW\nKXSp\r\n=sWhY\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"services@serverless.com","name":"serverless-main"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_0.4.0-beta-23-gda0fa26_1547731927034_0.12980864963035277"},"_hasShrinkwrap":false},"0.4.0-beta-25-gad9a66b":{"name":"@serverless/platform-sdk","version":"0.4.0-beta-25-gad9a66b","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"prepare":"npm run build","build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","lint:staged":"lint-staged","setup":"./scripts/setup.sh","setup:ci":"./scripts/setup-ci.sh","test":"./scripts/test.sh","test:ci":"snyk test && ./scripts/test-ci.sh","watch":"./scripts/watch.sh"},"dependencies":{"babel-polyfill":"^6.26.0","body-parser":"^1.18.3","chalk":"^2.4.1","cors":"^2.8.4","express":"^4.16.3","is-docker":"^1.1.0","isomorphic-fetch":"^2.2.1","jwt-decode":"^2.2.0","opn":"^5.3.0","querystring":"^0.2.0","ramda":"^0.25.0","rc":"^1.2.8","source-map-support":"^0.5.5","write-file-atomic":"^2.3.0"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^21.2.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.13.0","eslint-plugin-prettier":"^2.6.1","jest-cli":"^21.2.0","lint-staged":"7.1.3","pre-commit":"^1.2.2","prettier":"^1.13.6","snyk":"^1.92.5"},"publishConfig":{"access":"public"},"lint-staged":{"*.js":["eslint --fix .","git add -A"]},"pre-commit":["lint:staged"],"gitHead":"ad9a66bc8db84f506ec9de86f9fade74a4f3f8c4","readme":"# Platform SDK\n\nFunctional SDK for the Serverless Platfrom.\n\n## Project Status\n\n[![Build Status](https://travis-ci.org/serverless/platform-sdk.svg)](https://travis-ci.org/serverless/platform-sdk)\n[![license](https://img.shields.io/npm/l/@serverless/platform-sdk.svg)](https://www.npmjs.com/package/@serverless/platform-sdk)\n[![coverage](https://img.shields.io/codecov/c/github/serverless/platform-sdk.svg)](https://codecov.io/gh/serverless/platform-sdk)\n[![Known Vulnerabilities](https://snyk.io/test/github/serverless/platform-sdk/badge.svg)](https://snyk.io/test/github/serverless/platform-sdk)\n\n## Contents\n\n- [Installation](#installation)\n- [Functions](#functions)\n  - [login](#login)\n  - [refreshToken](#refreshtoken)\n  - [createAccessKey](#createaccesskey)\n  - [archiveService](#archiveservice)\n  - [getServiceUrl](#getserviceurl)\n  - [listTenants](#listtenants)\n  - [createDeployment](#createdeployment)\n  - [updateDeployment](#updatedeployment)\n  - [getApp](#getapp)\n  - [createApp](#createapp)\n\n## installation\n\n```\nnpm i -s @serverless/platform-sdk\n```\n\n## Functions\n### `login`\nOpens a browser for the user to login, along with a running server awaiting auth data once the user logs in.\n\n**Parameters**\n\nNone\n\n**Returns**\n\nPromise resolving to the following object:\n\n- `username` - `string` - dashboard username\n- `accessToken` - `string` - Auth0 access token\n- `idToken` - `string` - Auth0 idToken\n- `refreshToken` - `string` - Auth0 refreshToken\n- `expiresAt` - `string` - epoch time at which the idToken expires\n\n**Example**\n\n```js\nconst { login } = require('@serverless/platform-sdk')\n\nconst { username, accessToken, idToken, expiresAt } = await login()\n```\n\n---\n\n### `refreshToken`\nRefreshes Auth0 idToken\n\n**Parameters**\n\nrefresh token string\n\n**Returns**\n\n\nPromise resolving to the following object:\n\n- `id_token` - `string` - new Auth0 id token\n- `access_token` - `string` - new Auth0 access token\n- `expires_in` - `string` - number of seconds until token expiration\n\n**Example**\n\n```js\nconst { refreshToken } = require('@serverless/platform-sdk')\n\nconst { id_token, access_token, expires_in } = await refreshToken('some-refresh-token')\n```\n\n---\n\n### `createAccessKey`\nCreates a platform access key for the authenticated user.\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `tenant` - `string` - dashboard tenant\n- `idToken` - `string` - Auth0 idToken\n- `title` - `string` - title of the access key\n\n**Returns**\n\nPromise resolving to an `accessKey` string, that is the access key.\n\n**Example**\n\n```js\nconst { createAccessKey } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  tenant: 'eahefnawy',\n  idToken: 'abc',\n  title: 'Framework'\n}\n\nconst accessKey = await createAccessKey(data)\n```\n\n---\n\n### `archiveService`\nArchives a service in the platform.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `accessKey` - `string` - dashboard access key\n- `app` - `string` - service app\n- `name` - `string` - service name\n- `provider` - `string` - provider name\n- `region` - `string` - region name\n\n**Returns**\n\nNone\n\n**Example**\n\n```js\nconst { archiveService } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  accessKey: 'abc',\n  app: 'my-app',\n  name: 'my-service',\n  provider: 'aws',\n  region: 'us-east-1'\n}\n\nawait archiveService(data)\n```\n\n---\n\n### `getServiceUrl`\nConstructs a service url based on passed-in data.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `app` - `string` - service app\n- `name` - `string` - service name\n\n\n**Returns**\n\nThe service url string.\n\n**Example**\n\n```js\nconst { getServiceUrl } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  name: 'my-service'\n}\n\nconst serviceUrl = getServiceUrl(data)\n```\n\n---\n\n### `listTenants`\nLists the tenants for a given username\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `idToken` - `string` - auth0 user id token\n\n\n**Returns**\n\nArray of objects, each represents a single tenant data model.\n\n**Example**\n\n```js\nconst { listTenants } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  idToken: 'abc'\n}\n\nconst tenants = await listTenants(data)\n```\n\n---\n\n### `createDeploymnet`\nCreates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `accessKey` - `string` - dashboard access key\n- `files` - `object` - files which should be stored in the Platforms deployment record\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { createDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  accessKey: 'abc',\n  files: {\n    'serverless-state.json': {\n      //...snip...\n    }\n  }\n}\n\nconst { id } = await createDeployment(data)\n```\n\n---\n\n### `updateDeployment`\nUpdates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `deploymentId` - `string` - id of the previously created deployment\n- `status` - `string` - status of the deployment to update\n- `accessKey` - `string` - dashboard access key\n- `computedData` - `object` - computed data the Platform needs to generate the state items\n\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { updateDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  deploymentId: 'abc',\n  status: 'failed',\n  accessKey: 'abc',\n  computedData: {\n    // ...snip...\n  }\n}\n\nconst { id } = await updateDeployment(data)\n```\n\n---\n\n### `getApp`\nGets a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { getApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await getApp(data)\n```\n\n---\n\n### `createApp`\nCreates a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { createApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await createApp(data)\n```\n","readmeFilename":"README.md","_id":"@serverless/platform-sdk@0.4.0-beta-25-gad9a66b","_npmVersion":"6.4.1","_nodeVersion":"10.15.0","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-ueL5Q7TjGBISrSOgpICotDA3/1YTM0nOcYWAT9mftATvKhwuq+595tNeubXEdcfVy2SVpoLKuZQwqrLnGe4LAw==","shasum":"e013bf7d42453f8ec7c3007070020f594e1d2ee0","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-0.4.0-beta-25-gad9a66b.tgz","fileCount":61,"unpackedSize":123741,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcRe0UCRA9TVsSAnZWagAAWtMQAIqeVrzeIUYUlILbutJN\nKDhj2AzpbKJUFKA3kMWM528EiAgoiRwhx3GkmrQ17BofxXdc9KKnFLy7JKgo\npfusvuHtAi2LglifdFiPh98aX6I11uRxriF6qIJc8t/YeBw1DL4EdYJXi3lz\nUmQKHvgd8G13bf+mtTLmYjVdverT8evLpF3ll8Nbrwe46BTQaGcgijSN5kJS\n01IGz1FUqMwp/cR45vu+K8XIPTXPvq6bwceaeEDdacpVsE/bEftupc5C73Bb\nmDFAikCLu6r6lcFoj6Fi9A31qdL4jRtvAIe3hEz3uw2KhQy5vAQ39IX1fUR8\nBLg+j982B+ecrRtBPIGwBVZgH0XSSoRm9ug34mqxhx8MLln6L2P0svKZxyrF\n4fl/2Y30zQ1SWYzjPlBHFsIiDauysgz6vIXzrTG536eIyIHmq/7FZ3u4BO7O\nDdr8E4V/kQEeqIr6tNRxMuDnUqwQu52ZPMb52eORIur4uRN0bHsfx8+jhr58\nqvKi94QDCWnjKu8kGe7LW9LnCc0k8Nna+0r/Gydas59m9OA5I8M9mXTDtfzv\nFMwBKttL67Vu1AYxSFM7utoNkrjPEvgRWxHfYy4t2LjIfNpDp1RQKjko/0jv\niq8qyRQZaxDVEXpe9+7n2e/TRhaZAMxgm0U7SrHlEjHtWh4JVmVVUe92oO30\nGspS\r\n=jsZ2\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"services@serverless.com","name":"serverless-main"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_0.4.0-beta-25-gad9a66b_1548086547735_0.5899247014861086"},"_hasShrinkwrap":false},"0.4.0":{"name":"@serverless/platform-sdk","version":"0.4.0","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"prepare":"npm run build","build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","lint:staged":"lint-staged","setup":"./scripts/setup.sh","setup:ci":"./scripts/setup-ci.sh","test":"./scripts/test.sh","test:ci":"snyk test && ./scripts/test-ci.sh","watch":"./scripts/watch.sh"},"dependencies":{"babel-polyfill":"^6.26.0","body-parser":"^1.18.3","chalk":"^2.4.1","cors":"^2.8.4","express":"^4.16.3","is-docker":"^1.1.0","isomorphic-fetch":"^2.2.1","jwt-decode":"^2.2.0","opn":"^5.3.0","querystring":"^0.2.0","ramda":"^0.25.0","rc":"^1.2.8","source-map-support":"^0.5.5","write-file-atomic":"^2.3.0"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^21.2.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.13.0","eslint-plugin-prettier":"^2.6.1","jest-cli":"^21.2.0","lint-staged":"7.1.3","pre-commit":"^1.2.2","prettier":"^1.13.6","snyk":"^1.92.5"},"publishConfig":{"access":"public"},"lint-staged":{"*.js":["eslint --fix .","git add -A"]},"pre-commit":["lint:staged"],"gitHead":"ad9a66bc8db84f506ec9de86f9fade74a4f3f8c4","_id":"@serverless/platform-sdk@0.4.0","_npmVersion":"6.4.1","_nodeVersion":"10.15.0","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-HWTa6EPUL1byBw69SASOVmtV4yFVt6ppDds0tV1eoQgQ5grrm1Gl74YbsbTfbEttnDiH6GgeWABs7vj4eriHKw==","shasum":"a7ecea01e658bbf4d343e6756ee8be8610076811","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-0.4.0.tgz","fileCount":61,"unpackedSize":123724,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcRfvgCRA9TVsSAnZWagAA5iAQAKAWMe+t6z5EQNNdOoXO\nYKH0PdVvfW6nbrgAdtjp2crwfWMF693ZMZmFLIuhVjvFEv3yatd3vONulgCr\n8DgyNpXJHV9j3KBjCfD8CoXKlAfEhEMS0GaO4JUJF3gHKVR0EuMQfPotvAdq\nJBD+1t2DnbO3shoPPSCkiNovzCcK2S9FkZf9CwiAU3hvm5E4IHGp4RiUK1vd\ng3uLq/Og2J2XUJ2Fdb5q3JvdXmE3QkAHvbWJljE1IHtuuYJXYj2WBfwDm8tu\nN7Y8wXILC0Y7vMnDKg3AMOMuIme4FISstM/Vfm74MFLm+9u98wAscO4oJ4eX\ntU3qwvB9diAjxemiY+B+zN8f2vfkFWvSY8SujwQPP//R/S/eYuz7TXxtIbYa\n44dVKdrDPpWizrdxzs9J1+ouxa0b/U0hq9lcimDSI0+rTMYJ7338KAPwObVc\ngdwhPPPs8opj0rmsuhkxob9NwK7dkfn4rhjqTiQWmnuObN+riLRnRb98f34E\nzaaErGYRWvn9BNIQv6om4AFAnL5bBIMCiwEwwkApt8bMeT267+KDX5ejExR7\nxePPL9OgoIqIKuRCi0CVzrYOCbsN7D78kff+81sx6cRTkjtsKOsCw4oQBMAG\n5QuObzPgyjgQB3o9c8aTUU1QhBWNVpN1NErdbTgHtJtaTzcwMdk54Vjy4hWm\nTWTe\r\n=Nm7f\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"services@serverless.com","name":"serverless-main"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_0.4.0_1548090336266_0.4914682865415676"},"_hasShrinkwrap":false},"0.4.0-2-g1da41e5":{"name":"@serverless/platform-sdk","version":"0.4.0-2-g1da41e5","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"prepare":"npm run build","build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","lint:staged":"lint-staged","setup":"./scripts/setup.sh","setup:ci":"./scripts/setup-ci.sh","test":"./scripts/test.sh","test:ci":"snyk test && ./scripts/test-ci.sh","watch":"./scripts/watch.sh"},"dependencies":{"babel-polyfill":"^6.26.0","body-parser":"^1.18.3","chalk":"^2.4.1","cors":"^2.8.4","express":"^4.16.3","is-docker":"^1.1.0","isomorphic-fetch":"^2.2.1","jwt-decode":"^2.2.0","opn":"^5.3.0","querystring":"^0.2.0","ramda":"^0.25.0","rc":"^1.2.8","source-map-support":"^0.5.5","write-file-atomic":"^2.3.0"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^21.2.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.13.0","eslint-plugin-prettier":"^2.6.1","jest-cli":"^21.2.0","lint-staged":"7.1.3","pre-commit":"^1.2.2","prettier":"^1.13.6","snyk":"^1.92.5"},"publishConfig":{"access":"public"},"lint-staged":{"*.js":["eslint --fix .","git add -A"]},"pre-commit":["lint:staged"],"gitHead":"1da41e53d227c2ef534753e477f3a9575d8c060d","readme":"# Platform SDK\n\nFunctional SDK for the Serverless Platfrom.\n\n## Project Status\n\n[![Build Status](https://travis-ci.org/serverless/platform-sdk.svg)](https://travis-ci.org/serverless/platform-sdk)\n[![license](https://img.shields.io/npm/l/@serverless/platform-sdk.svg)](https://www.npmjs.com/package/@serverless/platform-sdk)\n[![coverage](https://img.shields.io/codecov/c/github/serverless/platform-sdk.svg)](https://codecov.io/gh/serverless/platform-sdk)\n[![Known Vulnerabilities](https://snyk.io/test/github/serverless/platform-sdk/badge.svg)](https://snyk.io/test/github/serverless/platform-sdk)\n\n## Contents\n\n- [Installation](#installation)\n- [Functions](#functions)\n  - [login](#login)\n  - [refreshToken](#refreshtoken)\n  - [createAccessKey](#createaccesskey)\n  - [archiveService](#archiveservice)\n  - [getServiceUrl](#getserviceurl)\n  - [listTenants](#listtenants)\n  - [createDeployment](#createdeployment)\n  - [updateDeployment](#updatedeployment)\n  - [getApp](#getapp)\n  - [createApp](#createapp)\n\n## installation\n\n```\nnpm i -s @serverless/platform-sdk\n```\n\n## Functions\n### `login`\nOpens a browser for the user to login, along with a running server awaiting auth data once the user logs in.\n\n**Parameters**\n\nNone\n\n**Returns**\n\nPromise resolving to the following object:\n\n- `username` - `string` - dashboard username\n- `accessToken` - `string` - Auth0 access token\n- `idToken` - `string` - Auth0 idToken\n- `refreshToken` - `string` - Auth0 refreshToken\n- `expiresAt` - `string` - epoch time at which the idToken expires\n\n**Example**\n\n```js\nconst { login } = require('@serverless/platform-sdk')\n\nconst { username, accessToken, idToken, expiresAt } = await login()\n```\n\n---\n\n### `refreshToken`\nRefreshes Auth0 idToken\n\n**Parameters**\n\nrefresh token string\n\n**Returns**\n\n\nPromise resolving to the following object:\n\n- `id_token` - `string` - new Auth0 id token\n- `access_token` - `string` - new Auth0 access token\n- `expires_in` - `string` - number of seconds until token expiration\n\n**Example**\n\n```js\nconst { refreshToken } = require('@serverless/platform-sdk')\n\nconst { id_token, access_token, expires_in } = await refreshToken('some-refresh-token')\n```\n\n---\n\n### `createAccessKey`\nCreates a platform access key for the authenticated user.\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `tenant` - `string` - dashboard tenant\n- `idToken` - `string` - Auth0 idToken\n- `title` - `string` - title of the access key\n\n**Returns**\n\nPromise resolving to an `accessKey` string, that is the access key.\n\n**Example**\n\n```js\nconst { createAccessKey } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  tenant: 'eahefnawy',\n  idToken: 'abc',\n  title: 'Framework'\n}\n\nconst accessKey = await createAccessKey(data)\n```\n\n---\n\n### `archiveService`\nArchives a service in the platform.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `accessKey` - `string` - dashboard access key\n- `app` - `string` - service app\n- `name` - `string` - service name\n- `provider` - `string` - provider name\n- `region` - `string` - region name\n\n**Returns**\n\nNone\n\n**Example**\n\n```js\nconst { archiveService } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  accessKey: 'abc',\n  app: 'my-app',\n  name: 'my-service',\n  provider: 'aws',\n  region: 'us-east-1'\n}\n\nawait archiveService(data)\n```\n\n---\n\n### `getServiceUrl`\nConstructs a service url based on passed-in data.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `app` - `string` - service app\n- `name` - `string` - service name\n\n\n**Returns**\n\nThe service url string.\n\n**Example**\n\n```js\nconst { getServiceUrl } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  name: 'my-service'\n}\n\nconst serviceUrl = getServiceUrl(data)\n```\n\n---\n\n### `listTenants`\nLists the tenants for a given username\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `idToken` - `string` - auth0 user id token\n\n\n**Returns**\n\nArray of objects, each represents a single tenant data model.\n\n**Example**\n\n```js\nconst { listTenants } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  idToken: 'abc'\n}\n\nconst tenants = await listTenants(data)\n```\n\n---\n\n### `createDeploymnet`\nCreates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `accessKey` - `string` - dashboard access key\n- `files` - `object` - files which should be stored in the Platforms deployment record\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { createDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  accessKey: 'abc',\n  files: {\n    'serverless-state.json': {\n      //...snip...\n    }\n  }\n}\n\nconst { id } = await createDeployment(data)\n```\n\n---\n\n### `updateDeployment`\nUpdates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `deploymentId` - `string` - id of the previously created deployment\n- `status` - `string` - status of the deployment to update\n- `accessKey` - `string` - dashboard access key\n- `computedData` - `object` - computed data the Platform needs to generate the state items\n\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { updateDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  deploymentId: 'abc',\n  status: 'failed',\n  accessKey: 'abc',\n  computedData: {\n    // ...snip...\n  }\n}\n\nconst { id } = await updateDeployment(data)\n```\n\n---\n\n### `getApp`\nGets a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { getApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await getApp(data)\n```\n\n---\n\n### `createApp`\nCreates a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { createApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await createApp(data)\n```\n","readmeFilename":"README.md","_id":"@serverless/platform-sdk@0.4.0-2-g1da41e5","_npmVersion":"6.4.1","_nodeVersion":"10.15.0","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-I/Sku2l/jK59BbhxBi9m6GjLXbicnq4pDR8rVMUSKaadZh264TamTyVy8XM0juTuqoOavIE6tZbW5XyrIZ5C/g==","shasum":"ef20becd50a563b0c408acedd1c99a390b80ea42","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-0.4.0-2-g1da41e5.tgz","fileCount":61,"unpackedSize":123735,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcRzRPCRA9TVsSAnZWagAAwqsP/0iGHeDOpwAmYMPyoS1I\nmGC3O2N6impnoq9JoN7uv7JSXRPAmleo4TN87VmgPO95wQ7mDq5h1pMrwwVB\noEBnl0RtfM7NcsT3dJ/rsTRifIHrTX49knFHORMuqN2mkNwvHtbvFxtb2bmn\nJbDmDZvuZqGMDL22gh/YrjojIr8aQmC7D/x+VyS/6/BMstsdDIZPMwZhDPDk\nI9X4NByHwkAY5otrlamfTUekguGDPY69n+qDse8uE89ygckYgqUiJ9aNL+9o\nsDtqWyvv8cNzWZEWNtYk2Al4mEgnegYQhsiFa/FWvG1LJ8jBPQpROLU1FK/U\npXUrxxhhRDx1dFJg5VvE0M+K9fBTWQsIoeF5/VUoFf7qws8pGWgQefjqXqWs\nSCgvLnvZ3fKfz5ABS1olldBTC3FqoN0P796uhqPr8cHe793DoZbnZoRRBrI7\nwRvkjMVuymT5ZAak9ouYQmVFTuy0SVVXtlzUQYvhb4PPJx8Gkj5DgpCef4jP\nP6iZLCpZ8NRys4UxdRus20q1Kx7sP0RgJTQDgUpWayngVepU7Qff8JNkjZXC\n2+tpZUldDrIRt4LBuYkmNC6ZaYkTV00Q08uStTyci5008im6LiEYHn07CgE5\nYigF43fnjPmrwMyaBrQGB4BrY5A2YoZMZO1weMLh9epnJsWH+QqciNucECIR\neYHj\r\n=CWH8\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"services@serverless.com","name":"serverless-main"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_0.4.0-2-g1da41e5_1548170318510_0.5133018404575793"},"_hasShrinkwrap":false},"0.4.0-10-g0a71b8d":{"name":"@serverless/platform-sdk","version":"0.4.0-10-g0a71b8d","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"prepare":"npm run build","build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","lint:staged":"lint-staged","setup":"./scripts/setup.sh","setup:ci":"./scripts/setup-ci.sh","test":"./scripts/test.sh","test:ci":"snyk test && ./scripts/test-ci.sh","watch":"./scripts/watch.sh"},"dependencies":{"babel-polyfill":"^6.26.0","body-parser":"^1.18.3","chalk":"^2.4.1","cors":"^2.8.4","express":"^4.16.3","is-docker":"^1.1.0","isomorphic-fetch":"^2.2.1","jwt-decode":"^2.2.0","opn":"^5.3.0","querystring":"^0.2.0","ramda":"^0.25.0","rc":"^1.2.8","source-map-support":"^0.5.5","write-file-atomic":"^2.3.0"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^21.2.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.13.0","eslint-plugin-prettier":"^2.6.1","jest-cli":"^21.2.0","lint-staged":"7.1.3","pre-commit":"^1.2.2","prettier":"^1.13.6","snyk":"^1.92.5"},"publishConfig":{"access":"public"},"lint-staged":{"*.js":["eslint --fix .","git add -A"]},"pre-commit":["lint:staged"],"gitHead":"0a71b8d344c81f2726ac93204a3e22d16f8367ec","readme":"# Platform SDK\n\nFunctional SDK for the Serverless Platfrom.\n\n## Project Status\n\n[![Build Status](https://travis-ci.org/serverless/platform-sdk.svg)](https://travis-ci.org/serverless/platform-sdk)\n[![license](https://img.shields.io/npm/l/@serverless/platform-sdk.svg)](https://www.npmjs.com/package/@serverless/platform-sdk)\n[![coverage](https://img.shields.io/codecov/c/github/serverless/platform-sdk.svg)](https://codecov.io/gh/serverless/platform-sdk)\n[![Known Vulnerabilities](https://snyk.io/test/github/serverless/platform-sdk/badge.svg)](https://snyk.io/test/github/serverless/platform-sdk)\n\n## Contents\n\n- [Installation](#installation)\n- [Functions](#functions)\n  - [login](#login)\n  - [refreshToken](#refreshtoken)\n  - [createAccessKey](#createaccesskey)\n  - [archiveService](#archiveservice)\n  - [getServiceUrl](#getserviceurl)\n  - [listTenants](#listtenants)\n  - [createDeployment](#createdeployment)\n  - [updateDeployment](#updatedeployment)\n  - [getApp](#getapp)\n  - [createApp](#createapp)\n\n## installation\n\n```\nnpm i -s @serverless/platform-sdk\n```\n\n## Functions\n### `login`\nOpens a browser for the user to login, along with a running server awaiting auth data once the user logs in.\n\n**Parameters**\n\nNone\n\n**Returns**\n\nPromise resolving to the following object:\n\n- `username` - `string` - dashboard username\n- `accessToken` - `string` - Auth0 access token\n- `idToken` - `string` - Auth0 idToken\n- `refreshToken` - `string` - Auth0 refreshToken\n- `expiresAt` - `string` - epoch time at which the idToken expires\n\n**Example**\n\n```js\nconst { login } = require('@serverless/platform-sdk')\n\nconst { username, accessToken, idToken, expiresAt } = await login()\n```\n\n---\n\n### `refreshToken`\nRefreshes Auth0 idToken\n\n**Parameters**\n\nrefresh token string\n\n**Returns**\n\n\nPromise resolving to the following object:\n\n- `id_token` - `string` - new Auth0 id token\n- `access_token` - `string` - new Auth0 access token\n- `expires_in` - `string` - number of seconds until token expiration\n\n**Example**\n\n```js\nconst { refreshToken } = require('@serverless/platform-sdk')\n\nconst { id_token, access_token, expires_in } = await refreshToken('some-refresh-token')\n```\n\n---\n\n### `createAccessKey`\nCreates a platform access key for the authenticated user.\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `tenant` - `string` - dashboard tenant\n- `idToken` - `string` - Auth0 idToken\n- `title` - `string` - title of the access key\n\n**Returns**\n\nPromise resolving to an `accessKey` string, that is the access key.\n\n**Example**\n\n```js\nconst { createAccessKey } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  tenant: 'eahefnawy',\n  idToken: 'abc',\n  title: 'Framework'\n}\n\nconst accessKey = await createAccessKey(data)\n```\n\n---\n\n### `archiveService`\nArchives a service in the platform.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `accessKey` - `string` - dashboard access key\n- `app` - `string` - service app\n- `name` - `string` - service name\n- `provider` - `string` - provider name\n- `region` - `string` - region name\n\n**Returns**\n\nNone\n\n**Example**\n\n```js\nconst { archiveService } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  accessKey: 'abc',\n  app: 'my-app',\n  name: 'my-service',\n  provider: 'aws',\n  region: 'us-east-1'\n}\n\nawait archiveService(data)\n```\n\n---\n\n### `getServiceUrl`\nConstructs a service url based on passed-in data.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `app` - `string` - service app\n- `name` - `string` - service name\n\n\n**Returns**\n\nThe service url string.\n\n**Example**\n\n```js\nconst { getServiceUrl } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  name: 'my-service'\n}\n\nconst serviceUrl = getServiceUrl(data)\n```\n\n---\n\n### `listTenants`\nLists the tenants for a given username\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `idToken` - `string` - auth0 user id token\n\n\n**Returns**\n\nArray of objects, each represents a single tenant data model.\n\n**Example**\n\n```js\nconst { listTenants } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  idToken: 'abc'\n}\n\nconst tenants = await listTenants(data)\n```\n\n---\n\n### `createDeploymnet`\nCreates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `accessKey` - `string` - dashboard access key\n- `files` - `object` - files which should be stored in the Platforms deployment record\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { createDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  accessKey: 'abc',\n  files: {\n    'serverless-state.json': {\n      //...snip...\n    }\n  }\n}\n\nconst { id } = await createDeployment(data)\n```\n\n---\n\n### `updateDeployment`\nUpdates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `deploymentId` - `string` - id of the previously created deployment\n- `status` - `string` - status of the deployment to update\n- `accessKey` - `string` - dashboard access key\n- `computedData` - `object` - computed data the Platform needs to generate the state items\n\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { updateDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  deploymentId: 'abc',\n  status: 'failed',\n  accessKey: 'abc',\n  computedData: {\n    // ...snip...\n  }\n}\n\nconst { id } = await updateDeployment(data)\n```\n\n---\n\n### `getApp`\nGets a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { getApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await getApp(data)\n```\n\n---\n\n### `createApp`\nCreates a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { createApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await createApp(data)\n```\n","readmeFilename":"README.md","_id":"@serverless/platform-sdk@0.4.0-10-g0a71b8d","_npmVersion":"6.4.1","_nodeVersion":"10.15.0","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-Amkw49ZjtWsIdffZeSr1kJcg4DecLDxGDRGOHbNEZDq0GdkXHdN478ut9llVkMIbt6FZOcoy5eMX/ouGHNANAA==","shasum":"142fb639e247f2168d092869efe3c49abb4295b0","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-0.4.0-10-g0a71b8d.tgz","fileCount":61,"unpackedSize":128619,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcSew1CRA9TVsSAnZWagAAEuUQAJomvxnRuBkxmZYGEUOw\n7JApEX8DsJ+byrR7ML0oXrnGVdHuXFuPQ9Mz6NNs0k4/yRRJLRaNMm9OIJsm\n7VsCem6rVshJBR8IjKbRlC+RPLMNaOqKc7CbFgHrOuJe0p6Ap8vqpWXWFmMQ\nksLkIcpCW/CnPW5WCrxN7BCV5esOe9TIgBj/iAZoxV73L9MOKUIcK09GPC5B\nDdmC6WVAYxb9ZZ1bP2Gyix3fretanE7OdUAT96i2KVFA2RvIAN60dBytlH9t\nK6bZIH1OnUUQKg2vJ1ApewjKnX0p0w5+wt/l7j2RUP48UDuuOF52phG/W0Fc\ndLe4BE8by/dnYsBETjZU6L7SdLiMsd8Ov/RaRtos5aFbBRvWdkfHRBVnZBrI\nxODMeokxIpzSQ5jNRSmW4B21c1jPuD9MRhZot1G90Qw6l+3HN/difsl+2b/B\nJwVzi7oiAr08b5wfevymp2ngIDGP7VP48HO4pL1aR+7/WtwhY0LD7ucs/qSk\nKimtFo+EJGfTW6lP9v35ylw4muiovvdZ1dDM6IaDmOGDpz5j3MXTLTI9xWLA\npIiyhPywLWSJdmmnaIs8XflTs5hhmQntdJ9deomHbGSoZ/hlcX0oVQwrJh7U\naizMv6ESETnWh2CYK+RDtQeClwEWzG6GC1WPoQHUiXv29h1TzX4kV54g47lt\ni4Vr\r\n=bUJw\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"services@serverless.com","name":"serverless-main"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_0.4.0-10-g0a71b8d_1548348468996_0.396023207160882"},"_hasShrinkwrap":false},"0.4.0-12-gfcf26a9":{"name":"@serverless/platform-sdk","version":"0.4.0-12-gfcf26a9","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"prepare":"npm run build","build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","lint:staged":"lint-staged","setup":"./scripts/setup.sh","setup:ci":"./scripts/setup-ci.sh","test":"./scripts/test.sh","test:ci":"snyk test && ./scripts/test-ci.sh","watch":"./scripts/watch.sh"},"dependencies":{"babel-polyfill":"^6.26.0","body-parser":"^1.18.3","chalk":"^2.4.1","cors":"^2.8.4","express":"^4.16.3","is-docker":"^1.1.0","isomorphic-fetch":"^2.2.1","jwt-decode":"^2.2.0","opn":"^5.3.0","querystring":"^0.2.0","ramda":"^0.25.0","rc":"^1.2.8","source-map-support":"^0.5.5","write-file-atomic":"^2.3.0"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^21.2.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.13.0","eslint-plugin-prettier":"^2.6.1","jest-cli":"^21.2.0","lint-staged":"7.1.3","pre-commit":"^1.2.2","prettier":"^1.13.6","snyk":"^1.92.5"},"publishConfig":{"access":"public"},"lint-staged":{"*.js":["eslint --fix .","git add -A"]},"pre-commit":["lint:staged"],"gitHead":"fcf26a9830582a60d97b5c556da93915db6e9826","readme":"# Platform SDK\n\nFunctional SDK for the Serverless Platfrom.\n\n## Project Status\n\n[![Build Status](https://travis-ci.org/serverless/platform-sdk.svg)](https://travis-ci.org/serverless/platform-sdk)\n[![license](https://img.shields.io/npm/l/@serverless/platform-sdk.svg)](https://www.npmjs.com/package/@serverless/platform-sdk)\n[![coverage](https://img.shields.io/codecov/c/github/serverless/platform-sdk.svg)](https://codecov.io/gh/serverless/platform-sdk)\n[![Known Vulnerabilities](https://snyk.io/test/github/serverless/platform-sdk/badge.svg)](https://snyk.io/test/github/serverless/platform-sdk)\n\n## Contents\n\n- [Installation](#installation)\n- [Functions](#functions)\n  - [login](#login)\n  - [refreshToken](#refreshtoken)\n  - [createAccessKey](#createaccesskey)\n  - [archiveService](#archiveservice)\n  - [getServiceUrl](#getserviceurl)\n  - [listTenants](#listtenants)\n  - [createDeployment](#createdeployment)\n  - [updateDeployment](#updatedeployment)\n  - [getApp](#getapp)\n  - [createApp](#createapp)\n\n## installation\n\n```\nnpm i -s @serverless/platform-sdk\n```\n\n## Functions\n### `login`\nOpens a browser for the user to login, along with a running server awaiting auth data once the user logs in.\n\n**Parameters**\n\nNone\n\n**Returns**\n\nPromise resolving to the following object:\n\n- `username` - `string` - dashboard username\n- `accessToken` - `string` - Auth0 access token\n- `idToken` - `string` - Auth0 idToken\n- `refreshToken` - `string` - Auth0 refreshToken\n- `expiresAt` - `string` - epoch time at which the idToken expires\n\n**Example**\n\n```js\nconst { login } = require('@serverless/platform-sdk')\n\nconst { username, accessToken, idToken, expiresAt } = await login()\n```\n\n---\n\n### `refreshToken`\nRefreshes Auth0 idToken\n\n**Parameters**\n\nrefresh token string\n\n**Returns**\n\n\nPromise resolving to the following object:\n\n- `id_token` - `string` - new Auth0 id token\n- `access_token` - `string` - new Auth0 access token\n- `expires_in` - `string` - number of seconds until token expiration\n\n**Example**\n\n```js\nconst { refreshToken } = require('@serverless/platform-sdk')\n\nconst { id_token, access_token, expires_in } = await refreshToken('some-refresh-token')\n```\n\n---\n\n### `createAccessKey`\nCreates a platform access key for the authenticated user.\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `tenant` - `string` - dashboard tenant\n- `idToken` - `string` - Auth0 idToken\n- `title` - `string` - title of the access key\n\n**Returns**\n\nPromise resolving to an `accessKey` string, that is the access key.\n\n**Example**\n\n```js\nconst { createAccessKey } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  tenant: 'eahefnawy',\n  idToken: 'abc',\n  title: 'Framework'\n}\n\nconst accessKey = await createAccessKey(data)\n```\n\n---\n\n### `archiveService`\nArchives a service in the platform.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `accessKey` - `string` - dashboard access key\n- `app` - `string` - service app\n- `name` - `string` - service name\n- `provider` - `string` - provider name\n- `region` - `string` - region name\n\n**Returns**\n\nNone\n\n**Example**\n\n```js\nconst { archiveService } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  accessKey: 'abc',\n  app: 'my-app',\n  name: 'my-service',\n  provider: 'aws',\n  region: 'us-east-1'\n}\n\nawait archiveService(data)\n```\n\n---\n\n### `getServiceUrl`\nConstructs a service url based on passed-in data.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `app` - `string` - service app\n- `name` - `string` - service name\n\n\n**Returns**\n\nThe service url string.\n\n**Example**\n\n```js\nconst { getServiceUrl } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  name: 'my-service'\n}\n\nconst serviceUrl = getServiceUrl(data)\n```\n\n---\n\n### `listTenants`\nLists the tenants for a given username\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `idToken` - `string` - auth0 user id token\n\n\n**Returns**\n\nArray of objects, each represents a single tenant data model.\n\n**Example**\n\n```js\nconst { listTenants } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  idToken: 'abc'\n}\n\nconst tenants = await listTenants(data)\n```\n\n---\n\n### `createDeploymnet`\nCreates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `accessKey` - `string` - dashboard access key\n- `files` - `object` - files which should be stored in the Platforms deployment record\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { createDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  accessKey: 'abc',\n  files: {\n    'serverless-state.json': {\n      //...snip...\n    }\n  }\n}\n\nconst { id } = await createDeployment(data)\n```\n\n---\n\n### `updateDeployment`\nUpdates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `deploymentId` - `string` - id of the previously created deployment\n- `status` - `string` - status of the deployment to update\n- `accessKey` - `string` - dashboard access key\n- `computedData` - `object` - computed data the Platform needs to generate the state items\n\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { updateDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  deploymentId: 'abc',\n  status: 'failed',\n  accessKey: 'abc',\n  computedData: {\n    // ...snip...\n  }\n}\n\nconst { id } = await updateDeployment(data)\n```\n\n---\n\n### `getApp`\nGets a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { getApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await getApp(data)\n```\n\n---\n\n### `createApp`\nCreates a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { createApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await createApp(data)\n```\n","readmeFilename":"README.md","_id":"@serverless/platform-sdk@0.4.0-12-gfcf26a9","_npmVersion":"6.4.1","_nodeVersion":"10.15.0","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-EViyzOOmcFpJVx3acAhegyN/O/PgqGf8SJTPZI7u9GSexY3yTApIp02WWV7Lm/wZhX4/GkCrc/Tsn/fbEoy42Q==","shasum":"db594ac2fd1a319fd4c5d389b940de85f8a2ad4a","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-0.4.0-12-gfcf26a9.tgz","fileCount":61,"unpackedSize":128619,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcSgfCCRA9TVsSAnZWagAA6KgP/Aq/KFnuyMSMnQV0ZnWn\nWLAmxvDYVDiiLY9kfkKNF6keEfj+Ikd9r5nGG2iNfEjMsEvIs4UW2D03CRbH\noc0R0Sx3a/xWHC1fs8LPfDj1U17l3yyNz50cYW9795/QMaLpxBcIPrrp12L2\nSu4ITIusvOKDMU6tBxUDLMs+GhVS4j/H6YuyuIt33WJ4AxzQt7qp68rtHgku\nqSwe9s0I/hiYRtDZlyngB2NxEH97DT/VH7g+Y3SFxRCfnbaVHiGmgy2cXqjK\no/WWsQmO3b8VXnl2DYWqWLPocWZeI+c8cr0CM/HghOAxMyqPY0UPOgFWHoLC\n7Jd72lY5YrD3WB+k3PoUJaWTf47NLAPUf5Fh3mwLgX8/PfIAws0WoPxDCghR\nhqQo1Z2TaNRnmf2m8zv1jJl2HGveKaZo+/h5bi9oQG2wjC+XszrEI1b6TyxW\nAkP2SPwRiHBN2YW1CgZqul0sLHOxgIHX3xmFQNPOyJ+mAXrVxmfdWOLrOr/3\nYzHiH+9sZmn7LGOot12p2E0GgjkaB+knUpPahGYwD2FLaggnVewcv36+FY7d\nJ5cDM89yc46+eZKR2Cn8l/S7d8VZnc9c5Xgys+VY6qfSpXVv9b8ZTsnV7SXQ\npVfNuOXqlYlHjZZJaXy/v7nEJhUXpxcMQyDPgKgjgKIxJPDpMBc1H2CSayEC\nsydY\r\n=17Gm\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"services@serverless.com","name":"serverless-main"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_0.4.0-12-gfcf26a9_1548355521954_0.4804990815318022"},"_hasShrinkwrap":false},"0.4.0-15-g3d08763":{"name":"@serverless/platform-sdk","version":"0.4.0-15-g3d08763","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"prepare":"npm run build","build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","lint:staged":"lint-staged","setup":"./scripts/setup.sh","setup:ci":"./scripts/setup-ci.sh","test":"./scripts/test.sh","test:ci":"snyk test && ./scripts/test-ci.sh","watch":"./scripts/watch.sh"},"dependencies":{"babel-polyfill":"^6.26.0","body-parser":"^1.18.3","chalk":"^2.4.1","cors":"^2.8.4","express":"^4.16.3","is-docker":"^1.1.0","isomorphic-fetch":"^2.2.1","jwt-decode":"^2.2.0","opn":"^5.3.0","querystring":"^0.2.0","ramda":"^0.25.0","rc":"^1.2.8","source-map-support":"^0.5.5","write-file-atomic":"^2.3.0"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^21.2.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.13.0","eslint-plugin-prettier":"^2.6.1","jest-cli":"^21.2.0","lint-staged":"7.1.3","pre-commit":"^1.2.2","prettier":"^1.13.6","snyk":"^1.92.5"},"publishConfig":{"access":"public"},"lint-staged":{"*.js":["eslint --fix .","git add -A"]},"pre-commit":["lint:staged"],"gitHead":"3d08763a04a791b633ca946450120b6fe1a6eb29","readme":"# Platform SDK\n\nFunctional SDK for the Serverless Platfrom.\n\n## Project Status\n\n[![Build Status](https://travis-ci.org/serverless/platform-sdk.svg)](https://travis-ci.org/serverless/platform-sdk)\n[![license](https://img.shields.io/npm/l/@serverless/platform-sdk.svg)](https://www.npmjs.com/package/@serverless/platform-sdk)\n[![coverage](https://img.shields.io/codecov/c/github/serverless/platform-sdk.svg)](https://codecov.io/gh/serverless/platform-sdk)\n[![Known Vulnerabilities](https://snyk.io/test/github/serverless/platform-sdk/badge.svg)](https://snyk.io/test/github/serverless/platform-sdk)\n\n## Contents\n\n- [Installation](#installation)\n- [Functions](#functions)\n  - [login](#login)\n  - [refreshToken](#refreshtoken)\n  - [createAccessKey](#createaccesskey)\n  - [archiveService](#archiveservice)\n  - [getServiceUrl](#getserviceurl)\n  - [listTenants](#listtenants)\n  - [createDeployment](#createdeployment)\n  - [updateDeployment](#updatedeployment)\n  - [getApp](#getapp)\n  - [createApp](#createapp)\n\n## installation\n\n```\nnpm i -s @serverless/platform-sdk\n```\n\n## Functions\n### `login`\nOpens a browser for the user to login, along with a running server awaiting auth data once the user logs in.\n\n**Parameters**\n\nNone\n\n**Returns**\n\nPromise resolving to the following object:\n\n- `username` - `string` - dashboard username\n- `accessToken` - `string` - Auth0 access token\n- `idToken` - `string` - Auth0 idToken\n- `refreshToken` - `string` - Auth0 refreshToken\n- `expiresAt` - `string` - epoch time at which the idToken expires\n\n**Example**\n\n```js\nconst { login } = require('@serverless/platform-sdk')\n\nconst { username, accessToken, idToken, expiresAt } = await login()\n```\n\n---\n\n### `refreshToken`\nRefreshes Auth0 idToken\n\n**Parameters**\n\nrefresh token string\n\n**Returns**\n\n\nPromise resolving to the following object:\n\n- `id_token` - `string` - new Auth0 id token\n- `access_token` - `string` - new Auth0 access token\n- `expires_in` - `string` - number of seconds until token expiration\n\n**Example**\n\n```js\nconst { refreshToken } = require('@serverless/platform-sdk')\n\nconst { id_token, access_token, expires_in } = await refreshToken('some-refresh-token')\n```\n\n---\n\n### `createAccessKey`\nCreates a platform access key for the authenticated user.\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `tenant` - `string` - dashboard tenant\n- `idToken` - `string` - Auth0 idToken\n- `title` - `string` - title of the access key\n\n**Returns**\n\nPromise resolving to an `accessKey` string, that is the access key.\n\n**Example**\n\n```js\nconst { createAccessKey } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  tenant: 'eahefnawy',\n  idToken: 'abc',\n  title: 'Framework'\n}\n\nconst accessKey = await createAccessKey(data)\n```\n\n---\n\n### `archiveService`\nArchives a service in the platform.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `accessKey` - `string` - dashboard access key\n- `app` - `string` - service app\n- `name` - `string` - service name\n- `provider` - `string` - provider name\n- `region` - `string` - region name\n\n**Returns**\n\nNone\n\n**Example**\n\n```js\nconst { archiveService } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  accessKey: 'abc',\n  app: 'my-app',\n  name: 'my-service',\n  provider: 'aws',\n  region: 'us-east-1'\n}\n\nawait archiveService(data)\n```\n\n---\n\n### `getServiceUrl`\nConstructs a service url based on passed-in data.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `app` - `string` - service app\n- `name` - `string` - service name\n\n\n**Returns**\n\nThe service url string.\n\n**Example**\n\n```js\nconst { getServiceUrl } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  name: 'my-service'\n}\n\nconst serviceUrl = getServiceUrl(data)\n```\n\n---\n\n### `listTenants`\nLists the tenants for a given username\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `idToken` - `string` - auth0 user id token\n\n\n**Returns**\n\nArray of objects, each represents a single tenant data model.\n\n**Example**\n\n```js\nconst { listTenants } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  idToken: 'abc'\n}\n\nconst tenants = await listTenants(data)\n```\n\n---\n\n### `createDeploymnet`\nCreates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `accessKey` - `string` - dashboard access key\n- `files` - `object` - files which should be stored in the Platforms deployment record\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { createDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  accessKey: 'abc',\n  files: {\n    'serverless-state.json': {\n      //...snip...\n    }\n  }\n}\n\nconst { id } = await createDeployment(data)\n```\n\n---\n\n### `updateDeployment`\nUpdates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `deploymentId` - `string` - id of the previously created deployment\n- `status` - `string` - status of the deployment to update\n- `accessKey` - `string` - dashboard access key\n- `computedData` - `object` - computed data the Platform needs to generate the state items\n\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { updateDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  deploymentId: 'abc',\n  status: 'failed',\n  accessKey: 'abc',\n  computedData: {\n    // ...snip...\n  }\n}\n\nconst { id } = await updateDeployment(data)\n```\n\n---\n\n### `getApp`\nGets a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { getApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await getApp(data)\n```\n\n---\n\n### `createApp`\nCreates a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { createApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await createApp(data)\n```\n","readmeFilename":"README.md","_id":"@serverless/platform-sdk@0.4.0-15-g3d08763","_npmVersion":"6.4.1","_nodeVersion":"10.15.0","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-uMlaozBg5PCAUUuSsmfs4dEYumTAnSB26WhSpGcwJGXjuG3REXXJuvrXVmz1xuk5/QgzZumouxVYcA0gxFD8kQ==","shasum":"9a4774b4ae0dd120b36b6e8e921c814bbc8333a8","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-0.4.0-15-g3d08763.tgz","fileCount":61,"unpackedSize":126027,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcT2RyCRA9TVsSAnZWagAAks0P/3f/H40YDckZqrdzJ/+V\nOgQ3xSUvqSNQfARoCaDS7eSqVZmqYewT3M3RCQXdOmzzgijdlQ7iGA6tROKV\nU+oaJkkXu7zsRPikLgSm0Dgvu48ayXbMKHDaWrt9Dr5DMkNK80+gF3m80ZJB\nbJ7ph4HXIOP4WnuOAOtYd4ZEMfT6afqCdjDL8s8wTlJOeZujI8nCRe/iHb6Z\nS/BvqbjZi+pV0xGt4NxpLKWm5h6HkjZV2qqbwmSq/cAM4y7aussAG8GrU863\naw2BX0m2IHKyixUBySP9YXSuk76dUcypoF1R1fBmp/kGCaBfMc7/dY8a3kRT\nOOA+LWqQccJ5M7WDL2e7mAUvLNFVVEkhC/HjNn9TLM7MBjlu0B3CM91i+Aik\nf+ZV6gYOf6wqYNjd9dJ06BhtHsO5Jnx3jJ8she2ryc5ItpmfqVilwyaforYA\n6dxpQ5X4V/AchCxywzMVBgzCQdKwtzGoilW+kjrBQa9aqOM3nLLVVeCXwxtJ\ndV73cnVsbLC2+z0vKGotpbNDHgy1ssqXduGbgn6kibpGVXADRbtqsQefrbEF\nacCO+WhNHt+VnBoM2Q7JJTCZG04QEP8eita3m7wg1ri5JvPnZ0MN+Tj1veJl\nYjTUkoBBKHdnmH3/SMTbYTGIQMofAMbmALwPyZhcTpN7f7Dsa97bqLjP15KW\nzL+a\r\n=F1pO\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"services@serverless.com","name":"serverless-main"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_0.4.0-15-g3d08763_1548706929438_0.17291303229268307"},"_hasShrinkwrap":false},"0.5.0":{"name":"@serverless/platform-sdk","version":"0.5.0","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"prepare":"npm run build","build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","lint:staged":"lint-staged","setup":"./scripts/setup.sh","setup:ci":"./scripts/setup-ci.sh","test":"./scripts/test.sh","test:ci":"snyk test && ./scripts/test-ci.sh","watch":"./scripts/watch.sh"},"dependencies":{"babel-polyfill":"^6.26.0","body-parser":"^1.18.3","chalk":"^2.4.1","cors":"^2.8.4","express":"^4.16.3","is-docker":"^1.1.0","isomorphic-fetch":"^2.2.1","jwt-decode":"^2.2.0","opn":"^5.3.0","querystring":"^0.2.0","ramda":"^0.25.0","rc":"^1.2.8","source-map-support":"^0.5.5","write-file-atomic":"^2.3.0"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^21.2.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.13.0","eslint-plugin-prettier":"^2.6.1","jest-cli":"^21.2.0","lint-staged":"7.1.3","pre-commit":"^1.2.2","prettier":"^1.13.6","snyk":"^1.92.5"},"publishConfig":{"access":"public"},"lint-staged":{"*.js":["eslint --fix .","git add -A"]},"pre-commit":["lint:staged"],"gitHead":"3d08763a04a791b633ca946450120b6fe1a6eb29","_id":"@serverless/platform-sdk@0.5.0","_npmVersion":"6.4.1","_nodeVersion":"10.15.1","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-Nn2sc8rXEBPv19byikVJ8pQAdzESWTAZzpmav7h2Gr3TPBqcdzkKqwXK5O11r8ZwECb9JkgJqNtgAuVE3XNgvg==","shasum":"bad74e69af1e31892af5d0dab3ece1140c4323c2","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-0.5.0.tgz","fileCount":61,"unpackedSize":126015,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcUxGlCRA9TVsSAnZWagAAA0kP/RB8O3uR/dqW7a+PtuhJ\nH2V9wi0FQa+vVyExWCkUFZAIU45VujEzrvplrU4JJFaUgjj1dsx0oRoprf1i\nKMGUua4AbFgRXSBttV2aqK/Z9OiVbuL1VFlhSL29+/wPOtsQPAvY3nFm2tew\nv0Qgome5xkFFwHa1+rrx5c9Bn4q4vVofmckHjy1OevCWyuOuvirENQOEb8zB\nHeYVCnmUlSqD0VCEn3LMpJum7pTt1XniNT+O4151jBOGxKQgHeS3F/R45Ne9\nZXzXgy0ZexLSkT1OhnkTxH0JULwRoyE1ZvlIHYK9MYnBrXRCqhv0welqRSsI\nOsu7XU/Gwlm8gR5v9bC1XoAlSyWq8Zm0IOhcRzqkfcisWlQQAwL1GseWeSZU\nEtftaXX0n2zGbIn1Xi+P2U2P+p3Rd6sF4GPJ8vxZaNIYECaurhvMAnPvbFqX\nmDq3DUEeZ7QNBrPx8CUZSrLDC5WF8XzxzjnkdD2i4ohjqp2Y4GXVmasrxAuB\nCW+5Z3SkjcAiUZkMr6epNodntWkXxkoNr1H2zwqXs9obpR17wtOjB0XLN2IV\n5qR2gRFzp/LJeX/0JyYfJL4pdvRaW3JVTxHDfEF4Ug0J8UgdgLTqC2D+ThT3\n4gVbIGyxjGME3dAxyMxlG2+x/62W2yE3FHSe8+AwZgDm/FOUdj4civkt6SdR\nuZpj\r\n=PY6E\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"services@serverless.com","name":"serverless-main"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_0.5.0_1548947876774_0.9895576659545748"},"_hasShrinkwrap":false},"0.5.0-3-g50a7098":{"name":"@serverless/platform-sdk","version":"0.5.0-3-g50a7098","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"prepare":"npm run build","build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","lint:staged":"lint-staged","setup":"./scripts/setup.sh","setup:ci":"./scripts/setup-ci.sh","test":"./scripts/test.sh","test:ci":"snyk test && ./scripts/test-ci.sh","watch":"./scripts/watch.sh"},"dependencies":{"babel-polyfill":"^6.26.0","body-parser":"^1.18.3","chalk":"^2.4.1","cors":"^2.8.4","express":"^4.16.3","is-docker":"^1.1.0","isomorphic-fetch":"^2.2.1","jwt-decode":"^2.2.0","opn":"^5.3.0","querystring":"^0.2.0","ramda":"^0.25.0","rc":"^1.2.8","source-map-support":"^0.5.5","write-file-atomic":"^2.3.0"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^21.2.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.13.0","eslint-plugin-prettier":"^2.6.1","jest-cli":"^21.2.0","lint-staged":"7.1.3","pre-commit":"^1.2.2","prettier":"^1.13.6","snyk":"^1.92.5"},"publishConfig":{"access":"public"},"lint-staged":{"*.js":["eslint --fix .","git add -A"]},"pre-commit":["lint:staged"],"gitHead":"50a709842615965427f1e56beb6bea58e24522e4","readme":"# Platform SDK\n\nFunctional SDK for the Serverless Platfrom.\n\n## Project Status\n\n[![Build Status](https://travis-ci.org/serverless/platform-sdk.svg)](https://travis-ci.org/serverless/platform-sdk)\n[![license](https://img.shields.io/npm/l/@serverless/platform-sdk.svg)](https://www.npmjs.com/package/@serverless/platform-sdk)\n[![coverage](https://img.shields.io/codecov/c/github/serverless/platform-sdk.svg)](https://codecov.io/gh/serverless/platform-sdk)\n[![Known Vulnerabilities](https://snyk.io/test/github/serverless/platform-sdk/badge.svg)](https://snyk.io/test/github/serverless/platform-sdk)\n\n## Contents\n\n- [Installation](#installation)\n- [Functions](#functions)\n  - [login](#login)\n  - [refreshToken](#refreshtoken)\n  - [createAccessKey](#createaccesskey)\n  - [archiveService](#archiveservice)\n  - [getServiceUrl](#getserviceurl)\n  - [listTenants](#listtenants)\n  - [createDeployment](#createdeployment)\n  - [updateDeployment](#updatedeployment)\n  - [getApp](#getapp)\n  - [createApp](#createapp)\n\n## installation\n\n```\nnpm i -s @serverless/platform-sdk\n```\n\n## Functions\n### `login`\nOpens a browser for the user to login, along with a running server awaiting auth data once the user logs in.\n\n**Parameters**\n\nNone\n\n**Returns**\n\nPromise resolving to the following object:\n\n- `username` - `string` - dashboard username\n- `accessToken` - `string` - Auth0 access token\n- `idToken` - `string` - Auth0 idToken\n- `refreshToken` - `string` - Auth0 refreshToken\n- `expiresAt` - `string` - epoch time at which the idToken expires\n\n**Example**\n\n```js\nconst { login } = require('@serverless/platform-sdk')\n\nconst { username, accessToken, idToken, expiresAt } = await login()\n```\n\n---\n\n### `refreshToken`\nRefreshes Auth0 idToken\n\n**Parameters**\n\nrefresh token string\n\n**Returns**\n\n\nPromise resolving to the following object:\n\n- `id_token` - `string` - new Auth0 id token\n- `access_token` - `string` - new Auth0 access token\n- `expires_in` - `string` - number of seconds until token expiration\n\n**Example**\n\n```js\nconst { refreshToken } = require('@serverless/platform-sdk')\n\nconst { id_token, access_token, expires_in } = await refreshToken('some-refresh-token')\n```\n\n---\n\n### `createAccessKey`\nCreates a platform access key for the authenticated user.\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `tenant` - `string` - dashboard tenant\n- `idToken` - `string` - Auth0 idToken\n- `title` - `string` - title of the access key\n\n**Returns**\n\nPromise resolving to an `accessKey` string, that is the access key.\n\n**Example**\n\n```js\nconst { createAccessKey } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  tenant: 'eahefnawy',\n  idToken: 'abc',\n  title: 'Framework'\n}\n\nconst accessKey = await createAccessKey(data)\n```\n\n---\n\n### `archiveService`\nArchives a service in the platform.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `accessKey` - `string` - dashboard access key\n- `app` - `string` - service app\n- `name` - `string` - service name\n- `provider` - `string` - provider name\n- `region` - `string` - region name\n\n**Returns**\n\nNone\n\n**Example**\n\n```js\nconst { archiveService } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  accessKey: 'abc',\n  app: 'my-app',\n  name: 'my-service',\n  provider: 'aws',\n  region: 'us-east-1'\n}\n\nawait archiveService(data)\n```\n\n---\n\n### `getServiceUrl`\nConstructs a service url based on passed-in data.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `app` - `string` - service app\n- `name` - `string` - service name\n\n\n**Returns**\n\nThe service url string.\n\n**Example**\n\n```js\nconst { getServiceUrl } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  name: 'my-service'\n}\n\nconst serviceUrl = getServiceUrl(data)\n```\n\n---\n\n### `listTenants`\nLists the tenants for a given username\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `idToken` - `string` - auth0 user id token\n\n\n**Returns**\n\nArray of objects, each represents a single tenant data model.\n\n**Example**\n\n```js\nconst { listTenants } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  idToken: 'abc'\n}\n\nconst tenants = await listTenants(data)\n```\n\n---\n\n### `createDeploymnet`\nCreates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `accessKey` - `string` - dashboard access key\n- `files` - `object` - files which should be stored in the Platforms deployment record\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { createDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  accessKey: 'abc',\n  files: {\n    'serverless-state.json': {\n      //...snip...\n    }\n  }\n}\n\nconst { id } = await createDeployment(data)\n```\n\n---\n\n### `updateDeployment`\nUpdates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `deploymentId` - `string` - id of the previously created deployment\n- `status` - `string` - status of the deployment to update\n- `accessKey` - `string` - dashboard access key\n- `computedData` - `object` - computed data the Platform needs to generate the state items\n\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { updateDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  deploymentId: 'abc',\n  status: 'failed',\n  accessKey: 'abc',\n  computedData: {\n    // ...snip...\n  }\n}\n\nconst { id } = await updateDeployment(data)\n```\n\n---\n\n### `getApp`\nGets a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { getApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await getApp(data)\n```\n\n---\n\n### `createApp`\nCreates a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { createApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await createApp(data)\n```\n","readmeFilename":"README.md","_id":"@serverless/platform-sdk@0.5.0-3-g50a7098","_npmVersion":"6.4.1","_nodeVersion":"10.15.1","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-RXAMm3Uo8WNKXPbzXwFfUCz/bdl6UcUSb3cfG+xak6GqStV5BDhoUalfDNVu/qnUqzDljnkY72zUwv/HDTz4dA==","shasum":"ff0c95baaa7556bc6f1c1f5da8db24f6f21a103e","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-0.5.0-3-g50a7098.tgz","fileCount":63,"unpackedSize":133253,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcXJVVCRA9TVsSAnZWagAAHFMQAJeEzTyfja5dSL0ybfpT\nqaZE7/knskvP+4VABJR8bBxRcsmCnuldc4tdtfpZ5eH4A4axu34evYbvX/5d\n9InuElJvzydqk7WXmlruF9LN1MI2tCbfPt1i2/Ojk25eMpx4rHelE5j02Wzx\nkeCwhlRfcu7jHUkS6qc6k/A9aqykhVwMR7euZaGBapeTH73udH6evYHLjV1K\nciBT3FDS+CtjNh0wcgOY9vJEZgvszhdR2ZIrJND3TvOsm5y5aosLj4XrUSPu\naKMmbFh7Xs9zZjhFjuuror1qtnlIkH0DJTWoOwcFok2OnUszDmXHdqknVmhM\nGJiyFuxxE7L+godnUdWlvw3RxQpmXeMBqHR3YkbgqHT8A1KK9yKhtF3G/Rr1\nkZv5jYRJequlHgOH0uY94vYlqA0sqrfJyf5HojUrWfrt7Cuwg+keTp0VQ1u6\nQvX8cn8KzWgiCw2RkzIKr7H5KfKN8KelvxZm8O+RcLn6cvg3CV7ZAxXmYF6c\nY8n6/aBxGI9Tb/tCs9fPVfhLvmVw+qRUR5gNYnzO/8Db7zVySn5P8VRoTQV5\nF0xPV2oRzJHfrRqyACgN+Z3M+vQLJaRD9GAyseGedGnw0XZOJGrX51PRDnsI\n6BIyHgydQVPCXfwbv1A1SiF1bjxPcjsPkie8UZh3vCSLzHDIXZfDRLowKX0u\nlQ/Z\r\n=6PFu\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"services@serverless.com","name":"serverless-main"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_0.5.0-3-g50a7098_1549571413135_0.45827129229954355"},"_hasShrinkwrap":false},"0.5.0-6-gb5f6b70":{"name":"@serverless/platform-sdk","version":"0.5.0-6-gb5f6b70","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"prepare":"npm run build","build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","lint:staged":"lint-staged","setup":"./scripts/setup.sh","setup:ci":"./scripts/setup-ci.sh","test":"./scripts/test.sh","test:ci":"snyk test && ./scripts/test-ci.sh","watch":"./scripts/watch.sh"},"dependencies":{"babel-polyfill":"^6.26.0","body-parser":"^1.18.3","chalk":"^2.4.1","cors":"^2.8.4","express":"^4.16.3","is-docker":"^1.1.0","isomorphic-fetch":"^2.2.1","jwt-decode":"^2.2.0","opn":"^5.3.0","querystring":"^0.2.0","ramda":"^0.25.0","rc":"^1.2.8","source-map-support":"^0.5.5","write-file-atomic":"^2.3.0"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^21.2.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.13.0","eslint-plugin-prettier":"^2.6.1","jest-cli":"^21.2.0","lint-staged":"7.1.3","pre-commit":"^1.2.2","prettier":"^1.13.6","snyk":"^1.92.5"},"publishConfig":{"access":"public"},"lint-staged":{"*.js":["eslint --fix .","git add -A"]},"pre-commit":["lint:staged"],"gitHead":"b5f6b704e65c043fca14b7dcd3709b2b04569499","readme":"# Platform SDK\n\nFunctional SDK for the Serverless Platfrom.\n\n## Project Status\n\n[![Build Status](https://travis-ci.org/serverless/platform-sdk.svg)](https://travis-ci.org/serverless/platform-sdk)\n[![license](https://img.shields.io/npm/l/@serverless/platform-sdk.svg)](https://www.npmjs.com/package/@serverless/platform-sdk)\n[![coverage](https://img.shields.io/codecov/c/github/serverless/platform-sdk.svg)](https://codecov.io/gh/serverless/platform-sdk)\n[![Known Vulnerabilities](https://snyk.io/test/github/serverless/platform-sdk/badge.svg)](https://snyk.io/test/github/serverless/platform-sdk)\n\n## Contents\n\n- [Installation](#installation)\n- [Functions](#functions)\n  - [login](#login)\n  - [refreshToken](#refreshtoken)\n  - [createAccessKey](#createaccesskey)\n  - [archiveService](#archiveservice)\n  - [getServiceUrl](#getserviceurl)\n  - [listTenants](#listtenants)\n  - [createDeployment](#createdeployment)\n  - [updateDeployment](#updatedeployment)\n  - [getApp](#getapp)\n  - [createApp](#createapp)\n\n## installation\n\n```\nnpm i -s @serverless/platform-sdk\n```\n\n## Functions\n### `login`\nOpens a browser for the user to login, along with a running server awaiting auth data once the user logs in.\n\n**Parameters**\n\nNone\n\n**Returns**\n\nPromise resolving to the following object:\n\n- `username` - `string` - dashboard username\n- `accessToken` - `string` - Auth0 access token\n- `idToken` - `string` - Auth0 idToken\n- `refreshToken` - `string` - Auth0 refreshToken\n- `expiresAt` - `string` - epoch time at which the idToken expires\n\n**Example**\n\n```js\nconst { login } = require('@serverless/platform-sdk')\n\nconst { username, accessToken, idToken, expiresAt } = await login()\n```\n\n---\n\n### `refreshToken`\nRefreshes Auth0 idToken\n\n**Parameters**\n\nrefresh token string\n\n**Returns**\n\n\nPromise resolving to the following object:\n\n- `id_token` - `string` - new Auth0 id token\n- `access_token` - `string` - new Auth0 access token\n- `expires_in` - `string` - number of seconds until token expiration\n\n**Example**\n\n```js\nconst { refreshToken } = require('@serverless/platform-sdk')\n\nconst { id_token, access_token, expires_in } = await refreshToken('some-refresh-token')\n```\n\n---\n\n### `createAccessKey`\nCreates a platform access key for the authenticated user.\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `tenant` - `string` - dashboard tenant\n- `idToken` - `string` - Auth0 idToken\n- `title` - `string` - title of the access key\n\n**Returns**\n\nPromise resolving to an `accessKey` string, that is the access key.\n\n**Example**\n\n```js\nconst { createAccessKey } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  tenant: 'eahefnawy',\n  idToken: 'abc',\n  title: 'Framework'\n}\n\nconst accessKey = await createAccessKey(data)\n```\n\n---\n\n### `archiveService`\nArchives a service in the platform.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `accessKey` - `string` - dashboard access key\n- `app` - `string` - service app\n- `name` - `string` - service name\n- `provider` - `string` - provider name\n- `region` - `string` - region name\n\n**Returns**\n\nNone\n\n**Example**\n\n```js\nconst { archiveService } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  accessKey: 'abc',\n  app: 'my-app',\n  name: 'my-service',\n  provider: 'aws',\n  region: 'us-east-1'\n}\n\nawait archiveService(data)\n```\n\n---\n\n### `getServiceUrl`\nConstructs a service url based on passed-in data.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `app` - `string` - service app\n- `name` - `string` - service name\n\n\n**Returns**\n\nThe service url string.\n\n**Example**\n\n```js\nconst { getServiceUrl } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  name: 'my-service'\n}\n\nconst serviceUrl = getServiceUrl(data)\n```\n\n---\n\n### `listTenants`\nLists the tenants for a given username\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `idToken` - `string` - auth0 user id token\n\n\n**Returns**\n\nArray of objects, each represents a single tenant data model.\n\n**Example**\n\n```js\nconst { listTenants } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  idToken: 'abc'\n}\n\nconst tenants = await listTenants(data)\n```\n\n---\n\n### `createDeploymnet`\nCreates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `accessKey` - `string` - dashboard access key\n- `files` - `object` - files which should be stored in the Platforms deployment record\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { createDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  accessKey: 'abc',\n  files: {\n    'serverless-state.json': {\n      //...snip...\n    }\n  }\n}\n\nconst { id } = await createDeployment(data)\n```\n\n---\n\n### `updateDeployment`\nUpdates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `deploymentId` - `string` - id of the previously created deployment\n- `status` - `string` - status of the deployment to update\n- `accessKey` - `string` - dashboard access key\n- `computedData` - `object` - computed data the Platform needs to generate the state items\n\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { updateDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  deploymentId: 'abc',\n  status: 'failed',\n  accessKey: 'abc',\n  computedData: {\n    // ...snip...\n  }\n}\n\nconst { id } = await updateDeployment(data)\n```\n\n---\n\n### `getApp`\nGets a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { getApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await getApp(data)\n```\n\n---\n\n### `createApp`\nCreates a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { createApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await createApp(data)\n```\n","readmeFilename":"README.md","_id":"@serverless/platform-sdk@0.5.0-6-gb5f6b70","_npmVersion":"6.4.1","_nodeVersion":"10.15.1","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-Jf4jb1hVzaa3ndtlP0dJXzbvVF7t4CpKSPXAgYjuelZrGvsU9a6JpA3kkDn2TuWDs60mfE2W0G9AbhR6JETfpg==","shasum":"3f0a9186d5811042483d4f73abaf65902cc24547","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-0.5.0-6-gb5f6b70.tgz","fileCount":63,"unpackedSize":133374,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcXLCZCRA9TVsSAnZWagAAOpcP/iKQ6YbqCuBZNVO76L69\nXXmuB1/VaVRpt9kU7+nKOEHtFPI6F7w1Z0z+Zc/nrIoVBqAHYwlQNpbz7g3i\ni2yyXkI0wFEIF4x+l4Y5CymFsedVg4SATLAXmNDpZTUW64jZW4FtcwuqroQ0\njAMHH8tXAJxsOAGaVsOiLn8cHeMwHXwpAuFv10up+T3Uh3JR+jO8KF+gQ++l\nN5FizkABaxS+SHm5YZ4Xpvo71rjmDivpCAuyg35kHFk2Lh4DyYZFXLGAHqtC\nyPTxlcpjmzzWeyXxRkfsRtf+Z7jwNK2dTQRGWdG3I4dFaxaEghVoWHlBkct+\ntFw4h3DFGdHiCTMlnQwbzd/pY38or+VLibcIAJrcNq52w9L9t1HvrLzhSrw2\nZXU02Sh8isSLdu4ymeywxgUjPwfB0KtQil89sEAX5y4UfNrX3LMse/rqD7o7\nwVrdflti2HY+IeGxOgkyxSUeXadabt40zE6FBLJ3hRNEqukfUpEKV8LR8hfl\nX8Va9BC2a5ZiaqJyfnTjkLzuRlGYfoOwRLU7PHl+hJitx9kFJFTSRRTVhrAD\nwUAwImPO45V66s1ziDzmZiGY3TGH6PVceRGm27qWSd0YFHfyYuIpYyRUDddm\niC1X4Rj5ZOZl/cauCpybctXfLM91GCHPVuEpewg5fhN28T9bQxhDVjCnxiRo\n+CfA\r\n=XA3K\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"services@serverless.com","name":"serverless-main"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_0.5.0-6-gb5f6b70_1549578392407_0.10880836057733001"},"_hasShrinkwrap":false},"0.5.0-8-gfc58bac":{"name":"@serverless/platform-sdk","version":"0.5.0-8-gfc58bac","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"prepare":"npm run build","build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","lint:staged":"lint-staged","setup":"./scripts/setup.sh","setup:ci":"./scripts/setup-ci.sh","test":"./scripts/test.sh","test:ci":"snyk test && ./scripts/test-ci.sh","watch":"./scripts/watch.sh"},"dependencies":{"babel-polyfill":"^6.26.0","body-parser":"^1.18.3","chalk":"^2.4.1","cors":"^2.8.4","express":"^4.16.3","is-docker":"^1.1.0","isomorphic-fetch":"^2.2.1","jwt-decode":"^2.2.0","opn":"^5.3.0","querystring":"^0.2.0","ramda":"^0.25.0","rc":"^1.2.8","source-map-support":"^0.5.5","write-file-atomic":"^2.3.0"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^21.2.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.13.0","eslint-plugin-prettier":"^2.6.1","jest-cli":"^21.2.0","lint-staged":"7.1.3","pre-commit":"^1.2.2","prettier":"^1.13.6","snyk":"^1.92.5"},"publishConfig":{"access":"public"},"lint-staged":{"*.js":["eslint --fix .","git add -A"]},"pre-commit":["lint:staged"],"gitHead":"fc58baca58ffc063b90906db2dbd3a39c5294c2f","readme":"# Platform SDK\n\nFunctional SDK for the Serverless Platfrom.\n\n## Project Status\n\n[![Build Status](https://travis-ci.org/serverless/platform-sdk.svg)](https://travis-ci.org/serverless/platform-sdk)\n[![license](https://img.shields.io/npm/l/@serverless/platform-sdk.svg)](https://www.npmjs.com/package/@serverless/platform-sdk)\n[![coverage](https://img.shields.io/codecov/c/github/serverless/platform-sdk.svg)](https://codecov.io/gh/serverless/platform-sdk)\n[![Known Vulnerabilities](https://snyk.io/test/github/serverless/platform-sdk/badge.svg)](https://snyk.io/test/github/serverless/platform-sdk)\n\n## Contents\n\n- [Installation](#installation)\n- [Functions](#functions)\n  - [login](#login)\n  - [refreshToken](#refreshtoken)\n  - [createAccessKey](#createaccesskey)\n  - [archiveService](#archiveservice)\n  - [getServiceUrl](#getserviceurl)\n  - [listTenants](#listtenants)\n  - [createDeployment](#createdeployment)\n  - [updateDeployment](#updatedeployment)\n  - [getApp](#getapp)\n  - [createApp](#createapp)\n\n## installation\n\n```\nnpm i -s @serverless/platform-sdk\n```\n\n## Functions\n### `login`\nOpens a browser for the user to login, along with a running server awaiting auth data once the user logs in.\n\n**Parameters**\n\nNone\n\n**Returns**\n\nPromise resolving to the following object:\n\n- `username` - `string` - dashboard username\n- `accessToken` - `string` - Auth0 access token\n- `idToken` - `string` - Auth0 idToken\n- `refreshToken` - `string` - Auth0 refreshToken\n- `expiresAt` - `string` - epoch time at which the idToken expires\n\n**Example**\n\n```js\nconst { login } = require('@serverless/platform-sdk')\n\nconst { username, accessToken, idToken, expiresAt } = await login()\n```\n\n---\n\n### `refreshToken`\nRefreshes Auth0 idToken\n\n**Parameters**\n\nrefresh token string\n\n**Returns**\n\n\nPromise resolving to the following object:\n\n- `id_token` - `string` - new Auth0 id token\n- `access_token` - `string` - new Auth0 access token\n- `expires_in` - `string` - number of seconds until token expiration\n\n**Example**\n\n```js\nconst { refreshToken } = require('@serverless/platform-sdk')\n\nconst { id_token, access_token, expires_in } = await refreshToken('some-refresh-token')\n```\n\n---\n\n### `createAccessKey`\nCreates a platform access key for the authenticated user.\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `tenant` - `string` - dashboard tenant\n- `idToken` - `string` - Auth0 idToken\n- `title` - `string` - title of the access key\n\n**Returns**\n\nPromise resolving to an `accessKey` string, that is the access key.\n\n**Example**\n\n```js\nconst { createAccessKey } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  tenant: 'eahefnawy',\n  idToken: 'abc',\n  title: 'Framework'\n}\n\nconst accessKey = await createAccessKey(data)\n```\n\n---\n\n### `archiveService`\nArchives a service in the platform.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `accessKey` - `string` - dashboard access key\n- `app` - `string` - service app\n- `name` - `string` - service name\n- `provider` - `string` - provider name\n- `region` - `string` - region name\n\n**Returns**\n\nNone\n\n**Example**\n\n```js\nconst { archiveService } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  accessKey: 'abc',\n  app: 'my-app',\n  name: 'my-service',\n  provider: 'aws',\n  region: 'us-east-1'\n}\n\nawait archiveService(data)\n```\n\n---\n\n### `getServiceUrl`\nConstructs a service url based on passed-in data.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `app` - `string` - service app\n- `name` - `string` - service name\n\n\n**Returns**\n\nThe service url string.\n\n**Example**\n\n```js\nconst { getServiceUrl } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  name: 'my-service'\n}\n\nconst serviceUrl = getServiceUrl(data)\n```\n\n---\n\n### `listTenants`\nLists the tenants for a given username\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `idToken` - `string` - auth0 user id token\n\n\n**Returns**\n\nArray of objects, each represents a single tenant data model.\n\n**Example**\n\n```js\nconst { listTenants } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  idToken: 'abc'\n}\n\nconst tenants = await listTenants(data)\n```\n\n---\n\n### `createDeploymnet`\nCreates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `accessKey` - `string` - dashboard access key\n- `files` - `object` - files which should be stored in the Platforms deployment record\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { createDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  accessKey: 'abc',\n  files: {\n    'serverless-state.json': {\n      //...snip...\n    }\n  }\n}\n\nconst { id } = await createDeployment(data)\n```\n\n---\n\n### `updateDeployment`\nUpdates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `deploymentId` - `string` - id of the previously created deployment\n- `status` - `string` - status of the deployment to update\n- `accessKey` - `string` - dashboard access key\n- `computedData` - `object` - computed data the Platform needs to generate the state items\n\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { updateDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  deploymentId: 'abc',\n  status: 'failed',\n  accessKey: 'abc',\n  computedData: {\n    // ...snip...\n  }\n}\n\nconst { id } = await updateDeployment(data)\n```\n\n---\n\n### `getApp`\nGets a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { getApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await getApp(data)\n```\n\n---\n\n### `createApp`\nCreates a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { createApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await createApp(data)\n```\n","readmeFilename":"README.md","_id":"@serverless/platform-sdk@0.5.0-8-gfc58bac","_npmVersion":"6.4.1","_nodeVersion":"10.15.1","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-4cjJZZYzuLxPkNgR1uscfIhEQjAoDunfskeljs5gS1v5jjP2KkLTLjx18MMoIZMRXCAa+GAmW6omQNCcEaAiWw==","shasum":"3ef55105c3c84f6886b287a5642f8911aa6468fa","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-0.5.0-8-gfc58bac.tgz","fileCount":63,"unpackedSize":134302,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcYc4FCRA9TVsSAnZWagAAl/0P/jaYEni7TC7h6uKxExSJ\nPIEPsqoua5+yA3k0Qcd967VB1+zLRrBLYAmRPImME/me31pozDHX91Qsc/jb\n0cVNIf8jqCoTW4UasC7xeSncA5L8RKDrTc0JiotbaB5zQVi26KpFCOEQ3N3h\nAZCmMl9pLs7Y4bOual04vvo2AM9tihLMeH4QR4lQBZAxdMFgRaUDV6z0FxYH\nQHqR/vbuZbyUtBOsjgTkG8sjW8hZTjzbwJWbW718BzvPL0Ig9XxJzZZBh8Yq\ntmIWeCcizQVLFNJKH25MgDxBjiGE6ttM5qkiYrHOZ3YtjDgTB/vxCeqXfJD6\nxyBADl/CrOtPBT/Db5uQJMpE9OD7+JMfqE8Bms5/dAMrX8DEywErF2/ab8w4\nOICXsYynQoPV0GbCF+eJd2bkF7sqlmilabzRBnrFyhDlQkr062LUSM8weEBC\nl5cBzPBCtbrBAA1YsGAUh/fo6MKrYEMGbvjw5HqT1G9ZJDY36tRLGdYCzt1Y\nCsdzmisgV/6LLOB72oBd0nZcmaPaH8PqMRovi3+ioF7eyuyySQA7Yi0GItb4\n5nyznO+y4lmoHFX2WII0KKkqQ8SzzhAfqVb5zA24+NNUFiLiieuVVkH0ePHs\nipEEcPwxGwo1CHiyUHG3oPflrvHff4JN5u8BicnJmnVJiRBUrm0i0dXiYG+3\nkfBw\r\n=XO6B\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"services@serverless.com","name":"serverless-main"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_0.5.0-8-gfc58bac_1549913604392_0.7834912561776388"},"_hasShrinkwrap":false},"0.5.0-10-g9a6f0e6":{"name":"@serverless/platform-sdk","version":"0.5.0-10-g9a6f0e6","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"prepare":"npm run build","build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","lint:staged":"lint-staged","setup":"./scripts/setup.sh","setup:ci":"./scripts/setup-ci.sh","test":"./scripts/test.sh","test:ci":"snyk test && ./scripts/test-ci.sh","watch":"./scripts/watch.sh"},"dependencies":{"babel-polyfill":"^6.26.0","body-parser":"^1.18.3","chalk":"^2.4.1","cors":"^2.8.4","express":"^4.16.3","is-docker":"^1.1.0","isomorphic-fetch":"^2.2.1","jwt-decode":"^2.2.0","opn":"^5.3.0","querystring":"^0.2.0","ramda":"^0.25.0","rc":"^1.2.8","source-map-support":"^0.5.5","write-file-atomic":"^2.3.0"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^21.2.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.13.0","eslint-plugin-prettier":"^2.6.1","jest-cli":"^21.2.0","lint-staged":"7.1.3","pre-commit":"^1.2.2","prettier":"^1.13.6","snyk":"^1.92.5"},"publishConfig":{"access":"public"},"lint-staged":{"*.js":["eslint --fix .","git add -A"]},"pre-commit":["lint:staged"],"gitHead":"9a6f0e67baaebce870cea5562005a480dc8f10ec","readme":"# Platform SDK\n\nFunctional SDK for the Serverless Platfrom.\n\n## Project Status\n\n[![Build Status](https://travis-ci.com/serverless/platform-sdk.svg)](https://travis-ci.com/serverless/platform-sdk)\n[![license](https://img.shields.io/npm/l/@serverless/platform-sdk.svg)](https://www.npmjs.com/package/@serverless/platform-sdk)\n[![coverage](https://img.shields.io/codecov/c/github/serverless/platform-sdk.svg)](https://codecov.io/gh/serverless/platform-sdk)\n[![Known Vulnerabilities](https://snyk.io/test/github/serverless/platform-sdk/badge.svg)](https://snyk.io/test/github/serverless/platform-sdk)\n\n## Contents\n\n- [Installation](#installation)\n- [Functions](#functions)\n  - [login](#login)\n  - [refreshToken](#refreshtoken)\n  - [createAccessKey](#createaccesskey)\n  - [archiveService](#archiveservice)\n  - [getServiceUrl](#getserviceurl)\n  - [listTenants](#listtenants)\n  - [createDeployment](#createdeployment)\n  - [updateDeployment](#updatedeployment)\n  - [getApp](#getapp)\n  - [createApp](#createapp)\n\n## installation\n\n```\nnpm i -s @serverless/platform-sdk\n```\n\n## Functions\n### `login`\nOpens a browser for the user to login, along with a running server awaiting auth data once the user logs in.\n\n**Parameters**\n\nNone\n\n**Returns**\n\nPromise resolving to the following object:\n\n- `username` - `string` - dashboard username\n- `accessToken` - `string` - Auth0 access token\n- `idToken` - `string` - Auth0 idToken\n- `refreshToken` - `string` - Auth0 refreshToken\n- `expiresAt` - `string` - epoch time at which the idToken expires\n\n**Example**\n\n```js\nconst { login } = require('@serverless/platform-sdk')\n\nconst { username, accessToken, idToken, expiresAt } = await login()\n```\n\n---\n\n### `refreshToken`\nRefreshes Auth0 idToken\n\n**Parameters**\n\nrefresh token string\n\n**Returns**\n\n\nPromise resolving to the following object:\n\n- `id_token` - `string` - new Auth0 id token\n- `access_token` - `string` - new Auth0 access token\n- `expires_in` - `string` - number of seconds until token expiration\n\n**Example**\n\n```js\nconst { refreshToken } = require('@serverless/platform-sdk')\n\nconst { id_token, access_token, expires_in } = await refreshToken('some-refresh-token')\n```\n\n---\n\n### `createAccessKey`\nCreates a platform access key for the authenticated user.\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `tenant` - `string` - dashboard tenant\n- `idToken` - `string` - Auth0 idToken\n- `title` - `string` - title of the access key\n\n**Returns**\n\nPromise resolving to an `accessKey` string, that is the access key.\n\n**Example**\n\n```js\nconst { createAccessKey } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  tenant: 'eahefnawy',\n  idToken: 'abc',\n  title: 'Framework'\n}\n\nconst accessKey = await createAccessKey(data)\n```\n\n---\n\n### `archiveService`\nArchives a service in the platform.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `accessKey` - `string` - dashboard access key\n- `app` - `string` - service app\n- `name` - `string` - service name\n- `provider` - `string` - provider name\n- `region` - `string` - region name\n\n**Returns**\n\nNone\n\n**Example**\n\n```js\nconst { archiveService } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  accessKey: 'abc',\n  app: 'my-app',\n  name: 'my-service',\n  provider: 'aws',\n  region: 'us-east-1'\n}\n\nawait archiveService(data)\n```\n\n---\n\n### `getServiceUrl`\nConstructs a service url based on passed-in data.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `app` - `string` - service app\n- `name` - `string` - service name\n\n\n**Returns**\n\nThe service url string.\n\n**Example**\n\n```js\nconst { getServiceUrl } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  name: 'my-service'\n}\n\nconst serviceUrl = getServiceUrl(data)\n```\n\n---\n\n### `listTenants`\nLists the tenants for a given username\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `idToken` - `string` - auth0 user id token\n\n\n**Returns**\n\nArray of objects, each represents a single tenant data model.\n\n**Example**\n\n```js\nconst { listTenants } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  idToken: 'abc'\n}\n\nconst tenants = await listTenants(data)\n```\n\n---\n\n### `createDeploymnet`\nCreates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `accessKey` - `string` - dashboard access key\n- `files` - `object` - files which should be stored in the Platforms deployment record\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { createDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  accessKey: 'abc',\n  files: {\n    'serverless-state.json': {\n      //...snip...\n    }\n  }\n}\n\nconst { id } = await createDeployment(data)\n```\n\n---\n\n### `updateDeployment`\nUpdates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `deploymentId` - `string` - id of the previously created deployment\n- `status` - `string` - status of the deployment to update\n- `accessKey` - `string` - dashboard access key\n- `computedData` - `object` - computed data the Platform needs to generate the state items\n\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { updateDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  deploymentId: 'abc',\n  status: 'failed',\n  accessKey: 'abc',\n  computedData: {\n    // ...snip...\n  }\n}\n\nconst { id } = await updateDeployment(data)\n```\n\n---\n\n### `getApp`\nGets a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { getApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await getApp(data)\n```\n\n---\n\n### `createApp`\nCreates a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { createApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await createApp(data)\n```\n","readmeFilename":"README.md","_id":"@serverless/platform-sdk@0.5.0-10-g9a6f0e6","_npmVersion":"6.4.1","_nodeVersion":"10.15.1","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-LYDllX/HIFJPA1J/Lh34NwBJQL0M9zbi+oP3R9x3fBI0x0E1g4hDu9TEt4ilYjn4dzfsJFiBR5FFIXAU2Jb0sA==","shasum":"ed24388911dda40b73e8aa12c382606b1a37e0bc","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-0.5.0-10-g9a6f0e6.tgz","fileCount":63,"unpackedSize":134303,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcas4OCRA9TVsSAnZWagAA4dsP/1Cx9F3xPFSdfo4q6slU\nnmua/5FRQ0VD5PlcizSNoa48+tJYrsip9ZKZzHcmvGx3aMn99L+lC/oeHp2f\ndhntq3CNXSeqPT/YHxBSAtZbJMvQJ+VDptSpv+9Od8YJNfTfzTOJK6qZALE1\nYWOuEQiMACoo/4dpbgVrRFuSH0e4Wpoi8g0DPdmQin/jnSUAfBDmgTR3eVaf\nWyFCrbpTftwrbB3IR6CkfEsBly7OqyghEBPG28yWfOY5uwn1eRU2iyIRXhlk\n5wyRtpAjKacWS16j4iRvnH5hEAhEdpBz6+aqf1vvrqX/0NgqaCOvU3Urg1v7\nlQH+gvnL56+hKTrrhfu+8EXumCXwNB2m76RvjbC104Qoi+FuFRrZJafDKYK5\n04buVOkRi7ru6iC2jh56qpfRb6jN0kHMsZVRPWwf9gPCy5elpdW5pio5WaYJ\n40x3RoolPyvhxhVXiURJrWwg0Znwh/4MfBp/F7eSys/DVN6T+wSuSmbblCpT\npXSjtl/hhaOTdKWf7eYyeduAOUbcWvmRJdDSvrnKRIMrC4gMvh0+fBahtovz\nlrORwR+IVw04ArTlUx3BCFWlUrMj8q3BmnaQFXeIFmSBqNqVYguZJTwrOX7F\nOpkU8SrbQIpfZOIv/xxzlKVi91a7Y7CUFHDLgUmZ1vM5+fVShUDJitcRqTax\nXsuX\r\n=jB0z\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"services@serverless.com","name":"serverless-main"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_0.5.0-10-g9a6f0e6_1550503438482_0.3234732787005077"},"_hasShrinkwrap":false},"0.5.0-12-gbabddd7":{"name":"@serverless/platform-sdk","version":"0.5.0-12-gbabddd7","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"prepare":"npm run build","build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","lint:staged":"lint-staged","setup":"./scripts/setup.sh","setup:ci":"./scripts/setup-ci.sh","test":"./scripts/test.sh","test:ci":"snyk test && ./scripts/test-ci.sh","watch":"./scripts/watch.sh"},"dependencies":{"babel-polyfill":"^6.26.0","body-parser":"^1.18.3","chalk":"^2.4.1","cors":"^2.8.4","express":"^4.16.3","is-docker":"^1.1.0","isomorphic-fetch":"^2.2.1","jwt-decode":"^2.2.0","opn":"^5.3.0","querystring":"^0.2.0","ramda":"^0.25.0","rc":"^1.2.8","source-map-support":"^0.5.5","write-file-atomic":"^2.3.0"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^21.2.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.13.0","eslint-plugin-prettier":"^2.6.1","jest-cli":"^21.2.0","lint-staged":"7.1.3","pre-commit":"^1.2.2","prettier":"^1.13.6","snyk":"^1.92.5"},"publishConfig":{"access":"public"},"lint-staged":{"*.js":["eslint --fix .","git add -A"]},"pre-commit":["lint:staged"],"gitHead":"babddd7c958f099a3dd64f843b17941f61d3f902","readme":"# Platform SDK\n\nFunctional SDK for the Serverless Platfrom.\n\n## Project Status\n\n[![Build Status](https://travis-ci.com/serverless/platform-sdk.svg)](https://travis-ci.com/serverless/platform-sdk)\n[![license](https://img.shields.io/npm/l/@serverless/platform-sdk.svg)](https://www.npmjs.com/package/@serverless/platform-sdk)\n[![coverage](https://img.shields.io/codecov/c/github/serverless/platform-sdk.svg)](https://codecov.io/gh/serverless/platform-sdk)\n[![Known Vulnerabilities](https://snyk.io/test/github/serverless/platform-sdk/badge.svg)](https://snyk.io/test/github/serverless/platform-sdk)\n\n## Contents\n\n- [Installation](#installation)\n- [Functions](#functions)\n  - [login](#login)\n  - [refreshToken](#refreshtoken)\n  - [createAccessKey](#createaccesskey)\n  - [archiveService](#archiveservice)\n  - [getServiceUrl](#getserviceurl)\n  - [listTenants](#listtenants)\n  - [createDeployment](#createdeployment)\n  - [updateDeployment](#updatedeployment)\n  - [getApp](#getapp)\n  - [createApp](#createapp)\n\n## installation\n\n```\nnpm i -s @serverless/platform-sdk\n```\n\n## Functions\n### `login`\nOpens a browser for the user to login, along with a running server awaiting auth data once the user logs in.\n\n**Parameters**\n\nNone\n\n**Returns**\n\nPromise resolving to the following object:\n\n- `username` - `string` - dashboard username\n- `accessToken` - `string` - Auth0 access token\n- `idToken` - `string` - Auth0 idToken\n- `refreshToken` - `string` - Auth0 refreshToken\n- `expiresAt` - `string` - epoch time at which the idToken expires\n\n**Example**\n\n```js\nconst { login } = require('@serverless/platform-sdk')\n\nconst { username, accessToken, idToken, expiresAt } = await login()\n```\n\n---\n\n### `refreshToken`\nRefreshes Auth0 idToken\n\n**Parameters**\n\nrefresh token string\n\n**Returns**\n\n\nPromise resolving to the following object:\n\n- `id_token` - `string` - new Auth0 id token\n- `access_token` - `string` - new Auth0 access token\n- `expires_in` - `string` - number of seconds until token expiration\n\n**Example**\n\n```js\nconst { refreshToken } = require('@serverless/platform-sdk')\n\nconst { id_token, access_token, expires_in } = await refreshToken('some-refresh-token')\n```\n\n---\n\n### `createAccessKey`\nCreates a platform access key for the authenticated user.\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `tenant` - `string` - dashboard tenant\n- `idToken` - `string` - Auth0 idToken\n- `title` - `string` - title of the access key\n\n**Returns**\n\nPromise resolving to an `accessKey` string, that is the access key.\n\n**Example**\n\n```js\nconst { createAccessKey } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  tenant: 'eahefnawy',\n  idToken: 'abc',\n  title: 'Framework'\n}\n\nconst accessKey = await createAccessKey(data)\n```\n\n---\n\n### `archiveService`\nArchives a service in the platform.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `accessKey` - `string` - dashboard access key\n- `app` - `string` - service app\n- `name` - `string` - service name\n- `provider` - `string` - provider name\n- `region` - `string` - region name\n\n**Returns**\n\nNone\n\n**Example**\n\n```js\nconst { archiveService } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  accessKey: 'abc',\n  app: 'my-app',\n  name: 'my-service',\n  provider: 'aws',\n  region: 'us-east-1'\n}\n\nawait archiveService(data)\n```\n\n---\n\n### `getServiceUrl`\nConstructs a service url based on passed-in data.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `app` - `string` - service app\n- `name` - `string` - service name\n\n\n**Returns**\n\nThe service url string.\n\n**Example**\n\n```js\nconst { getServiceUrl } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  name: 'my-service'\n}\n\nconst serviceUrl = getServiceUrl(data)\n```\n\n---\n\n### `listTenants`\nLists the tenants for a given username\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `idToken` - `string` - auth0 user id token\n\n\n**Returns**\n\nArray of objects, each represents a single tenant data model.\n\n**Example**\n\n```js\nconst { listTenants } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  idToken: 'abc'\n}\n\nconst tenants = await listTenants(data)\n```\n\n---\n\n### `createDeploymnet`\nCreates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `accessKey` - `string` - dashboard access key\n- `files` - `object` - files which should be stored in the Platforms deployment record\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { createDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  accessKey: 'abc',\n  files: {\n    'serverless-state.json': {\n      //...snip...\n    }\n  }\n}\n\nconst { id } = await createDeployment(data)\n```\n\n---\n\n### `updateDeployment`\nUpdates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `deploymentId` - `string` - id of the previously created deployment\n- `status` - `string` - status of the deployment to update\n- `accessKey` - `string` - dashboard access key\n- `computedData` - `object` - computed data the Platform needs to generate the state items\n\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { updateDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  deploymentId: 'abc',\n  status: 'failed',\n  accessKey: 'abc',\n  computedData: {\n    // ...snip...\n  }\n}\n\nconst { id } = await updateDeployment(data)\n```\n\n---\n\n### `getApp`\nGets a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { getApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await getApp(data)\n```\n\n---\n\n### `createApp`\nCreates a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { createApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await createApp(data)\n```\n","readmeFilename":"README.md","_id":"@serverless/platform-sdk@0.5.0-12-gbabddd7","_npmVersion":"6.4.1","_nodeVersion":"10.15.1","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-l13p0ISU/b3C9K85zSpMCRswS4lMvXJUUWR2dddFIOpcbLxBOjtsC/vHn0q38cG5E4vToGlPQ23oI2cRYeZa1w==","shasum":"9468e1ef80415c4c8968df94b61ce5e79faadc20","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-0.5.0-12-gbabddd7.tgz","fileCount":63,"unpackedSize":134303,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcatgkCRA9TVsSAnZWagAAzucQAJ/xy8myNoOVao0pzBF9\nf5/9z1yTQv2/cl0VUlMUGiCvEYb3V7BIHKsy7HWWFnkq8QW51AssIM/a5lv0\nM17YE2tH7BUEMFxyEN8FiJR6zNY5kLa9c55uhORBSJD4RJwuNBaXW+4rwldN\nJmsNITs6qPb/hknVhVxZ+eKnGWbjfhWkIAbJohrQ+4FTP4QOttOfl4IpMH6i\nOo7uRlpvLw9f42cYu2YiM6BoQIdWvdh3+AvD0y6Os3N7RU9wJW729+pf/mwV\n8izGOneX6nEVmmYAQR1s7Xo3o0EfdnFa6ef0ZEB93rt7PHhcTTdVsYIU2d83\nMFW7+dcwCZV2DVGY9+y5tdut8fHACOpkklXVyOuPo6k4DgV0mAS77jr4KdNk\nEbujj7yAymrnvMIpLCVN11KtAX31Vg79+UsqVbMmwislB2dbIre1tGkdEraj\nB1D0KE2SRkQb11VoJkg9AUnUfmv3w/de8Rs/K5YCHUJ86enJmOguhJkiwPms\nTKNRkdOoORJDl1PcosejQEt4B4WjzFCV+pneslOPo7U0va4MchStjxxR2mvP\n9SlP7br0btjqDbej/yP8EgPBL40xcquVJBBZl2wnV1nA+2Li8MlMyJh2GnHv\nJRbijmha0zFXG9++Yq76GPdPtCBgWXZO9F6AwL+GLoOX1nDwaF0wd/8QF7jk\nIJn2\r\n=evIO\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"services@serverless.com","name":"serverless-main"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_0.5.0-12-gbabddd7_1550506019678_0.0007235154850231407"},"_hasShrinkwrap":false},"0.6.0":{"name":"@serverless/platform-sdk","version":"0.6.0","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"prepare":"npm run build","build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","lint:staged":"lint-staged","setup":"./scripts/setup.sh","setup:ci":"./scripts/setup-ci.sh","test":"./scripts/test.sh","test:ci":"snyk test && ./scripts/test-ci.sh","watch":"./scripts/watch.sh"},"dependencies":{"babel-polyfill":"^6.26.0","body-parser":"^1.18.3","chalk":"^2.4.1","cors":"^2.8.4","express":"^4.16.3","is-docker":"^1.1.0","isomorphic-fetch":"^2.2.1","jwt-decode":"^2.2.0","opn":"^5.3.0","querystring":"^0.2.0","ramda":"^0.25.0","rc":"^1.2.8","source-map-support":"^0.5.5","write-file-atomic":"^2.3.0"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^21.2.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.13.0","eslint-plugin-prettier":"^2.6.1","jest-cli":"^21.2.0","lint-staged":"7.1.3","pre-commit":"^1.2.2","prettier":"^1.13.6","snyk":"^1.92.5"},"publishConfig":{"access":"public"},"lint-staged":{"*.js":["eslint --fix .","git add -A"]},"pre-commit":["lint:staged"],"gitHead":"babddd7c958f099a3dd64f843b17941f61d3f902","_id":"@serverless/platform-sdk@0.6.0","_npmVersion":"6.4.1","_nodeVersion":"10.15.1","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-KW/3cVShhTCmC8uE6V/xQszp29EUPVy38OiBK/2DscieZlELE+vd5XKDAZ4NskIKVdh+l7eqqbGUGl2XvBf8dg==","shasum":"55ee23534aee4831eabceefac2292acf28d825f0","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-0.6.0.tgz","fileCount":63,"unpackedSize":134291,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcatj0CRA9TVsSAnZWagAAtfcP/0D3uACVVdUpsXrlhGv9\nam2BV4w6nP7rFNZTsiAyJL87PWqxvWE7MmvEVsOVXFNbg9XaSBVMTO8ovo4z\nadcNiSNTb2ruUWvF3r1d2H2YiDC3jtVGPOaD4njz6d9NGz7v/uYBavRESy35\nx9cHUcZcj/Dg3I3ukU4WruVescKjY5oV24oA6x9Aood1yRiBxWD36oLqq0lS\nOuIOL009af4qOJQxVaW8Ye3ydhijUlKd0Iym6RciiLQYCXYdTSMuH3I73UES\n/WxstMdbnqTX8jIFHTYSZb6K1IyjsFpc70On69SpVj90ZdzViBMNeM3kC1pT\n09BDSHWFo6dvbaO2xeL316Grj+3CzMVqoQu61C+oQXcv+N2aiJWWXbbcFqp/\n57f/eHVq+FIsKV0gc08Y8C+wZ0nkvzvY/NaWipJOb0yy0/9WAkGn89JRFKEY\nkzsixuP2yRqm6OSc5x9OR5B07Utf9/5UWTYd8rdqqQ3dVPz0U6nWt66Ipym1\noJy3Guu4qyEnD146IUs4V+Zb5D6yEGXClfvxtn0LfrfPq7QJt0ngXCprvyUc\n7Rp1bfmGCu1Jqb9tpUgfjnsX35Jby5kxGPhL428Sy/mrCJ30v1iKBKnDya8D\njFxmlLpCP23LphhsfvcIVwqYsoBqRsO4Ebni9Wb6UGBN4PFrEoo/LpTe1lk9\nv5fq\r\n=SXCl\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"services@serverless.com","name":"serverless-main"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_0.6.0_1550506227693_0.32635378712736984"},"_hasShrinkwrap":false},"0.6.0-2-g26f1372":{"name":"@serverless/platform-sdk","version":"0.6.0-2-g26f1372","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"prepare":"npm run build","build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","lint:staged":"lint-staged","setup":"./scripts/setup.sh","setup:ci":"./scripts/setup-ci.sh","test":"./scripts/test.sh","test:ci":"snyk test && ./scripts/test-ci.sh","watch":"./scripts/watch.sh"},"dependencies":{"babel-polyfill":"^6.26.0","body-parser":"^1.18.3","chalk":"^2.4.1","cors":"^2.8.4","express":"^4.16.3","is-docker":"^1.1.0","isomorphic-fetch":"^2.2.1","jwt-decode":"^2.2.0","opn":"^5.3.0","querystring":"^0.2.0","ramda":"^0.25.0","rc":"^1.2.8","source-map-support":"^0.5.5","write-file-atomic":"^2.3.0"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^21.2.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.13.0","eslint-plugin-prettier":"^2.6.1","jest-cli":"^21.2.0","lint-staged":"7.1.3","pre-commit":"^1.2.2","prettier":"^1.13.6","snyk":"^1.92.5"},"publishConfig":{"access":"public"},"lint-staged":{"*.js":["eslint --fix .","git add -A"]},"pre-commit":["lint:staged"],"gitHead":"26f137231f6d6cf2bd0a5150ca39d1861ce9b215","readme":"# Platform SDK\n\nFunctional SDK for the Serverless Platfrom.\n\n## Project Status\n\n[![Build Status](https://travis-ci.com/serverless/platform-sdk.svg)](https://travis-ci.com/serverless/platform-sdk)\n[![license](https://img.shields.io/npm/l/@serverless/platform-sdk.svg)](https://www.npmjs.com/package/@serverless/platform-sdk)\n[![coverage](https://img.shields.io/codecov/c/github/serverless/platform-sdk.svg)](https://codecov.io/gh/serverless/platform-sdk)\n[![Known Vulnerabilities](https://snyk.io/test/github/serverless/platform-sdk/badge.svg)](https://snyk.io/test/github/serverless/platform-sdk)\n\n## Contents\n\n- [Installation](#installation)\n- [Functions](#functions)\n  - [login](#login)\n  - [refreshToken](#refreshtoken)\n  - [createAccessKey](#createaccesskey)\n  - [archiveService](#archiveservice)\n  - [getServiceUrl](#getserviceurl)\n  - [listTenants](#listtenants)\n  - [createDeployment](#createdeployment)\n  - [updateDeployment](#updatedeployment)\n  - [getApp](#getapp)\n  - [createApp](#createapp)\n\n## installation\n\n```\nnpm i -s @serverless/platform-sdk\n```\n\n## Functions\n### `login`\nOpens a browser for the user to login, along with a running server awaiting auth data once the user logs in.\n\n**Parameters**\n\nNone\n\n**Returns**\n\nPromise resolving to the following object:\n\n- `username` - `string` - dashboard username\n- `accessToken` - `string` - Auth0 access token\n- `idToken` - `string` - Auth0 idToken\n- `refreshToken` - `string` - Auth0 refreshToken\n- `expiresAt` - `string` - epoch time at which the idToken expires\n\n**Example**\n\n```js\nconst { login } = require('@serverless/platform-sdk')\n\nconst { username, accessToken, idToken, expiresAt } = await login()\n```\n\n---\n\n### `refreshToken`\nRefreshes Auth0 idToken\n\n**Parameters**\n\nrefresh token string\n\n**Returns**\n\n\nPromise resolving to the following object:\n\n- `id_token` - `string` - new Auth0 id token\n- `access_token` - `string` - new Auth0 access token\n- `expires_in` - `string` - number of seconds until token expiration\n\n**Example**\n\n```js\nconst { refreshToken } = require('@serverless/platform-sdk')\n\nconst { id_token, access_token, expires_in } = await refreshToken('some-refresh-token')\n```\n\n---\n\n### `createAccessKey`\nCreates a platform access key for the authenticated user.\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `tenant` - `string` - dashboard tenant\n- `idToken` - `string` - Auth0 idToken\n- `title` - `string` - title of the access key\n\n**Returns**\n\nPromise resolving to an `accessKey` string, that is the access key.\n\n**Example**\n\n```js\nconst { createAccessKey } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  tenant: 'eahefnawy',\n  idToken: 'abc',\n  title: 'Framework'\n}\n\nconst accessKey = await createAccessKey(data)\n```\n\n---\n\n### `archiveService`\nArchives a service in the platform.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `accessKey` - `string` - dashboard access key\n- `app` - `string` - service app\n- `name` - `string` - service name\n- `provider` - `string` - provider name\n- `region` - `string` - region name\n\n**Returns**\n\nNone\n\n**Example**\n\n```js\nconst { archiveService } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  accessKey: 'abc',\n  app: 'my-app',\n  name: 'my-service',\n  provider: 'aws',\n  region: 'us-east-1'\n}\n\nawait archiveService(data)\n```\n\n---\n\n### `getServiceUrl`\nConstructs a service url based on passed-in data.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `app` - `string` - service app\n- `name` - `string` - service name\n\n\n**Returns**\n\nThe service url string.\n\n**Example**\n\n```js\nconst { getServiceUrl } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  name: 'my-service'\n}\n\nconst serviceUrl = getServiceUrl(data)\n```\n\n---\n\n### `listTenants`\nLists the tenants for a given username\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `idToken` - `string` - auth0 user id token\n\n\n**Returns**\n\nArray of objects, each represents a single tenant data model.\n\n**Example**\n\n```js\nconst { listTenants } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  idToken: 'abc'\n}\n\nconst tenants = await listTenants(data)\n```\n\n---\n\n### `createDeploymnet`\nCreates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `accessKey` - `string` - dashboard access key\n- `files` - `object` - files which should be stored in the Platforms deployment record\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { createDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  accessKey: 'abc',\n  files: {\n    'serverless-state.json': {\n      //...snip...\n    }\n  }\n}\n\nconst { id } = await createDeployment(data)\n```\n\n---\n\n### `updateDeployment`\nUpdates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `deploymentId` - `string` - id of the previously created deployment\n- `status` - `string` - status of the deployment to update\n- `accessKey` - `string` - dashboard access key\n- `computedData` - `object` - computed data the Platform needs to generate the state items\n\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { updateDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  deploymentId: 'abc',\n  status: 'failed',\n  accessKey: 'abc',\n  computedData: {\n    // ...snip...\n  }\n}\n\nconst { id } = await updateDeployment(data)\n```\n\n---\n\n### `getApp`\nGets a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { getApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await getApp(data)\n```\n\n---\n\n### `createApp`\nCreates a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { createApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await createApp(data)\n```\n","readmeFilename":"README.md","_id":"@serverless/platform-sdk@0.6.0-2-g26f1372","_npmVersion":"6.4.1","_nodeVersion":"10.15.1","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-RLAfoxGc8AhusUK5HoToUtVQN6zb08B8bOYQBR5gWBgE/7662XsqTKUQMrDiHbk0NbqVcrP9x3QlaFn20KSxEA==","shasum":"e34b5f227fa7e84df9fd3e3c31d065e1d8618265","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-0.6.0-2-g26f1372.tgz","fileCount":63,"unpackedSize":134439,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcb0QuCRA9TVsSAnZWagAA3/4P/i8aVbaquP+Bqo3dOhEk\n6Fdjprjc9LuWn1m2RC+YBAh7+6A2i0IaOIPX2rwc2tYscTDv/RFqq3FiPRrX\n2elIsE8uV1wKTuc+oyLE4s8xElrlAFU3GykfsZ4hHyxVthrwmBasH+hwN9Gw\nnVDZs0ThoC/roFJlBaOUSWqSvHd+23rlx5Ktnv/PivlLUn1pHEElqNCNev4v\nXDjVhVSjv3aDZ23xTYgmavT+Pc0nATlwa01GGasjbFzdkcF9NtmluP/dVHvw\nIUKkQyg0TMbLwJgzLlNAcvqf+xVjVCxKAdstKr0QxYHo78WLBVZ/I6WFDyfR\nIg0HOLDJAaU+zZ0u/TM6ugDsOID0+WopZxI6ac/ep2zD7E44/GpXxRmVjjcU\ntLqEYJYDImgfwyyVbbklm3Gn/+R0Dub0H/Qaq5jjmSG60mODRFmhQDXxC5/N\nPK5ClkT2fkp/AaBKefHXxugx3Aa9OWokSIzwKLh2J9jdhKeR4tNqWetdZNf4\nrxmEtIioYAlgsfMWVX3HO9fKm12s6Zq2Nn4TObvV0yRwE+42SZnkcRUG3a8U\nb6H6BfStIB6MA+5l0G/vzwV7o5ORP/eB/KBWQrs3FMAZBoec4tfxJ2lami2l\noGwwno79eyoldH1drCbV1hW/AH2oSxiRLBTUXE2VT8CiMSuRclnFwq5w8DnM\ntOKr\r\n=Fkxc\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"services@serverless.com","name":"serverless-main"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_0.6.0-2-g26f1372_1550795821373_0.9932775820820616"},"_hasShrinkwrap":false},"0.6.0-6-g6f337be":{"name":"@serverless/platform-sdk","version":"0.6.0-6-g6f337be","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"prepare":"npm run build","build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","lint:staged":"lint-staged","setup":"./scripts/setup.sh","setup:ci":"./scripts/setup-ci.sh","test":"./scripts/test.sh","test:ci":"snyk test && ./scripts/test-ci.sh","watch":"./scripts/watch.sh"},"dependencies":{"babel-polyfill":"^6.26.0","body-parser":"^1.18.3","chalk":"^2.4.1","cors":"^2.8.4","express":"^4.16.3","is-docker":"^1.1.0","isomorphic-fetch":"^2.2.1","jwt-decode":"^2.2.0","opn":"^5.3.0","querystring":"^0.2.0","ramda":"^0.25.0","rc":"^1.2.8","source-map-support":"^0.5.5","write-file-atomic":"^2.3.0"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^21.2.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.13.0","eslint-plugin-prettier":"^2.6.1","jest-cli":"^21.2.0","lint-staged":"7.1.3","pre-commit":"^1.2.2","prettier":"^1.13.6","snyk":"^1.92.5"},"publishConfig":{"access":"public"},"lint-staged":{"*.js":["eslint --fix .","git add -A"]},"pre-commit":["lint:staged"],"gitHead":"6f337bec8970d198eaa84079262222fe07a31d37","readme":"# Platform SDK\n\nFunctional SDK for the Serverless Platfrom.\n\n## Project Status\n\n[![Build Status](https://travis-ci.com/serverless/platform-sdk.svg)](https://travis-ci.com/serverless/platform-sdk)\n[![license](https://img.shields.io/npm/l/@serverless/platform-sdk.svg)](https://www.npmjs.com/package/@serverless/platform-sdk)\n[![coverage](https://img.shields.io/codecov/c/github/serverless/platform-sdk.svg)](https://codecov.io/gh/serverless/platform-sdk)\n[![Known Vulnerabilities](https://snyk.io/test/github/serverless/platform-sdk/badge.svg)](https://snyk.io/test/github/serverless/platform-sdk)\n\n## Contents\n\n- [Installation](#installation)\n- [Functions](#functions)\n  - [login](#login)\n  - [refreshToken](#refreshtoken)\n  - [createAccessKey](#createaccesskey)\n  - [archiveService](#archiveservice)\n  - [getServiceUrl](#getserviceurl)\n  - [listTenants](#listtenants)\n  - [createDeployment](#createdeployment)\n  - [updateDeployment](#updatedeployment)\n  - [getApp](#getapp)\n  - [createApp](#createapp)\n\n## installation\n\n```\nnpm i -s @serverless/platform-sdk\n```\n\n## Functions\n### `login`\nOpens a browser for the user to login, along with a running server awaiting auth data once the user logs in.\n\n**Parameters**\n\nNone\n\n**Returns**\n\nPromise resolving to the following object:\n\n- `username` - `string` - dashboard username\n- `accessToken` - `string` - Auth0 access token\n- `idToken` - `string` - Auth0 idToken\n- `refreshToken` - `string` - Auth0 refreshToken\n- `expiresAt` - `string` - epoch time at which the idToken expires\n\n**Example**\n\n```js\nconst { login } = require('@serverless/platform-sdk')\n\nconst { username, accessToken, idToken, expiresAt } = await login()\n```\n\n---\n\n### `refreshToken`\nRefreshes Auth0 idToken\n\n**Parameters**\n\nrefresh token string\n\n**Returns**\n\n\nPromise resolving to the following object:\n\n- `id_token` - `string` - new Auth0 id token\n- `access_token` - `string` - new Auth0 access token\n- `expires_in` - `string` - number of seconds until token expiration\n\n**Example**\n\n```js\nconst { refreshToken } = require('@serverless/platform-sdk')\n\nconst { id_token, access_token, expires_in } = await refreshToken('some-refresh-token')\n```\n\n---\n\n### `createAccessKey`\nCreates a platform access key for the authenticated user.\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `tenant` - `string` - dashboard tenant\n- `idToken` - `string` - Auth0 idToken\n- `title` - `string` - title of the access key\n\n**Returns**\n\nPromise resolving to an `accessKey` string, that is the access key.\n\n**Example**\n\n```js\nconst { createAccessKey } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  tenant: 'eahefnawy',\n  idToken: 'abc',\n  title: 'Framework'\n}\n\nconst accessKey = await createAccessKey(data)\n```\n\n---\n\n### `archiveService`\nArchives a service in the platform.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `accessKey` - `string` - dashboard access key\n- `app` - `string` - service app\n- `name` - `string` - service name\n- `provider` - `string` - provider name\n- `region` - `string` - region name\n\n**Returns**\n\nNone\n\n**Example**\n\n```js\nconst { archiveService } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  accessKey: 'abc',\n  app: 'my-app',\n  name: 'my-service',\n  provider: 'aws',\n  region: 'us-east-1'\n}\n\nawait archiveService(data)\n```\n\n---\n\n### `getServiceUrl`\nConstructs a service url based on passed-in data.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `app` - `string` - service app\n- `name` - `string` - service name\n\n\n**Returns**\n\nThe service url string.\n\n**Example**\n\n```js\nconst { getServiceUrl } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  name: 'my-service'\n}\n\nconst serviceUrl = getServiceUrl(data)\n```\n\n---\n\n### `listTenants`\nLists the tenants for a given username\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `idToken` - `string` - auth0 user id token\n\n\n**Returns**\n\nArray of objects, each represents a single tenant data model.\n\n**Example**\n\n```js\nconst { listTenants } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  idToken: 'abc'\n}\n\nconst tenants = await listTenants(data)\n```\n\n---\n\n### `createDeploymnet`\nCreates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `accessKey` - `string` - dashboard access key\n- `files` - `object` - files which should be stored in the Platforms deployment record\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { createDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  accessKey: 'abc',\n  files: {\n    'serverless-state.json': {\n      //...snip...\n    }\n  }\n}\n\nconst { id } = await createDeployment(data)\n```\n\n---\n\n### `updateDeployment`\nUpdates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `deploymentId` - `string` - id of the previously created deployment\n- `status` - `string` - status of the deployment to update\n- `accessKey` - `string` - dashboard access key\n- `computedData` - `object` - computed data the Platform needs to generate the state items\n\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { updateDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  deploymentId: 'abc',\n  status: 'failed',\n  accessKey: 'abc',\n  computedData: {\n    // ...snip...\n  }\n}\n\nconst { id } = await updateDeployment(data)\n```\n\n---\n\n### `getApp`\nGets a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { getApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await getApp(data)\n```\n\n---\n\n### `createApp`\nCreates a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { createApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await createApp(data)\n```\n","readmeFilename":"README.md","_id":"@serverless/platform-sdk@0.6.0-6-g6f337be","_npmVersion":"6.4.1","_nodeVersion":"10.15.1","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-Yof5ZIhJ2ZLFd8rJybWfqoU1PkEYsXcBUxgz2tiLoKBz9U6k9oPGePi1WJoIjGGGrmbkyQ4+VG0p6sgX4Ms8Lw==","shasum":"e15115284c785cf8db130a5f3a011f28f91068ae","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-0.6.0-6-g6f337be.tgz","fileCount":67,"unpackedSize":138417,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcczydCRA9TVsSAnZWagAA7igP/2V5bnBeQsQOSHhjQumX\nDHHds7I0YznKZQxpcL7eOTov0yD1s5WxRs+ULjBe4lQTV8uumtplYGZQliHu\n2FBxeP6s0ECw0RGmS0Rmx7uiufC/LeChWwFYHKDYwHYoN846gG/0zo5MLdF1\nKwtjCu8AKxc+yBi+yJUES2YDWXV1DCyXPzpJ98g+dJRyXlSDSsIHqI4cnCjS\nJxmsQeR9IqxDpMaO83eZqizTJFyOkQzA6Q4LseWdF9Oa93B5oDPrjfrv1Ksn\nUMeGOXf1R02W3OJ89zfHkvU2qgGWdkN6WaCvz3i9JXlOtunCAQghlTyoLP9n\n4tanJGCJa2GtYkgy4gEkSvkqPPiO3hafqhnuuCC/6trsI9nVda+x3v/88jWJ\nFXGXL/woIQbb6cmzxm+kzH7RgTpZD6b0WufNgulw+ECptCWql+aSsiBab4uW\nQz2upE9zdoI1rLVlkfA3OKY0IAivM7o8senoUxcPMr4/EeipMLvPz1Si+RYZ\now+L6p9hKuR3NE3kAwJ7BARIHSX+ZdLkI7OsCdquaMdnB7kVFrmU8hOkLkKO\nVB1ViDcpJRrfBBE9jj+vbqjdg8iKHTtfIay0QGqAhy6xyottMkmFWRfN7Oqb\nNgaJGmn5km4hD5xmQSvEuldst8h+CG74DTypI/0r2Iwg/FGZW+qAN0mSPzHB\nJtT5\r\n=JOXt\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"services@serverless.com","name":"serverless-main"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_0.6.0-6-g6f337be_1551056028318_0.02801712445605764"},"_hasShrinkwrap":false},"0.6.0-8-gf5544e5":{"name":"@serverless/platform-sdk","version":"0.6.0-8-gf5544e5","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"prepare":"npm run build","build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","lint:staged":"lint-staged","setup":"./scripts/setup.sh","setup:ci":"./scripts/setup-ci.sh","test":"./scripts/test.sh","test:ci":"snyk test && ./scripts/test-ci.sh","watch":"./scripts/watch.sh"},"dependencies":{"babel-polyfill":"^6.26.0","body-parser":"^1.18.3","chalk":"^2.4.1","cors":"^2.8.4","express":"^4.16.3","is-docker":"^1.1.0","isomorphic-fetch":"^2.2.1","jwt-decode":"^2.2.0","opn":"^5.3.0","querystring":"^0.2.0","ramda":"^0.25.0","rc":"^1.2.8","source-map-support":"^0.5.5","write-file-atomic":"^2.3.0"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^21.2.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.13.0","eslint-plugin-prettier":"^2.6.1","jest-cli":"^21.2.0","lint-staged":"7.1.3","pre-commit":"^1.2.2","prettier":"^1.13.6","snyk":"^1.92.5"},"publishConfig":{"access":"public"},"lint-staged":{"*.js":["eslint --fix .","git add -A"]},"pre-commit":["lint:staged"],"gitHead":"f5544e5f6f0b7c062544aa0e2e98ad95e96f0491","readme":"# Platform SDK\n\nFunctional SDK for the Serverless Platfrom.\n\n## Project Status\n\n[![Build Status](https://travis-ci.com/serverless/platform-sdk.svg)](https://travis-ci.com/serverless/platform-sdk)\n[![license](https://img.shields.io/npm/l/@serverless/platform-sdk.svg)](https://www.npmjs.com/package/@serverless/platform-sdk)\n[![coverage](https://img.shields.io/codecov/c/github/serverless/platform-sdk.svg)](https://codecov.io/gh/serverless/platform-sdk)\n[![Known Vulnerabilities](https://snyk.io/test/github/serverless/platform-sdk/badge.svg)](https://snyk.io/test/github/serverless/platform-sdk)\n\n## Contents\n\n- [Installation](#installation)\n- [Functions](#functions)\n  - [login](#login)\n  - [refreshToken](#refreshtoken)\n  - [createAccessKey](#createaccesskey)\n  - [archiveService](#archiveservice)\n  - [getServiceUrl](#getserviceurl)\n  - [listTenants](#listtenants)\n  - [createDeployment](#createdeployment)\n  - [updateDeployment](#updatedeployment)\n  - [getApp](#getapp)\n  - [createApp](#createapp)\n\n## installation\n\n```\nnpm i -s @serverless/platform-sdk\n```\n\n## Functions\n### `login`\nOpens a browser for the user to login, along with a running server awaiting auth data once the user logs in.\n\n**Parameters**\n\nNone\n\n**Returns**\n\nPromise resolving to the following object:\n\n- `username` - `string` - dashboard username\n- `accessToken` - `string` - Auth0 access token\n- `idToken` - `string` - Auth0 idToken\n- `refreshToken` - `string` - Auth0 refreshToken\n- `expiresAt` - `string` - epoch time at which the idToken expires\n\n**Example**\n\n```js\nconst { login } = require('@serverless/platform-sdk')\n\nconst { username, accessToken, idToken, expiresAt } = await login()\n```\n\n---\n\n### `refreshToken`\nRefreshes Auth0 idToken\n\n**Parameters**\n\nrefresh token string\n\n**Returns**\n\n\nPromise resolving to the following object:\n\n- `id_token` - `string` - new Auth0 id token\n- `access_token` - `string` - new Auth0 access token\n- `expires_in` - `string` - number of seconds until token expiration\n\n**Example**\n\n```js\nconst { refreshToken } = require('@serverless/platform-sdk')\n\nconst { id_token, access_token, expires_in } = await refreshToken('some-refresh-token')\n```\n\n---\n\n### `createAccessKey`\nCreates a platform access key for the authenticated user.\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `tenant` - `string` - dashboard tenant\n- `idToken` - `string` - Auth0 idToken\n- `title` - `string` - title of the access key\n\n**Returns**\n\nPromise resolving to an `accessKey` string, that is the access key.\n\n**Example**\n\n```js\nconst { createAccessKey } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  tenant: 'eahefnawy',\n  idToken: 'abc',\n  title: 'Framework'\n}\n\nconst accessKey = await createAccessKey(data)\n```\n\n---\n\n### `archiveService`\nArchives a service in the platform.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `accessKey` - `string` - dashboard access key\n- `app` - `string` - service app\n- `name` - `string` - service name\n- `provider` - `string` - provider name\n- `region` - `string` - region name\n\n**Returns**\n\nNone\n\n**Example**\n\n```js\nconst { archiveService } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  accessKey: 'abc',\n  app: 'my-app',\n  name: 'my-service',\n  provider: 'aws',\n  region: 'us-east-1'\n}\n\nawait archiveService(data)\n```\n\n---\n\n### `getServiceUrl`\nConstructs a service url based on passed-in data.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `app` - `string` - service app\n- `name` - `string` - service name\n\n\n**Returns**\n\nThe service url string.\n\n**Example**\n\n```js\nconst { getServiceUrl } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  name: 'my-service'\n}\n\nconst serviceUrl = getServiceUrl(data)\n```\n\n---\n\n### `listTenants`\nLists the tenants for a given username\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `idToken` - `string` - auth0 user id token\n\n\n**Returns**\n\nArray of objects, each represents a single tenant data model.\n\n**Example**\n\n```js\nconst { listTenants } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  idToken: 'abc'\n}\n\nconst tenants = await listTenants(data)\n```\n\n---\n\n### `createDeploymnet`\nCreates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `accessKey` - `string` - dashboard access key\n- `files` - `object` - files which should be stored in the Platforms deployment record\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { createDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  accessKey: 'abc',\n  files: {\n    'serverless-state.json': {\n      //...snip...\n    }\n  }\n}\n\nconst { id } = await createDeployment(data)\n```\n\n---\n\n### `updateDeployment`\nUpdates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `deploymentId` - `string` - id of the previously created deployment\n- `status` - `string` - status of the deployment to update\n- `accessKey` - `string` - dashboard access key\n- `computedData` - `object` - computed data the Platform needs to generate the state items\n\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { updateDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  deploymentId: 'abc',\n  status: 'failed',\n  accessKey: 'abc',\n  computedData: {\n    // ...snip...\n  }\n}\n\nconst { id } = await updateDeployment(data)\n```\n\n---\n\n### `getApp`\nGets a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { getApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await getApp(data)\n```\n\n---\n\n### `createApp`\nCreates a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { createApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await createApp(data)\n```\n","readmeFilename":"README.md","_id":"@serverless/platform-sdk@0.6.0-8-gf5544e5","_npmVersion":"6.4.1","_nodeVersion":"10.15.1","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-9dm9gtw8jn5Hs7KsvNqkwuhx+NL/QNnXYF9s+iRmS1cIuQeXLPHIX3ZtiiL22a4qM8982og5mp51LEeY966RJg==","shasum":"f78f3c3c1230ac827dd4314ee9dba109c5bc54c1","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-0.6.0-8-gf5544e5.tgz","fileCount":67,"unpackedSize":138433,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcdapoCRA9TVsSAnZWagAAx2UP/2Kx9nqyY1qrPLXICbXs\nOZ5DMgifav0v+U4uZ7jl4WSwWFXlXuPZvrlxsDTzVS5C34bS7xrTGOsLxEP4\nX5+mznK7T0ZjMUPjzWj/vHTfIdV+mCWjqxT89t8cx1UehrpuS3bP00NRB3XL\nGnz2lh0RsmR/z4vMlep5JO6NZlA+YmfP7DAPWJArcWRwFpVleBhKnu6urjVw\nfGNR6QI8iq8dyXUyp5JRDo0VKsd95jgIanmN4NTnx+hN9cY8+uzq9k4WV1c0\nFVwoFm2ESTeP/oMOTJvTIZID18xVLCfsi51nbA0xtzU4xw9GlZ3qR6y6WFNW\nCrfGcafD/LQRwLpvxCLS6ejlAWPp4sCrr0u0qlJLcyJ5mIO56ZFozz56xvMD\nx5SUzF/bLFpEgw5oCqS0Xbrw3540oh3Pmfs/s18CDGH9blMFW5DEz7VMG06N\nTw+Lh0CnGbGY8ESbifmxkWNImHXYlIrNdvOe9cnfs1Oqlg3k0bl8Yv9BMful\nIw7Fw6NjC/U6PeAYCUmTHoJ80qOyFY63V5PSXkTE338t2AmuY5fHzRVSoVMr\n2d6igMeko7g7jPYID3zKvR5jdMQmVht5juthIa3whfbXWRUHFLzkPuqFLbM+\nPCJlTGhf10dExTFcj8wD3S8SrPubY5NCTH5S3ocJBdgxaahtCEQVVIHWUexg\nnVHX\r\n=Rsii\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"services@serverless.com","name":"serverless-main"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_0.6.0-8-gf5544e5_1551215207485_0.06433689365323914"},"_hasShrinkwrap":false},"0.6.0-23-g3632763":{"name":"@serverless/platform-sdk","version":"0.6.0-23-g3632763","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"prepare":"npm run build","build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","lint:staged":"lint-staged","setup":"./scripts/setup.sh","setup:ci":"./scripts/setup-ci.sh","test":"./scripts/test.sh","test:ci":"snyk test && ./scripts/test-ci.sh","watch":"./scripts/watch.sh"},"dependencies":{"babel-polyfill":"^6.26.0","body-parser":"^1.18.3","chalk":"^2.4.1","cors":"^2.8.4","express":"^4.16.3","is-docker":"^1.1.0","isomorphic-fetch":"^2.2.1","jwt-decode":"^2.2.0","opn":"^5.3.0","querystring":"^0.2.0","ramda":"^0.25.0","rc":"^1.2.8","source-map-support":"^0.5.5","uuid":"^3.3.2","write-file-atomic":"^2.3.0"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^21.2.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.13.0","eslint-plugin-prettier":"^2.6.1","jest-cli":"^21.2.0","lint-staged":"7.1.3","pre-commit":"^1.2.2","prettier":"^1.13.6","snyk":"^1.92.5"},"publishConfig":{"access":"public"},"lint-staged":{"*.js":["eslint --fix .","git add -A"]},"pre-commit":["lint:staged"],"gitHead":"3632763f1a1d5f0e60b6728b7d74c1df79941dcd","readme":"# Platform SDK\n\nFunctional SDK for the Serverless Platfrom.\n\n## Project Status\n\n[![Build Status](https://travis-ci.com/serverless/platform-sdk.svg)](https://travis-ci.com/serverless/platform-sdk)\n[![license](https://img.shields.io/npm/l/@serverless/platform-sdk.svg)](https://www.npmjs.com/package/@serverless/platform-sdk)\n[![coverage](https://img.shields.io/codecov/c/github/serverless/platform-sdk.svg)](https://codecov.io/gh/serverless/platform-sdk)\n[![Known Vulnerabilities](https://snyk.io/test/github/serverless/platform-sdk/badge.svg)](https://snyk.io/test/github/serverless/platform-sdk)\n\n## Contents\n\n- [Installation](#installation)\n- [Functions](#functions)\n  - [login](#login)\n  - [refreshToken](#refreshtoken)\n  - [createAccessKey](#createaccesskey)\n  - [archiveService](#archiveservice)\n  - [getServiceUrl](#getserviceurl)\n  - [listTenants](#listtenants)\n  - [createDeployment](#createdeployment)\n  - [updateDeployment](#updatedeployment)\n  - [getApp](#getapp)\n  - [createApp](#createapp)\n\n## installation\n\n```\nnpm i -s @serverless/platform-sdk\n```\n\n## Functions\n### `login`\nOpens a browser for the user to login, along with a running server awaiting auth data once the user logs in.\n\n**Parameters**\n\nNone\n\n**Returns**\n\nPromise resolving to the following object:\n\n- `username` - `string` - dashboard username\n- `accessToken` - `string` - Auth0 access token\n- `idToken` - `string` - Auth0 idToken\n- `refreshToken` - `string` - Auth0 refreshToken\n- `expiresAt` - `string` - epoch time at which the idToken expires\n\n**Example**\n\n```js\nconst { login } = require('@serverless/platform-sdk')\n\nconst { username, accessToken, idToken, expiresAt } = await login()\n```\n\n---\n\n### `refreshToken`\nRefreshes Auth0 idToken\n\n**Parameters**\n\nrefresh token string\n\n**Returns**\n\n\nPromise resolving to the following object:\n\n- `id_token` - `string` - new Auth0 id token\n- `access_token` - `string` - new Auth0 access token\n- `expires_in` - `string` - number of seconds until token expiration\n\n**Example**\n\n```js\nconst { refreshToken } = require('@serverless/platform-sdk')\n\nconst { id_token, access_token, expires_in } = await refreshToken('some-refresh-token')\n```\n\n---\n\n### `createAccessKey`\nCreates a platform access key for the authenticated user.\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `tenant` - `string` - dashboard tenant\n- `idToken` - `string` - Auth0 idToken\n- `title` - `string` - title of the access key\n\n**Returns**\n\nPromise resolving to an `accessKey` string, that is the access key.\n\n**Example**\n\n```js\nconst { createAccessKey } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  tenant: 'eahefnawy',\n  idToken: 'abc',\n  title: 'Framework'\n}\n\nconst accessKey = await createAccessKey(data)\n```\n\n---\n\n### `archiveService`\nArchives a service in the platform.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `accessKey` - `string` - dashboard access key\n- `app` - `string` - service app\n- `name` - `string` - service name\n- `provider` - `string` - provider name\n- `region` - `string` - region name\n\n**Returns**\n\nNone\n\n**Example**\n\n```js\nconst { archiveService } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  accessKey: 'abc',\n  app: 'my-app',\n  name: 'my-service',\n  provider: 'aws',\n  region: 'us-east-1'\n}\n\nawait archiveService(data)\n```\n\n---\n\n### `getServiceUrl`\nConstructs a service url based on passed-in data.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `app` - `string` - service app\n- `name` - `string` - service name\n\n\n**Returns**\n\nThe service url string.\n\n**Example**\n\n```js\nconst { getServiceUrl } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  name: 'my-service'\n}\n\nconst serviceUrl = getServiceUrl(data)\n```\n\n---\n\n### `listTenants`\nLists the tenants for a given username\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `idToken` - `string` - auth0 user id token\n\n\n**Returns**\n\nArray of objects, each represents a single tenant data model.\n\n**Example**\n\n```js\nconst { listTenants } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  idToken: 'abc'\n}\n\nconst tenants = await listTenants(data)\n```\n\n---\n\n### `createDeploymnet`\nCreates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `accessKey` - `string` - dashboard access key\n- `files` - `object` - files which should be stored in the Platforms deployment record\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { createDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  accessKey: 'abc',\n  files: {\n    'serverless-state.json': {\n      //...snip...\n    }\n  }\n}\n\nconst { id } = await createDeployment(data)\n```\n\n---\n\n### `updateDeployment`\nUpdates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `deploymentId` - `string` - id of the previously created deployment\n- `status` - `string` - status of the deployment to update\n- `accessKey` - `string` - dashboard access key\n- `computedData` - `object` - computed data the Platform needs to generate the state items\n\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { updateDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  deploymentId: 'abc',\n  status: 'failed',\n  accessKey: 'abc',\n  computedData: {\n    // ...snip...\n  }\n}\n\nconst { id } = await updateDeployment(data)\n```\n\n---\n\n### `getApp`\nGets a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { getApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await getApp(data)\n```\n\n---\n\n### `createApp`\nCreates a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { createApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await createApp(data)\n```\n","readmeFilename":"README.md","_id":"@serverless/platform-sdk@0.6.0-23-g3632763","_npmVersion":"6.4.1","_nodeVersion":"10.15.3","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-21Pwt600xGCxMDJFPF755l1RFVAZUqbWiQwO3nTTc9XE57/F9xhh5iheVhoZJKCw0AdRZCDEcEpTjwTUpNuyZg==","shasum":"85f8ba9df820c58d34f2cb5eddf3e3000a6a43e6","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-0.6.0-23-g3632763.tgz","fileCount":63,"unpackedSize":147637,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJch64FCRA9TVsSAnZWagAACDEP/2RniDqecNZLx+5JLY08\nplHgHzIKcX4D/zCA1aDNx6pt/hBRtpyxEyJDFeuQTvFNjekqM+Nv/2xGa6uo\nS15qzVPEdxnftf366BRHDEwW/Xf+AKdNg9xn69A+bBATqKxvlGZtPWHSJ8VB\nTe9nZcSXJsoF3xLmsns+BPyVw3If0o8KluFberuaymkyomtXwcYZ+Tu7jvJ/\nMThMQDzCKO54WgklWStY4pLhus9588+jSu9SX1MKDOfgBIjXyHE0nmRRkQGk\n7iJb94qYKQ4+Wye1kwbD1JnxA50UDYjWVzLELo/7VUgOn0mwVxkxj5tFcKy5\nUGqQgZTeBnZIYjrA4/0IySxUe3cBBn2C9fBovfKkGx7N86gabtsifU06KVNV\niaOrjQotqJOyGy4XdEN5CLvu31CqCp+88Uf7QG4vTjvGqKPwPEDQC6U+TPXl\nXaJwb206I0d3yC1Eaq9CLcOFfHYnRP5MGrqn18BHcbtjrJRExo1MPBac12Mx\nIgPpp3qDH7TfHL1rnPbq0SJ17Higxx/iU/Hf+3DvcPA0dVaAZ1R0GcN1M7Vy\nUx2ZRX/JKR/OYokhnzgx0yoZMEkbWwTknvJ8KCkiCibVch2ukE/mBCmhgYL9\nTw80UIzayDE2C9xQGTB8ozSnabqoi2L1ISCPxptC0D0xqWFZOAttkQwTmMIA\n7Hn9\r\n=DX++\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"services@serverless.com","name":"serverless-main"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_0.6.0-23-g3632763_1552395780479_0.9575532345842144"},"_hasShrinkwrap":false},"0.6.0-25-g91cc266":{"name":"@serverless/platform-sdk","version":"0.6.0-25-g91cc266","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"prepare":"npm run build","build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","lint:staged":"lint-staged","setup":"./scripts/setup.sh","setup:ci":"./scripts/setup-ci.sh","test":"./scripts/test.sh","test:ci":"snyk test && ./scripts/test-ci.sh","watch":"./scripts/watch.sh"},"dependencies":{"babel-polyfill":"^6.26.0","body-parser":"^1.18.3","chalk":"^2.4.1","cors":"^2.8.4","express":"^4.16.3","is-docker":"^1.1.0","isomorphic-fetch":"^2.2.1","jwt-decode":"^2.2.0","opn":"^5.3.0","querystring":"^0.2.0","ramda":"^0.25.0","rc":"^1.2.8","source-map-support":"^0.5.5","uuid":"^3.3.2","write-file-atomic":"^2.3.0"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^21.2.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.13.0","eslint-plugin-prettier":"^2.6.1","jest-cli":"^21.2.0","lint-staged":"7.1.3","pre-commit":"^1.2.2","prettier":"^1.13.6","snyk":"^1.92.5"},"publishConfig":{"access":"public"},"lint-staged":{"*.js":["eslint --fix .","git add -A"]},"pre-commit":["lint:staged"],"gitHead":"91cc266fb7a99718436aee88591fcab62fee067b","readme":"# Platform SDK\n\nFunctional SDK for the Serverless Platfrom.\n\n## Project Status\n\n[![Build Status](https://travis-ci.com/serverless/platform-sdk.svg)](https://travis-ci.com/serverless/platform-sdk)\n[![license](https://img.shields.io/npm/l/@serverless/platform-sdk.svg)](https://www.npmjs.com/package/@serverless/platform-sdk)\n[![coverage](https://img.shields.io/codecov/c/github/serverless/platform-sdk.svg)](https://codecov.io/gh/serverless/platform-sdk)\n[![Known Vulnerabilities](https://snyk.io/test/github/serverless/platform-sdk/badge.svg)](https://snyk.io/test/github/serverless/platform-sdk)\n\n## Contents\n\n- [Installation](#installation)\n- [Functions](#functions)\n  - [login](#login)\n  - [refreshToken](#refreshtoken)\n  - [createAccessKey](#createaccesskey)\n  - [archiveService](#archiveservice)\n  - [getServiceUrl](#getserviceurl)\n  - [listTenants](#listtenants)\n  - [createDeployment](#createdeployment)\n  - [updateDeployment](#updatedeployment)\n  - [getApp](#getapp)\n  - [createApp](#createapp)\n\n## installation\n\n```\nnpm i -s @serverless/platform-sdk\n```\n\n## Functions\n### `login`\nOpens a browser for the user to login, along with a running server awaiting auth data once the user logs in.\n\n**Parameters**\n\nNone\n\n**Returns**\n\nPromise resolving to the following object:\n\n- `username` - `string` - dashboard username\n- `accessToken` - `string` - Auth0 access token\n- `idToken` - `string` - Auth0 idToken\n- `refreshToken` - `string` - Auth0 refreshToken\n- `expiresAt` - `string` - epoch time at which the idToken expires\n\n**Example**\n\n```js\nconst { login } = require('@serverless/platform-sdk')\n\nconst { username, accessToken, idToken, expiresAt } = await login()\n```\n\n---\n\n### `refreshToken`\nRefreshes Auth0 idToken\n\n**Parameters**\n\nrefresh token string\n\n**Returns**\n\n\nPromise resolving to the following object:\n\n- `id_token` - `string` - new Auth0 id token\n- `access_token` - `string` - new Auth0 access token\n- `expires_in` - `string` - number of seconds until token expiration\n\n**Example**\n\n```js\nconst { refreshToken } = require('@serverless/platform-sdk')\n\nconst { id_token, access_token, expires_in } = await refreshToken('some-refresh-token')\n```\n\n---\n\n### `createAccessKey`\nCreates a platform access key for the authenticated user.\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `tenant` - `string` - dashboard tenant\n- `idToken` - `string` - Auth0 idToken\n- `title` - `string` - title of the access key\n\n**Returns**\n\nPromise resolving to an `accessKey` string, that is the access key.\n\n**Example**\n\n```js\nconst { createAccessKey } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  tenant: 'eahefnawy',\n  idToken: 'abc',\n  title: 'Framework'\n}\n\nconst accessKey = await createAccessKey(data)\n```\n\n---\n\n### `archiveService`\nArchives a service in the platform.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `accessKey` - `string` - dashboard access key\n- `app` - `string` - service app\n- `name` - `string` - service name\n- `provider` - `string` - provider name\n- `region` - `string` - region name\n\n**Returns**\n\nNone\n\n**Example**\n\n```js\nconst { archiveService } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  accessKey: 'abc',\n  app: 'my-app',\n  name: 'my-service',\n  provider: 'aws',\n  region: 'us-east-1'\n}\n\nawait archiveService(data)\n```\n\n---\n\n### `getServiceUrl`\nConstructs a service url based on passed-in data.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `app` - `string` - service app\n- `name` - `string` - service name\n\n\n**Returns**\n\nThe service url string.\n\n**Example**\n\n```js\nconst { getServiceUrl } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  name: 'my-service'\n}\n\nconst serviceUrl = getServiceUrl(data)\n```\n\n---\n\n### `listTenants`\nLists the tenants for a given username\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `idToken` - `string` - auth0 user id token\n\n\n**Returns**\n\nArray of objects, each represents a single tenant data model.\n\n**Example**\n\n```js\nconst { listTenants } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  idToken: 'abc'\n}\n\nconst tenants = await listTenants(data)\n```\n\n---\n\n### `createDeploymnet`\nCreates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `accessKey` - `string` - dashboard access key\n- `files` - `object` - files which should be stored in the Platforms deployment record\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { createDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  accessKey: 'abc',\n  files: {\n    'serverless-state.json': {\n      //...snip...\n    }\n  }\n}\n\nconst { id } = await createDeployment(data)\n```\n\n---\n\n### `updateDeployment`\nUpdates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `deploymentId` - `string` - id of the previously created deployment\n- `status` - `string` - status of the deployment to update\n- `accessKey` - `string` - dashboard access key\n- `computedData` - `object` - computed data the Platform needs to generate the state items\n\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { updateDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  deploymentId: 'abc',\n  status: 'failed',\n  accessKey: 'abc',\n  computedData: {\n    // ...snip...\n  }\n}\n\nconst { id } = await updateDeployment(data)\n```\n\n---\n\n### `getApp`\nGets a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { getApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await getApp(data)\n```\n\n---\n\n### `createApp`\nCreates a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { createApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await createApp(data)\n```\n","readmeFilename":"README.md","_id":"@serverless/platform-sdk@0.6.0-25-g91cc266","_npmVersion":"6.4.1","_nodeVersion":"10.15.3","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-+4+jaTXlP2rOmnkxAKl0oYV97qfOGhU9Pmitt5XQhtBO37OYJ+SCzVjw58uitVNJ6jneYWmY+p60qtlbiWrsQg==","shasum":"e38da7a5a2e9792683a0052eecc29b0d0dce612c","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-0.6.0-25-g91cc266.tgz","fileCount":63,"unpackedSize":147633,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJciWM8CRA9TVsSAnZWagAAi8sQAJe/HTgvlSchlRBEL9ku\ntDOiKtIFDoTO7xNXZYQj3xq5kHM+6udHsbwchNDmQOWx+eaFv2JpaibRVBec\n00Tb6TOac9yz4odrgR9XSwEXnmo+PGPqtEQQMOmlIvVOIlKAFRVLsugLHOwk\nSG8Z9/209DXukV8p3EEMpgh+93SgZ7qhSsvTSfihx4wGl0Iv51uNVTy/f/sD\nsB/1jGWS3uKknaqJBgFF6HX5ueNc7xJk0ZCQNgEl+J0gWViAjXTW/jyE421S\nD0jPjQ6itY8e9aRYQ3X8Qvzk8JmXvRBKeRjjr+cs73NNq/IY6MQ58xOdPjMs\ndmtI01jGmSwjc9HucmuIdCkOeFPf9f6NDaZphAWTN0HbgBWlgeJORdSg9qrJ\nyFZcXrIVVo9WpQ2ddOi43q+P8fV6DaCcv0txFrChY1e7Spd1ciVTMyuz3Xac\nU/fDBbSVj8lyBSr0UCtjNlI2u+wO+8Gcqj2LMcgmnQdvFr1oB5rVPzw+Gf5D\na1qpBZfGU05H2VxZSN7xBRhWJShxYFyjRGYg67GBhC7SwCNJoTJ83zA/b+AX\n/fe4tvOpH8js53vlwPPRyMiE3XpXtkmI42O2OZdLXOo+CV7aX6+NBx6qVGDN\n89hZ+pz73URsRgJ55Mx6ivlEUfmtSwdC1v5DEZIa6Vb7iQ9wPQe0LkgLywGV\nQ4ci\r\n=pMbj\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"services@serverless.com","name":"serverless-main"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_0.6.0-25-g91cc266_1552507707411_0.5806463166934377"},"_hasShrinkwrap":false},"0.6.0-27-g3bae9d8":{"name":"@serverless/platform-sdk","version":"0.6.0-27-g3bae9d8","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"prepare":"npm run build","build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","lint:staged":"lint-staged","setup":"./scripts/setup.sh","setup:ci":"./scripts/setup-ci.sh","test":"./scripts/test.sh","test:ci":"snyk test && ./scripts/test-ci.sh","watch":"./scripts/watch.sh"},"dependencies":{"babel-polyfill":"^6.26.0","body-parser":"^1.18.3","chalk":"^2.4.1","cors":"^2.8.4","express":"^4.16.3","is-docker":"^1.1.0","isomorphic-fetch":"^2.2.1","jwt-decode":"^2.2.0","opn":"^5.3.0","querystring":"^0.2.0","ramda":"^0.25.0","rc":"^1.2.8","source-map-support":"^0.5.5","uuid":"^3.3.2","write-file-atomic":"^2.3.0"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^21.2.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.13.0","eslint-plugin-prettier":"^2.6.1","jest-cli":"^21.2.0","lint-staged":"7.1.3","pre-commit":"^1.2.2","prettier":"^1.13.6","snyk":"^1.92.5"},"publishConfig":{"access":"public"},"lint-staged":{"*.js":["eslint --fix .","git add -A"]},"pre-commit":["lint:staged"],"gitHead":"3bae9d81d1f55982cb30ff05da43d6c2a7fd9ed4","readme":"# Platform SDK\n\nFunctional SDK for the Serverless Platfrom.\n\n## Project Status\n\n[![Build Status](https://travis-ci.com/serverless/platform-sdk.svg)](https://travis-ci.com/serverless/platform-sdk)\n[![license](https://img.shields.io/npm/l/@serverless/platform-sdk.svg)](https://www.npmjs.com/package/@serverless/platform-sdk)\n[![coverage](https://img.shields.io/codecov/c/github/serverless/platform-sdk.svg)](https://codecov.io/gh/serverless/platform-sdk)\n[![Known Vulnerabilities](https://snyk.io/test/github/serverless/platform-sdk/badge.svg)](https://snyk.io/test/github/serverless/platform-sdk)\n\n## Contents\n\n- [Installation](#installation)\n- [Functions](#functions)\n  - [login](#login)\n  - [refreshToken](#refreshtoken)\n  - [createAccessKey](#createaccesskey)\n  - [archiveService](#archiveservice)\n  - [getServiceUrl](#getserviceurl)\n  - [listTenants](#listtenants)\n  - [createDeployment](#createdeployment)\n  - [updateDeployment](#updatedeployment)\n  - [getApp](#getapp)\n  - [createApp](#createapp)\n\n## installation\n\n```\nnpm i -s @serverless/platform-sdk\n```\n\n## Functions\n### `login`\nOpens a browser for the user to login, along with a running server awaiting auth data once the user logs in.\n\n**Parameters**\n\nNone\n\n**Returns**\n\nPromise resolving to the following object:\n\n- `username` - `string` - dashboard username\n- `accessToken` - `string` - Auth0 access token\n- `idToken` - `string` - Auth0 idToken\n- `refreshToken` - `string` - Auth0 refreshToken\n- `expiresAt` - `string` - epoch time at which the idToken expires\n\n**Example**\n\n```js\nconst { login } = require('@serverless/platform-sdk')\n\nconst { username, accessToken, idToken, expiresAt } = await login()\n```\n\n---\n\n### `refreshToken`\nRefreshes Auth0 idToken\n\n**Parameters**\n\nrefresh token string\n\n**Returns**\n\n\nPromise resolving to the following object:\n\n- `id_token` - `string` - new Auth0 id token\n- `access_token` - `string` - new Auth0 access token\n- `expires_in` - `string` - number of seconds until token expiration\n\n**Example**\n\n```js\nconst { refreshToken } = require('@serverless/platform-sdk')\n\nconst { id_token, access_token, expires_in } = await refreshToken('some-refresh-token')\n```\n\n---\n\n### `createAccessKey`\nCreates a platform access key for the authenticated user.\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `tenant` - `string` - dashboard tenant\n- `idToken` - `string` - Auth0 idToken\n- `title` - `string` - title of the access key\n\n**Returns**\n\nPromise resolving to an `accessKey` string, that is the access key.\n\n**Example**\n\n```js\nconst { createAccessKey } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  tenant: 'eahefnawy',\n  idToken: 'abc',\n  title: 'Framework'\n}\n\nconst accessKey = await createAccessKey(data)\n```\n\n---\n\n### `archiveService`\nArchives a service in the platform.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `accessKey` - `string` - dashboard access key\n- `app` - `string` - service app\n- `name` - `string` - service name\n- `provider` - `string` - provider name\n- `region` - `string` - region name\n\n**Returns**\n\nNone\n\n**Example**\n\n```js\nconst { archiveService } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  accessKey: 'abc',\n  app: 'my-app',\n  name: 'my-service',\n  provider: 'aws',\n  region: 'us-east-1'\n}\n\nawait archiveService(data)\n```\n\n---\n\n### `getServiceUrl`\nConstructs a service url based on passed-in data.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `app` - `string` - service app\n- `name` - `string` - service name\n\n\n**Returns**\n\nThe service url string.\n\n**Example**\n\n```js\nconst { getServiceUrl } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  name: 'my-service'\n}\n\nconst serviceUrl = getServiceUrl(data)\n```\n\n---\n\n### `listTenants`\nLists the tenants for a given username\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `idToken` - `string` - auth0 user id token\n\n\n**Returns**\n\nArray of objects, each represents a single tenant data model.\n\n**Example**\n\n```js\nconst { listTenants } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  idToken: 'abc'\n}\n\nconst tenants = await listTenants(data)\n```\n\n---\n\n### `createDeploymnet`\nCreates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `accessKey` - `string` - dashboard access key\n- `files` - `object` - files which should be stored in the Platforms deployment record\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { createDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  accessKey: 'abc',\n  files: {\n    'serverless-state.json': {\n      //...snip...\n    }\n  }\n}\n\nconst { id } = await createDeployment(data)\n```\n\n---\n\n### `updateDeployment`\nUpdates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `deploymentId` - `string` - id of the previously created deployment\n- `status` - `string` - status of the deployment to update\n- `accessKey` - `string` - dashboard access key\n- `computedData` - `object` - computed data the Platform needs to generate the state items\n\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { updateDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  deploymentId: 'abc',\n  status: 'failed',\n  accessKey: 'abc',\n  computedData: {\n    // ...snip...\n  }\n}\n\nconst { id } = await updateDeployment(data)\n```\n\n---\n\n### `getApp`\nGets a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { getApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await getApp(data)\n```\n\n---\n\n### `createApp`\nCreates a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { createApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await createApp(data)\n```\n","readmeFilename":"README.md","_id":"@serverless/platform-sdk@0.6.0-27-g3bae9d8","_npmVersion":"6.4.1","_nodeVersion":"10.15.3","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-32SXxrIIo0ug1CB3uxa1yyD3wWpxeyWSAWIud3CUHlIKaUPYxceK/oM8JcBdMU0GZlALeOdgap88AdbkGrjfKQ==","shasum":"a04dd18fe980acc2081a38048683609b7ab5c91e","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-0.6.0-27-g3bae9d8.tgz","fileCount":63,"unpackedSize":147633,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcmPINCRA9TVsSAnZWagAA/9QP/2cQlI0PktC2s+Y5NX1P\nePg1heGzREVb13DLDVS1VfBZLvBhdPkOqJwBuHoo3FvE7uJLWyAYHWi87VpY\ntyymZxIKbSFn+AsYGIgWGzZ9jwkDxJ4bYtZdpdTr4GsRbKDYbaNyZa087E6V\nQIpBl/3v21IyHPfG3iuhLRQQahSuunWE49D+jKbviwqp6agrJjLPMzZxzkQl\nW74ll+VZwcysSAp6GEdRA64GEEZjYHWnP/yKb357/GjU34jLyjObit3iD+L8\nckNTkPQxX4SeS5Mu58HvJoDdP3i+4nX9PsM0v6GPuesgowJ1IUF2RmsUvVNX\nBMcWlJX0mUmREdpBu2rOUb45CV1SxPzUMsuE41vycRkJG3oOZWrh4KElrORq\nRcqnCy0Iq/93Lv6k4G1uWveicqQpNVvRXDYLfzRUV81GVMlbqQtu8gvXgSwS\njjX4CkogXreqFt0XFIKaux/ToS2N2U4w5dl/6RIcdB8aPxHeIl9vT00l03sZ\npGjsSq2CFoCA91kwgQ395E9cShPqN+Cc1A/0LHe7UPEUZyVSqXgn5X9KXBHZ\nIP0QWip3LIIg402vMhhcznuTXyALIT/4Kro/s0t+xDJgl+wP/1m1TKh0Bhq6\neRtaeaTsL5Y+Ud0KyVOYkpqZKWyHwP1Wph1L9FwUurwwmS+nLasdMnbk5sm3\n7fQA\r\n=yvJv\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"services@serverless.com","name":"serverless-main"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_0.6.0-27-g3bae9d8_1553527308828_0.3426371592739239"},"_hasShrinkwrap":false},"0.7.0":{"name":"@serverless/platform-sdk","version":"0.7.0","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"prepare":"npm run build","build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","lint:staged":"lint-staged","setup":"./scripts/setup.sh","setup:ci":"./scripts/setup-ci.sh","test":"./scripts/test.sh","test:ci":"snyk test && ./scripts/test-ci.sh","watch":"./scripts/watch.sh"},"dependencies":{"babel-polyfill":"^6.26.0","body-parser":"^1.18.3","chalk":"^2.4.1","cors":"^2.8.4","express":"^4.16.3","is-docker":"^1.1.0","isomorphic-fetch":"^2.2.1","jwt-decode":"^2.2.0","opn":"^5.3.0","querystring":"^0.2.0","ramda":"^0.25.0","rc":"^1.2.8","source-map-support":"^0.5.5","uuid":"^3.3.2","write-file-atomic":"^2.3.0"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^21.2.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.13.0","eslint-plugin-prettier":"^2.6.1","jest-cli":"^21.2.0","lint-staged":"7.1.3","pre-commit":"^1.2.2","prettier":"^1.13.6","snyk":"^1.92.5"},"publishConfig":{"access":"public"},"lint-staged":{"*.js":["eslint --fix .","git add -A"]},"pre-commit":["lint:staged"],"gitHead":"3bae9d81d1f55982cb30ff05da43d6c2a7fd9ed4","_id":"@serverless/platform-sdk@0.7.0","_npmVersion":"6.4.1","_nodeVersion":"10.15.3","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-3VuXTkWSmfoGXiql0v/5lMHOMfRtk01C81w0QinmSZKpO49f+9UgSwJvLK1LaVJmOTBZidr1vBI5SZHTNZW2WA==","shasum":"de6d2ffdb37a70e3adb3991428b16e5538c88848","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-0.7.0.tgz","fileCount":63,"unpackedSize":147621,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcmPNxCRA9TVsSAnZWagAA3mUP/jCR1Ll21gUEe8uYo1SE\nAj8leO/kpocxsNNycsX8857pPmpHdunn01tXCULcfHnqJ+ErO42q1WTXKjuy\ny+v79hI3vx4M8hUu+dCdAE3oB//6/sapRVytTwyyTwAlhqEHiLTNMQenV3Mb\ngmGvtafOatHfGYhz3wTrEDTZnoHIWhUT7+ZihdkhmrmVb4UQRjMeQO1OmVU1\nQ7OadpIGohb1PFN4CXn8yeSgCAqbClg4w/m5KcVGOsqE87oGS2vBinjBjHx0\nY6Kik7YioH4s97u1fdzAacN2KMx4wY7ZZa6DhfTiP3dkJmJK32ZRu1dMlDOS\nqSV2bc84zyyo/s4mD/cqzp6hueFceIwnN2FDrmC2WazZD3yBxR8glqmqqCLQ\njCATnLWJ85Ea5yvDNQcaCg1GtQl9lSsVgPtNUuE1kaovQAQomahtu3xMJKqV\nd8bX12omtJ2cGLNAWWB+XOKWGRhBWbp2XUcvXoCeq4SVBAhDSbSIyiAuPTb5\nE1f3tZncjjKurk+mBVAquiSlT8IK3tJ6HcwP12nNLYKUJzvDLo+Q17j96fcW\nhoML8Pzb08lY1EuWuW6dFHxj0/lzx9+XAr1jsX4idfiqP5WXFcHd7SevuosG\nZ9wLPBky/+uSLFsI3jbGBZUxoi0UuYKtMcmhGTyRU8Gl/BfSvMeVM07x7l+h\npXW1\r\n=U2NH\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"services@serverless.com","name":"serverless-main"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_0.7.0_1553527664604_0.8431945502049656"},"_hasShrinkwrap":false},"0.7.0-3-g5c0f615":{"name":"@serverless/platform-sdk","version":"0.7.0-3-g5c0f615","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"prepare":"npm run build","build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","lint:staged":"lint-staged","setup":"./scripts/setup.sh","setup:ci":"./scripts/setup-ci.sh","test":"./scripts/test.sh","test:ci":"snyk test && ./scripts/test-ci.sh","watch":"./scripts/watch.sh"},"dependencies":{"babel-polyfill":"^6.26.0","body-parser":"^1.18.3","chalk":"^2.4.1","cors":"^2.8.4","express":"^4.16.3","is-docker":"^1.1.0","isomorphic-fetch":"^2.2.1","jwt-decode":"^2.2.0","opn":"^5.3.0","querystring":"^0.2.0","ramda":"^0.25.0","rc":"^1.2.8","source-map-support":"^0.5.5","uuid":"^3.3.2","write-file-atomic":"^2.3.0"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^21.2.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.13.0","eslint-plugin-prettier":"^2.6.1","jest-cli":"^21.2.0","lint-staged":"7.1.3","pre-commit":"^1.2.2","prettier":"^1.13.6","snyk":"^1.92.5"},"publishConfig":{"access":"public"},"lint-staged":{"*.js":["eslint --fix .","git add -A"]},"pre-commit":["lint:staged"],"gitHead":"5c0f615694344800fcb34a06f3d4950eceac1027","readme":"# Platform SDK\n\nFunctional SDK for the Serverless Platfrom.\n\n## Project Status\n\n[![Build Status](https://travis-ci.com/serverless/platform-sdk.svg)](https://travis-ci.com/serverless/platform-sdk)\n[![license](https://img.shields.io/npm/l/@serverless/platform-sdk.svg)](https://www.npmjs.com/package/@serverless/platform-sdk)\n[![coverage](https://img.shields.io/codecov/c/github/serverless/platform-sdk.svg)](https://codecov.io/gh/serverless/platform-sdk)\n[![Known Vulnerabilities](https://snyk.io/test/github/serverless/platform-sdk/badge.svg)](https://snyk.io/test/github/serverless/platform-sdk)\n\n## Contents\n\n- [Installation](#installation)\n- [Functions](#functions)\n  - [login](#login)\n  - [refreshToken](#refreshtoken)\n  - [createAccessKey](#createaccesskey)\n  - [archiveService](#archiveservice)\n  - [getServiceUrl](#getserviceurl)\n  - [listTenants](#listtenants)\n  - [createDeployment](#createdeployment)\n  - [updateDeployment](#updatedeployment)\n  - [getApp](#getapp)\n  - [createApp](#createapp)\n\n## installation\n\n```\nnpm i -s @serverless/platform-sdk\n```\n\n## Functions\n### `login`\nOpens a browser for the user to login, along with a running server awaiting auth data once the user logs in.\n\n**Parameters**\n\nNone\n\n**Returns**\n\nPromise resolving to the following object:\n\n- `username` - `string` - dashboard username\n- `accessToken` - `string` - Auth0 access token\n- `idToken` - `string` - Auth0 idToken\n- `refreshToken` - `string` - Auth0 refreshToken\n- `expiresAt` - `string` - epoch time at which the idToken expires\n\n**Example**\n\n```js\nconst { login } = require('@serverless/platform-sdk')\n\nconst { username, accessToken, idToken, expiresAt } = await login()\n```\n\n---\n\n### `refreshToken`\nRefreshes Auth0 idToken\n\n**Parameters**\n\nrefresh token string\n\n**Returns**\n\n\nPromise resolving to the following object:\n\n- `id_token` - `string` - new Auth0 id token\n- `access_token` - `string` - new Auth0 access token\n- `expires_in` - `string` - number of seconds until token expiration\n\n**Example**\n\n```js\nconst { refreshToken } = require('@serverless/platform-sdk')\n\nconst { id_token, access_token, expires_in } = await refreshToken('some-refresh-token')\n```\n\n---\n\n### `createAccessKey`\nCreates a platform access key for the authenticated user.\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `tenant` - `string` - dashboard tenant\n- `idToken` - `string` - Auth0 idToken\n- `title` - `string` - title of the access key\n\n**Returns**\n\nPromise resolving to an `accessKey` string, that is the access key.\n\n**Example**\n\n```js\nconst { createAccessKey } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  tenant: 'eahefnawy',\n  idToken: 'abc',\n  title: 'Framework'\n}\n\nconst accessKey = await createAccessKey(data)\n```\n\n---\n\n### `archiveService`\nArchives a service in the platform.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `accessKey` - `string` - dashboard access key\n- `app` - `string` - service app\n- `name` - `string` - service name\n- `provider` - `string` - provider name\n- `region` - `string` - region name\n\n**Returns**\n\nNone\n\n**Example**\n\n```js\nconst { archiveService } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  accessKey: 'abc',\n  app: 'my-app',\n  name: 'my-service',\n  provider: 'aws',\n  region: 'us-east-1'\n}\n\nawait archiveService(data)\n```\n\n---\n\n### `getServiceUrl`\nConstructs a service url based on passed-in data.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `app` - `string` - service app\n- `name` - `string` - service name\n\n\n**Returns**\n\nThe service url string.\n\n**Example**\n\n```js\nconst { getServiceUrl } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  name: 'my-service'\n}\n\nconst serviceUrl = getServiceUrl(data)\n```\n\n---\n\n### `listTenants`\nLists the tenants for a given username\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `idToken` - `string` - auth0 user id token\n\n\n**Returns**\n\nArray of objects, each represents a single tenant data model.\n\n**Example**\n\n```js\nconst { listTenants } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  idToken: 'abc'\n}\n\nconst tenants = await listTenants(data)\n```\n\n---\n\n### `createDeploymnet`\nCreates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `accessKey` - `string` - dashboard access key\n- `files` - `object` - files which should be stored in the Platforms deployment record\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { createDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  accessKey: 'abc',\n  files: {\n    'serverless-state.json': {\n      //...snip...\n    }\n  }\n}\n\nconst { id } = await createDeployment(data)\n```\n\n---\n\n### `updateDeployment`\nUpdates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `deploymentId` - `string` - id of the previously created deployment\n- `status` - `string` - status of the deployment to update\n- `accessKey` - `string` - dashboard access key\n- `computedData` - `object` - computed data the Platform needs to generate the state items\n\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { updateDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  deploymentId: 'abc',\n  status: 'failed',\n  accessKey: 'abc',\n  computedData: {\n    // ...snip...\n  }\n}\n\nconst { id } = await updateDeployment(data)\n```\n\n---\n\n### `getApp`\nGets a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { getApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await getApp(data)\n```\n\n---\n\n### `createApp`\nCreates a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { createApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await createApp(data)\n```\n","readmeFilename":"README.md","_id":"@serverless/platform-sdk@0.7.0-3-g5c0f615","_npmVersion":"6.4.1","_nodeVersion":"10.15.3","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-D+3chcrnyNAaa2gELViP7SZ1MnI4YjShoQ3iumnca5rGPqcdgH4h90C5O1zrIxQB/A/JpXmOS1TOvijHvB6Ufw==","shasum":"0f23625a1625e6de36bf419cb48eeca847b5998e","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-0.7.0-3-g5c0f615.tgz","fileCount":65,"unpackedSize":151816,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcrKUnCRA9TVsSAnZWagAAyc4QAJc7vcfvYVnNTHMkOfXB\nrICPhg7H074nEeuC4vpUpfN+Tynubxxk1FUd2/EfMOUV8Ep/siKrTRm0nIMV\nutoT2DrufILRynimjzkDV037FG56Ce4Fmfrixzm+VPhsoKcJ1p9AEr8p+xE2\nS+UnXKeOrTKqZA3Gun/WI8yB40ITjOqEjray26+ecOq1UeW50rGPfyXtyBzI\n335iSIhyc/dejLUxe4DurjZRdjtHRoRVltcAR1FKOpl3T6K/A0EY7YUg2LFy\nPENYa5cTWLmMCJHuVuhYhgk+c3UIs44ntdxiUvRo7vgAnonS2EAJhh0jnMfS\nSUVCj3631xmS4tzVBIqy57V1eO9Wz45c1tAvMHkdLE9yGHMUXK428ZKFJMDP\nGWP9fTxgXDhFRZyUiB5oFKerKaO8YaoOJvnAZOPgbMx8lGtTe5LDeNVa4F13\nFNA72J2cahVPo1pNcfxuRIKMQhM+qSYoR2AayNG6Vee3sv6Kh/0deuR0yq+W\nH7eGNdMkpw+iyQt0PFMsceMZO4YXsNijREd9ATfxFICycVUfEq1IbbtrqJ4J\nTw6EpLCN8W7s+BGuSXYu46hYGc7gbjpS3LNzg7k8dlromGQrxVga5EseMBmV\nxVkjKYnKYF3dRlydrc5vPGK6X6IWIW0KW6c9OFnITt0HlzuulOI+yHHNrIdi\nsr4h\r\n=6CSX\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"services@serverless.com","name":"serverless-main"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_0.7.0-3-g5c0f615_1554818343060_0.9539821434872622"},"_hasShrinkwrap":false},"0.7.1":{"name":"@serverless/platform-sdk","version":"0.7.1","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"prepare":"npm run build","build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","lint:staged":"lint-staged","setup":"./scripts/setup.sh","setup:ci":"./scripts/setup-ci.sh","test":"./scripts/test.sh","test:ci":"snyk test && ./scripts/test-ci.sh","watch":"./scripts/watch.sh"},"dependencies":{"babel-polyfill":"^6.26.0","body-parser":"^1.18.3","chalk":"^2.4.1","cors":"^2.8.4","express":"^4.16.3","is-docker":"^1.1.0","isomorphic-fetch":"^2.2.1","jwt-decode":"^2.2.0","opn":"^5.3.0","querystring":"^0.2.0","ramda":"^0.25.0","rc":"^1.2.8","source-map-support":"^0.5.5","uuid":"^3.3.2","write-file-atomic":"^2.3.0"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^21.2.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.13.0","eslint-plugin-prettier":"^2.6.1","jest-cli":"^21.2.0","lint-staged":"7.1.3","pre-commit":"^1.2.2","prettier":"^1.13.6","snyk":"^1.92.5"},"publishConfig":{"access":"public"},"lint-staged":{"*.js":["eslint --fix .","git add -A"]},"pre-commit":["lint:staged"],"gitHead":"5c0f615694344800fcb34a06f3d4950eceac1027","_id":"@serverless/platform-sdk@0.7.1","_npmVersion":"6.4.1","_nodeVersion":"10.15.3","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-+oV/UiSq45eGlMQIHyJmBsysREHOE+dKx5WadjIuxjvRF/wYmN+1QTb08wJRqHkXItns4S26v1EI9yqyNXbfWg==","shasum":"0f34007861cedd5f90a7ed78a3068bdc1f185086","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-0.7.1.tgz","fileCount":65,"unpackedSize":151805,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcrKY2CRA9TVsSAnZWagAA/5oP/Rg6bfn+wTUIZxlzjXtF\nohQUp1aFuvmFqJRKQERzNCwwS0mR4+4wvj7SPlnw3oNlgP7YJmOeT0b+WlPf\nGzLPDqyeufGik0efhla80/Mz7MsVIlZ/giYiFn6XdNxa1/rWpC75L7BJllqN\nYCvUyvqKki6rVAHRWu0z1R0fYaALbgZvyYrE8siY7iVFVDeURqnRbNifb7oD\nasy0VB9ftk2nUgLDRbkvhrbVa9KHptQeAw2ymj9R1KB6dsUMzVpnUQpmoGdJ\nlTraVZKwC1hn4itrx1YOaTaR4iwvSU+uxmc2+di0t6LAIJQp9kE6wYAM8wiJ\nJDdZ8bg16+dSdL9l3DTpl4bi2uPCdd9TmxixAY5brahrxuRJRMldHoIVDkq3\np3mbM8ZcW8JdoX+VAcpMNSKZVDkcCpMU71nMN7X5pzF59eM5mCQq26BY7vRJ\n/bMUUaTdd7FAZvm7qv8URZaoNJC5vfJ+pey9YK8W05dgpwGRffEAOQb/CZEm\nrxwPEQbO78wnCmj0K+n2Tds2WeYpeAXMSSiShrnRBm/c0MeLD3yF+tIY6L7Y\n4YOdtKgMf1wS8nR0ZZWAmOgyadR8XEJbtIjt/EtcKgeY6nTrevu7GUs9Wpb5\n4/mDjTEN1OV1ayDcwXga8X9PSlhLntkwvnaS9UOt5lnejX1B21uXzUNgg0Rv\nHOTd\r\n=MDq/\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"services@serverless.com","name":"serverless-main"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_0.7.1_1554818613948_0.7316866475161901"},"_hasShrinkwrap":false},"0.7.1-6-g59f0c47":{"name":"@serverless/platform-sdk","version":"0.7.1-6-g59f0c47","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"prepare":"npm run build","build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","lint:staged":"lint-staged","setup":"./scripts/setup.sh","setup:ci":"./scripts/setup-ci.sh","test":"./scripts/test.sh","test:ci":"snyk test && ./scripts/test-ci.sh","watch":"./scripts/watch.sh"},"dependencies":{"babel-polyfill":"^6.26.0","body-parser":"^1.18.3","chalk":"^2.4.1","cors":"^2.8.4","express":"^4.16.3","is-docker":"^1.1.0","isomorphic-fetch":"^2.2.1","jwt-decode":"^2.2.0","opn":"^5.3.0","querystring":"^0.2.0","ramda":"^0.25.0","rc":"^1.2.8","source-map-support":"^0.5.5","uuid":"^3.3.2","write-file-atomic":"^2.3.0"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^21.2.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.13.0","eslint-plugin-prettier":"^2.6.1","jest-cli":"^21.2.0","lint-staged":"7.1.3","pre-commit":"^1.2.2","prettier":"^1.13.6","snyk":"^1.92.5"},"publishConfig":{"access":"public"},"lint-staged":{"*.js":["eslint --fix .","git add -A"]},"pre-commit":["lint:staged"],"gitHead":"59f0c4744f22aa6eae07211b565cf2184db233ad","readme":"# Platform SDK\n\nFunctional SDK for the Serverless Platfrom.\n\n## Project Status\n\n[![Build Status](https://travis-ci.com/serverless/platform-sdk.svg)](https://travis-ci.com/serverless/platform-sdk)\n[![license](https://img.shields.io/npm/l/@serverless/platform-sdk.svg)](https://www.npmjs.com/package/@serverless/platform-sdk)\n[![coverage](https://img.shields.io/codecov/c/github/serverless/platform-sdk.svg)](https://codecov.io/gh/serverless/platform-sdk)\n[![Known Vulnerabilities](https://snyk.io/test/github/serverless/platform-sdk/badge.svg)](https://snyk.io/test/github/serverless/platform-sdk)\n\n## Contents\n\n- [Installation](#installation)\n- [Functions](#functions)\n  - [login](#login)\n  - [refreshToken](#refreshtoken)\n  - [createAccessKey](#createaccesskey)\n  - [archiveService](#archiveservice)\n  - [getServiceUrl](#getserviceurl)\n  - [listTenants](#listtenants)\n  - [createDeployment](#createdeployment)\n  - [updateDeployment](#updatedeployment)\n  - [getApp](#getapp)\n  - [createApp](#createapp)\n\n## installation\n\n```\nnpm i -s @serverless/platform-sdk\n```\n\n## Functions\n### `login`\nOpens a browser for the user to login, along with a running server awaiting auth data once the user logs in.\n\n**Parameters**\n\nNone\n\n**Returns**\n\nPromise resolving to the following object:\n\n- `username` - `string` - dashboard username\n- `accessToken` - `string` - Auth0 access token\n- `idToken` - `string` - Auth0 idToken\n- `refreshToken` - `string` - Auth0 refreshToken\n- `expiresAt` - `string` - epoch time at which the idToken expires\n\n**Example**\n\n```js\nconst { login } = require('@serverless/platform-sdk')\n\nconst { username, accessToken, idToken, expiresAt } = await login()\n```\n\n---\n\n### `refreshToken`\nRefreshes Auth0 idToken\n\n**Parameters**\n\nrefresh token string\n\n**Returns**\n\n\nPromise resolving to the following object:\n\n- `id_token` - `string` - new Auth0 id token\n- `access_token` - `string` - new Auth0 access token\n- `expires_in` - `string` - number of seconds until token expiration\n\n**Example**\n\n```js\nconst { refreshToken } = require('@serverless/platform-sdk')\n\nconst { id_token, access_token, expires_in } = await refreshToken('some-refresh-token')\n```\n\n---\n\n### `createAccessKey`\nCreates a platform access key for the authenticated user.\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `tenant` - `string` - dashboard tenant\n- `idToken` - `string` - Auth0 idToken\n- `title` - `string` - title of the access key\n\n**Returns**\n\nPromise resolving to an `accessKey` string, that is the access key.\n\n**Example**\n\n```js\nconst { createAccessKey } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  tenant: 'eahefnawy',\n  idToken: 'abc',\n  title: 'Framework'\n}\n\nconst accessKey = await createAccessKey(data)\n```\n\n---\n\n### `archiveService`\nArchives a service in the platform.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `accessKey` - `string` - dashboard access key\n- `app` - `string` - service app\n- `name` - `string` - service name\n- `provider` - `string` - provider name\n- `region` - `string` - region name\n\n**Returns**\n\nNone\n\n**Example**\n\n```js\nconst { archiveService } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  accessKey: 'abc',\n  app: 'my-app',\n  name: 'my-service',\n  provider: 'aws',\n  region: 'us-east-1'\n}\n\nawait archiveService(data)\n```\n\n---\n\n### `getServiceUrl`\nConstructs a service url based on passed-in data.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `app` - `string` - service app\n- `name` - `string` - service name\n\n\n**Returns**\n\nThe service url string.\n\n**Example**\n\n```js\nconst { getServiceUrl } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  name: 'my-service'\n}\n\nconst serviceUrl = getServiceUrl(data)\n```\n\n---\n\n### `listTenants`\nLists the tenants for a given username\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `idToken` - `string` - auth0 user id token\n\n\n**Returns**\n\nArray of objects, each represents a single tenant data model.\n\n**Example**\n\n```js\nconst { listTenants } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  idToken: 'abc'\n}\n\nconst tenants = await listTenants(data)\n```\n\n---\n\n### `createDeploymnet`\nCreates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `accessKey` - `string` - dashboard access key\n- `files` - `object` - files which should be stored in the Platforms deployment record\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { createDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  accessKey: 'abc',\n  files: {\n    'serverless-state.json': {\n      //...snip...\n    }\n  }\n}\n\nconst { id } = await createDeployment(data)\n```\n\n---\n\n### `updateDeployment`\nUpdates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `deploymentId` - `string` - id of the previously created deployment\n- `status` - `string` - status of the deployment to update\n- `accessKey` - `string` - dashboard access key\n- `computedData` - `object` - computed data the Platform needs to generate the state items\n\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { updateDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  deploymentId: 'abc',\n  status: 'failed',\n  accessKey: 'abc',\n  computedData: {\n    // ...snip...\n  }\n}\n\nconst { id } = await updateDeployment(data)\n```\n\n---\n\n### `getApp`\nGets a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { getApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await getApp(data)\n```\n\n---\n\n### `createApp`\nCreates a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { createApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await createApp(data)\n```\n","readmeFilename":"README.md","_id":"@serverless/platform-sdk@0.7.1-6-g59f0c47","_npmVersion":"6.4.1","_nodeVersion":"10.15.3","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-wAlgq3uEo2dE5e8m0oeiV+wLwek9zEUQsEygVpK8VdXmkbKld+naKX7XU7sAC0/79waS8A1qb8DcZR8NhOzZvQ==","shasum":"f5c577e23e8873ab5dfb5019139857172336b7f0","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-0.7.1-6-g59f0c47.tgz","fileCount":65,"unpackedSize":152601,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJctPqmCRA9TVsSAnZWagAAs0oP/1pIE/xVQnopLYdx5wQO\nCNvc8uyPEoZi4pSaYFIkAginPwRy+QlK+7F1DLkU58ZGF0czXh++Pmr/LV+E\nZP/HChF1/eslbtXEq92kZxJugazq8otXNL7abJlMNhkzFokGmexSP3yrCSeK\n+w+B9X6ANQhWRbXBo+joTqskutih0uy5VPGmOGT269zhxO4ZRCdrzKg9KBHd\nFvLSnmbV9B4FewGGyZBHYfRrPrfHWDIQWdn3ztMqsktvr6Xso7vor/0wBX7r\nGZ4ingNdHvTKf1ujU6Hb8aMedM9Y3poK5iJ1BvZEJn0eufEDRTA8ZCgmV3Is\nFOt0GIJeSSRb0OCuUzAxm2HjZuHXhgLMFoVEvisXbGcynUI8PfIELq8XYZZ4\nGu4pacwMvQj2KSBP3Z7se0g+SzfsOVaIsU8s7q1htPQ1MRIRrX/+dd6ZYXeF\nzbZeS4aMeP9BSDbykD8ELwzTawm1jOslhtG7i4K6As007TRsWpLYlm2P847h\nAJWx542s9hz+F2XJg3+Nz6Y1R30lq2DdHShfCVDxE5MGSuWY271xctXfN2Op\nNm0uqsxCByhG+qvQc0/leoZgB6EYmiELSDRjv6+PbY/YIEuWFUqzQv1igywI\nqhstLySrnoLFwAHJ3rmB+teKnb5H25B+whZgIuwXIhRkZczWQUrqGtSupQlg\nDOpp\r\n=U6rS\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"services@serverless.com","name":"serverless-main"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_0.7.1-6-g59f0c47_1555364517545_0.03557558315704501"},"_hasShrinkwrap":false},"0.7.1-8-g128ea55":{"name":"@serverless/platform-sdk","version":"0.7.1-8-g128ea55","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"prepare":"npm run build","build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","lint:staged":"lint-staged","setup":"./scripts/setup.sh","setup:ci":"./scripts/setup-ci.sh","test":"./scripts/test.sh","test:ci":"snyk test && ./scripts/test-ci.sh","watch":"./scripts/watch.sh"},"dependencies":{"babel-polyfill":"^6.26.0","body-parser":"^1.18.3","chalk":"^2.4.1","cors":"^2.8.4","express":"^4.16.3","is-docker":"^1.1.0","isomorphic-fetch":"^2.2.1","jwt-decode":"^2.2.0","opn":"^5.3.0","querystring":"^0.2.0","ramda":"^0.25.0","rc":"^1.2.8","source-map-support":"^0.5.5","uuid":"^3.3.2","write-file-atomic":"^2.3.0"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^21.2.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.13.0","eslint-plugin-prettier":"^2.6.1","jest-cli":"^21.2.0","lint-staged":"7.1.3","pre-commit":"^1.2.2","prettier":"^1.13.6","snyk":"^1.92.5"},"publishConfig":{"access":"public"},"lint-staged":{"*.js":["eslint --fix .","git add -A"]},"pre-commit":["lint:staged"],"gitHead":"128ea55da34afb679f71285a0e75c07966ddc3f1","readme":"# Platform SDK\n\nFunctional SDK for the Serverless Platfrom.\n\n## Project Status\n\n[![Build Status](https://travis-ci.com/serverless/platform-sdk.svg)](https://travis-ci.com/serverless/platform-sdk)\n[![license](https://img.shields.io/npm/l/@serverless/platform-sdk.svg)](https://www.npmjs.com/package/@serverless/platform-sdk)\n[![coverage](https://img.shields.io/codecov/c/github/serverless/platform-sdk.svg)](https://codecov.io/gh/serverless/platform-sdk)\n[![Known Vulnerabilities](https://snyk.io/test/github/serverless/platform-sdk/badge.svg)](https://snyk.io/test/github/serverless/platform-sdk)\n\n## Contents\n\n- [Installation](#installation)\n- [Functions](#functions)\n  - [login](#login)\n  - [refreshToken](#refreshtoken)\n  - [createAccessKey](#createaccesskey)\n  - [archiveService](#archiveservice)\n  - [getServiceUrl](#getserviceurl)\n  - [listTenants](#listtenants)\n  - [createDeployment](#createdeployment)\n  - [updateDeployment](#updatedeployment)\n  - [getApp](#getapp)\n  - [createApp](#createapp)\n\n## installation\n\n```\nnpm i -s @serverless/platform-sdk\n```\n\n## Functions\n### `login`\nOpens a browser for the user to login, along with a running server awaiting auth data once the user logs in.\n\n**Parameters**\n\nNone\n\n**Returns**\n\nPromise resolving to the following object:\n\n- `username` - `string` - dashboard username\n- `accessToken` - `string` - Auth0 access token\n- `idToken` - `string` - Auth0 idToken\n- `refreshToken` - `string` - Auth0 refreshToken\n- `expiresAt` - `string` - epoch time at which the idToken expires\n\n**Example**\n\n```js\nconst { login } = require('@serverless/platform-sdk')\n\nconst { username, accessToken, idToken, expiresAt } = await login()\n```\n\n---\n\n### `refreshToken`\nRefreshes Auth0 idToken\n\n**Parameters**\n\nrefresh token string\n\n**Returns**\n\n\nPromise resolving to the following object:\n\n- `id_token` - `string` - new Auth0 id token\n- `access_token` - `string` - new Auth0 access token\n- `expires_in` - `string` - number of seconds until token expiration\n\n**Example**\n\n```js\nconst { refreshToken } = require('@serverless/platform-sdk')\n\nconst { id_token, access_token, expires_in } = await refreshToken('some-refresh-token')\n```\n\n---\n\n### `createAccessKey`\nCreates a platform access key for the authenticated user.\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `tenant` - `string` - dashboard tenant\n- `idToken` - `string` - Auth0 idToken\n- `title` - `string` - title of the access key\n\n**Returns**\n\nPromise resolving to an `accessKey` string, that is the access key.\n\n**Example**\n\n```js\nconst { createAccessKey } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  tenant: 'eahefnawy',\n  idToken: 'abc',\n  title: 'Framework'\n}\n\nconst accessKey = await createAccessKey(data)\n```\n\n---\n\n### `archiveService`\nArchives a service in the platform.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `accessKey` - `string` - dashboard access key\n- `app` - `string` - service app\n- `name` - `string` - service name\n- `provider` - `string` - provider name\n- `region` - `string` - region name\n\n**Returns**\n\nNone\n\n**Example**\n\n```js\nconst { archiveService } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  accessKey: 'abc',\n  app: 'my-app',\n  name: 'my-service',\n  provider: 'aws',\n  region: 'us-east-1'\n}\n\nawait archiveService(data)\n```\n\n---\n\n### `getServiceUrl`\nConstructs a service url based on passed-in data.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `app` - `string` - service app\n- `name` - `string` - service name\n\n\n**Returns**\n\nThe service url string.\n\n**Example**\n\n```js\nconst { getServiceUrl } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  name: 'my-service'\n}\n\nconst serviceUrl = getServiceUrl(data)\n```\n\n---\n\n### `listTenants`\nLists the tenants for a given username\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `idToken` - `string` - auth0 user id token\n\n\n**Returns**\n\nArray of objects, each represents a single tenant data model.\n\n**Example**\n\n```js\nconst { listTenants } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  idToken: 'abc'\n}\n\nconst tenants = await listTenants(data)\n```\n\n---\n\n### `createDeploymnet`\nCreates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `accessKey` - `string` - dashboard access key\n- `files` - `object` - files which should be stored in the Platforms deployment record\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { createDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  accessKey: 'abc',\n  files: {\n    'serverless-state.json': {\n      //...snip...\n    }\n  }\n}\n\nconst { id } = await createDeployment(data)\n```\n\n---\n\n### `updateDeployment`\nUpdates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `deploymentId` - `string` - id of the previously created deployment\n- `status` - `string` - status of the deployment to update\n- `accessKey` - `string` - dashboard access key\n- `computedData` - `object` - computed data the Platform needs to generate the state items\n\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { updateDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  deploymentId: 'abc',\n  status: 'failed',\n  accessKey: 'abc',\n  computedData: {\n    // ...snip...\n  }\n}\n\nconst { id } = await updateDeployment(data)\n```\n\n---\n\n### `getApp`\nGets a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { getApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await getApp(data)\n```\n\n---\n\n### `createApp`\nCreates a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { createApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await createApp(data)\n```\n","readmeFilename":"README.md","_id":"@serverless/platform-sdk@0.7.1-8-g128ea55","_npmVersion":"6.4.1","_nodeVersion":"10.15.3","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-rj8d16j45ErBMQL8NuqFSjbcDQNL8bVmN0qk8JK5So4sR8qjb35KQWqin5cUo7plqbfx3IdS4cYxnsDAvgm1qA==","shasum":"d2fd1c6e615cc932daacccf4989b71c36797fd06","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-0.7.1-8-g128ea55.tgz","fileCount":65,"unpackedSize":152601,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcth+oCRA9TVsSAnZWagAA/gAQAIq644KB9Bkew4EeJBs+\nbx6LXdgjrykp0FJNb8QThu23fX1BzrTWIIfIAvLYbL296cbQWkzNTHTG/k3E\nYX0HnqiF9dMUB7thegNGYUyhHZT/lWK7VMV+sfXqjz8jptpb830FGYJ1hk79\njCCz0Eg6++9YyoOjQKCCrWSC3zI5O/GwUaGNo4CV2LUt5gr+R9oHJAzUqNFM\nFi+HGztqnLrsl1X33b4/cAOLbTo3kAKmuuT0wtkCHQCGcKwwxJdezESFWc8Y\nZOx0wu1/2OwbhFMtqAn0VwYrqg6+rIs6UlMoNgir98BbbhdDuHFd/0ZJ9fV8\nphQwn8CZW5JW91ub//u2MZk//SSKnJogD1upBBf6QG/NIuEt019b1TOBMuCK\noWvTD2GhnqHDdkqAXScM4MQmkn2bQIsEQJByQ00hTVLS1dmW4y0rvXbFiVyN\nfUdSRvtJa5GfsweH9XxEbxfAG7QvE6Mhn/+dErd7yulHodF85ruZ5LFZ+K5T\nnd1cN93m8pLehB+A8zaHHN2fphcnfW/FlW9M6/IaordwMKUQXaBoYcfn7A97\nU3nvT9GT/QzMJDwhuzLpxa6Pm7xu5Y9+p9JMOh3wXkLFOQ8L6oeYpCEBUlxa\ncXHZdLchUTsHNFqeGdKCVsBuMIo1Pce7vheUTLXj+9+qNumQCNr3fg9fAKrp\n01Q+\r\n=ch2H\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"services@serverless.com","name":"serverless-main"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_0.7.1-8-g128ea55_1555439528178_0.16809454757762543"},"_hasShrinkwrap":false},"0.7.2":{"name":"@serverless/platform-sdk","version":"0.7.2","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"prepare":"npm run build","build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","lint:staged":"lint-staged","setup":"./scripts/setup.sh","setup:ci":"./scripts/setup-ci.sh","test":"./scripts/test.sh","test:ci":"snyk test && ./scripts/test-ci.sh","watch":"./scripts/watch.sh"},"dependencies":{"babel-polyfill":"^6.26.0","body-parser":"^1.18.3","chalk":"^2.4.1","cors":"^2.8.4","express":"^4.16.3","is-docker":"^1.1.0","isomorphic-fetch":"^2.2.1","jwt-decode":"^2.2.0","opn":"^5.3.0","querystring":"^0.2.0","ramda":"^0.25.0","rc":"^1.2.8","source-map-support":"^0.5.5","uuid":"^3.3.2","write-file-atomic":"^2.3.0"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^21.2.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.13.0","eslint-plugin-prettier":"^2.6.1","jest-cli":"^21.2.0","lint-staged":"7.1.3","pre-commit":"^1.2.2","prettier":"^1.13.6","snyk":"^1.92.5"},"publishConfig":{"access":"public"},"lint-staged":{"*.js":["eslint --fix .","git add -A"]},"pre-commit":["lint:staged"],"gitHead":"128ea55da34afb679f71285a0e75c07966ddc3f1","_id":"@serverless/platform-sdk@0.7.2","_npmVersion":"6.4.1","_nodeVersion":"10.15.3","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-+jxd4Uw2CGAe2RlSx8hRZJMjQk1gx1MV3EeF5wWTfkyo/UxInfb64G3At7RvILG4mb6leJI1RyOuSePoh/fnpg==","shasum":"570d7d98a4851ad1b17db5d8c8aa441e4e3e1897","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-0.7.2.tgz","fileCount":65,"unpackedSize":152590,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJctzRKCRA9TVsSAnZWagAABKsP/3P83glt4+Xf++E9a8by\nJqTPmtIMEeMRwzj8WSjPRYOHFLBVmSS3AZEscFaolHc87OjapiI+Ic7xuhpt\nW11ZFdBrslidlP+XE8E5Ct6IVdNc1j3WMN+14I0K7+RLUioaj8sgTu1Wg+jG\n62rY/axKEYVdO9eLsDI21CUm2aC1TmIAHSHFHLHcHn+N8ONfzu+R/yjnql0q\nMIDwQ+v5Mb1QwxpcMEYNDL4zDPw2PSsaGAY1YRtokD88WgDT+OjMhAsT2/A7\ncl/aBluBQ0f18GsQhV7a3N85EGkn1/fMTsX5jcUuE1MCzCGQh1feUOzCdagt\nI9iqrBmr5qqqKTmyoo4B9yQB5pHoqFt6GheI4UcTEDxjucETdx4E9TfSuT3X\n0W+QA6twOcbqn+Br/zKnOadX60V9np3ERPz/+nC9z2y+hmVT0I8yUGczeNoT\nutM1zGAGGI15wA0v1bzoW1eudlEVFjst+FWDNRaZGsMPj9ReWGIuzIG3yI3t\nIRl87JyElp8K4Gz9hntYmNZNF8508df9zvtPIOT37mGmmi3IGumHrAauDLb8\nLTyY2+RhU6kcmiBLUIq+K/C52mtivuEuvnMVsyf+2pE9YOMBAQJKJjFEhTtD\nDy+Qao3LOtC4fT29ljIxokkZHX0fOMR0lgCZXx0XhPhPnpb4FwgAl8UNuJQM\nmmsJ\r\n=WT2c\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"services@serverless.com","name":"serverless-main"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_0.7.2_1555510346183_0.8501175192174535"},"_hasShrinkwrap":false},"0.7.2-5-ge69663a":{"name":"@serverless/platform-sdk","version":"0.7.2-5-ge69663a","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"prepare":"npm run build","build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","lint:staged":"lint-staged","setup":"./scripts/setup.sh","setup:ci":"./scripts/setup-ci.sh","test":"./scripts/test.sh","test:ci":"snyk test && ./scripts/test-ci.sh","watch":"./scripts/watch.sh"},"dependencies":{"babel-polyfill":"^6.26.0","body-parser":"^1.18.3","chalk":"^2.4.1","cors":"^2.8.4","express":"^4.16.3","is-docker":"^1.1.0","isomorphic-fetch":"^2.2.1","jwt-decode":"^2.2.0","opn":"^5.3.0","querystring":"^0.2.0","ramda":"^0.25.0","rc":"^1.2.8","source-map-support":"^0.5.5","uuid":"^3.3.2","write-file-atomic":"^2.3.0"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^21.2.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.13.0","eslint-plugin-prettier":"^2.6.1","jest-cli":"^21.2.0","lint-staged":"7.1.3","pre-commit":"^1.2.2","prettier":"^1.13.6","snyk":"^1.92.5"},"publishConfig":{"access":"public"},"lint-staged":{"*.js":["eslint --fix .","git add -A"]},"pre-commit":["lint:staged"],"gitHead":"e69663a4f9422c9ac5f01c74ab9532ca9d6f445a","readme":"# Platform SDK\n\nFunctional SDK for the Serverless Platfrom.\n\n## Project Status\n\n[![Build Status](https://travis-ci.com/serverless/platform-sdk.svg)](https://travis-ci.com/serverless/platform-sdk)\n[![license](https://img.shields.io/npm/l/@serverless/platform-sdk.svg)](https://www.npmjs.com/package/@serverless/platform-sdk)\n[![coverage](https://img.shields.io/codecov/c/github/serverless/platform-sdk.svg)](https://codecov.io/gh/serverless/platform-sdk)\n[![Known Vulnerabilities](https://snyk.io/test/github/serverless/platform-sdk/badge.svg)](https://snyk.io/test/github/serverless/platform-sdk)\n\n## Contents\n\n- [Installation](#installation)\n- [Functions](#functions)\n  - [login](#login)\n  - [refreshToken](#refreshtoken)\n  - [createAccessKey](#createaccesskey)\n  - [archiveService](#archiveservice)\n  - [getServiceUrl](#getserviceurl)\n  - [listTenants](#listtenants)\n  - [createDeployment](#createdeployment)\n  - [updateDeployment](#updatedeployment)\n  - [getApp](#getapp)\n  - [createApp](#createapp)\n\n## installation\n\n```\nnpm i -s @serverless/platform-sdk\n```\n\n## Functions\n### `login`\nOpens a browser for the user to login, along with a running server awaiting auth data once the user logs in.\n\n**Parameters**\n\nNone\n\n**Returns**\n\nPromise resolving to the following object:\n\n- `username` - `string` - dashboard username\n- `accessToken` - `string` - Auth0 access token\n- `idToken` - `string` - Auth0 idToken\n- `refreshToken` - `string` - Auth0 refreshToken\n- `expiresAt` - `string` - epoch time at which the idToken expires\n\n**Example**\n\n```js\nconst { login } = require('@serverless/platform-sdk')\n\nconst { username, accessToken, idToken, expiresAt } = await login()\n```\n\n---\n\n### `refreshToken`\nRefreshes Auth0 idToken\n\n**Parameters**\n\nrefresh token string\n\n**Returns**\n\n\nPromise resolving to the following object:\n\n- `id_token` - `string` - new Auth0 id token\n- `access_token` - `string` - new Auth0 access token\n- `expires_in` - `string` - number of seconds until token expiration\n\n**Example**\n\n```js\nconst { refreshToken } = require('@serverless/platform-sdk')\n\nconst { id_token, access_token, expires_in } = await refreshToken('some-refresh-token')\n```\n\n---\n\n### `createAccessKey`\nCreates a platform access key for the authenticated user.\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `tenant` - `string` - dashboard tenant\n- `idToken` - `string` - Auth0 idToken\n- `title` - `string` - title of the access key\n\n**Returns**\n\nPromise resolving to an `accessKey` string, that is the access key.\n\n**Example**\n\n```js\nconst { createAccessKey } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  tenant: 'eahefnawy',\n  idToken: 'abc',\n  title: 'Framework'\n}\n\nconst accessKey = await createAccessKey(data)\n```\n\n---\n\n### `archiveService`\nArchives a service in the platform.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `accessKey` - `string` - dashboard access key\n- `app` - `string` - service app\n- `name` - `string` - service name\n- `provider` - `string` - provider name\n- `region` - `string` - region name\n\n**Returns**\n\nNone\n\n**Example**\n\n```js\nconst { archiveService } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  accessKey: 'abc',\n  app: 'my-app',\n  name: 'my-service',\n  provider: 'aws',\n  region: 'us-east-1'\n}\n\nawait archiveService(data)\n```\n\n---\n\n### `getServiceUrl`\nConstructs a service url based on passed-in data.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `app` - `string` - service app\n- `name` - `string` - service name\n\n\n**Returns**\n\nThe service url string.\n\n**Example**\n\n```js\nconst { getServiceUrl } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  name: 'my-service'\n}\n\nconst serviceUrl = getServiceUrl(data)\n```\n\n---\n\n### `listTenants`\nLists the tenants for a given username\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `idToken` - `string` - auth0 user id token\n\n\n**Returns**\n\nArray of objects, each represents a single tenant data model.\n\n**Example**\n\n```js\nconst { listTenants } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  idToken: 'abc'\n}\n\nconst tenants = await listTenants(data)\n```\n\n---\n\n### `createDeploymnet`\nCreates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `accessKey` - `string` - dashboard access key\n- `files` - `object` - files which should be stored in the Platforms deployment record\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { createDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  accessKey: 'abc',\n  files: {\n    'serverless-state.json': {\n      //...snip...\n    }\n  }\n}\n\nconst { id } = await createDeployment(data)\n```\n\n---\n\n### `updateDeployment`\nUpdates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `deploymentId` - `string` - id of the previously created deployment\n- `status` - `string` - status of the deployment to update\n- `accessKey` - `string` - dashboard access key\n- `computedData` - `object` - computed data the Platform needs to generate the state items\n\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { updateDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  deploymentId: 'abc',\n  status: 'failed',\n  accessKey: 'abc',\n  computedData: {\n    // ...snip...\n  }\n}\n\nconst { id } = await updateDeployment(data)\n```\n\n---\n\n### `getApp`\nGets a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { getApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await getApp(data)\n```\n\n---\n\n### `createApp`\nCreates a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { createApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await createApp(data)\n```\n","readmeFilename":"README.md","_id":"@serverless/platform-sdk@0.7.2-5-ge69663a","_npmVersion":"6.4.1","_nodeVersion":"10.15.3","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-ieJ2DEoWjM4DqK1v9pdJXyC1uCUKCsLbYobGh4FR/ZxcRSrtOM/Z2FiWU6OulRcrAlCQY0R9huP61hjVn0UYXg==","shasum":"11040a3708b1262dc920ae30fd0f56727817adac","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-0.7.2-5-ge69663a.tgz","fileCount":69,"unpackedSize":152069,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJctz7aCRA9TVsSAnZWagAAcvAP/22Bf1mnoS/2vvMlpuGE\n2vBo0nIu0xg7qg23LUT/RDyL984Z/EVgWxg6T9WiRC7o32ZyWMgafckfDVuZ\naGsoz3xa7C2r+hilqdMbPxKui4zJpvDn3XdYf5cZIGWnUaP4RRmOn+kKEl5L\nUtPw9ZXCgkZrV/BGCz4Hq5Hc6XFK3mFutcAIq6n4qJGkWiXTuXcuh7G72olm\nyss8FCNPhw2Jf2CFh4rq/fz23mSQ49fUvkB+hfALCKOYVhmtN0RQ3kUsF8UG\nZ82ZKu5+u6ZWbHUepTEvQZEsRHD8VYOCA08vsffjotb5BsTtsmy3/bDvxV9w\nV43BjMZ6NGptBqMUQaBH4lRSbjKYM/qATgbVA+nOuD6VKyUWp6jxZ2batkZ6\nOk14hnIFy1GFY5wLfItGJrH8QZX+0HpdrYe9mjWshqye31JC7x3jCxtiIGY3\nShnHKosjxS+Lx9ExVWC7TSQru3SIDilEwANX04uyX3EEMbivL/Vfi9uhyuAq\nL7oGrKCxAVV3oFa1/SvPPvNrRlECUaG2jm249jCaRmdGm80Ku1YBYuzBtYwp\nfBE0y47yt+V7U3jbXvPjP/FrjF9jkxbXWs3D77G1Y7Ujw2/zOtKjXw9mKTAm\nYYhXpFzufgx2qJ0+Ymf3HcfrctFirJ3vqkgt3SABeVXxup6dyatcE+9cTCqp\nfoBg\r\n=F1nI\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"services@serverless.com","name":"serverless-main"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_0.7.2-5-ge69663a_1555513050096_0.29128321798784684"},"_hasShrinkwrap":false},"0.7.2-7-gb8033fb":{"name":"@serverless/platform-sdk","version":"0.7.2-7-gb8033fb","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"prepare":"npm run build","build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","lint:staged":"lint-staged","setup":"./scripts/setup.sh","setup:ci":"./scripts/setup-ci.sh","test":"./scripts/test.sh","test:ci":"snyk test && ./scripts/test-ci.sh","watch":"./scripts/watch.sh"},"dependencies":{"babel-polyfill":"^6.26.0","body-parser":"^1.18.3","chalk":"^2.4.1","cors":"^2.8.4","express":"^4.16.3","is-docker":"^1.1.0","isomorphic-fetch":"^2.2.1","jwt-decode":"^2.2.0","opn":"^5.3.0","querystring":"^0.2.0","ramda":"^0.25.0","rc":"^1.2.8","source-map-support":"^0.5.5","uuid":"^3.3.2","write-file-atomic":"^2.3.0"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^21.2.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.13.0","eslint-plugin-prettier":"^2.6.1","jest-cli":"^21.2.0","lint-staged":"7.1.3","pre-commit":"^1.2.2","prettier":"^1.13.6","snyk":"^1.92.5"},"publishConfig":{"access":"public"},"lint-staged":{"*.js":["eslint --fix .","git add -A"]},"pre-commit":["lint:staged"],"gitHead":"b8033fb5267f8f024bd9d8a4652b9db4c0b17629","readme":"# Platform SDK\n\nFunctional SDK for the Serverless Platfrom.\n\n## Project Status\n\n[![Build Status](https://travis-ci.com/serverless/platform-sdk.svg)](https://travis-ci.com/serverless/platform-sdk)\n[![license](https://img.shields.io/npm/l/@serverless/platform-sdk.svg)](https://www.npmjs.com/package/@serverless/platform-sdk)\n[![coverage](https://img.shields.io/codecov/c/github/serverless/platform-sdk.svg)](https://codecov.io/gh/serverless/platform-sdk)\n[![Known Vulnerabilities](https://snyk.io/test/github/serverless/platform-sdk/badge.svg)](https://snyk.io/test/github/serverless/platform-sdk)\n\n## Contents\n\n- [Installation](#installation)\n- [Functions](#functions)\n  - [login](#login)\n  - [refreshToken](#refreshtoken)\n  - [createAccessKey](#createaccesskey)\n  - [archiveService](#archiveservice)\n  - [getServiceUrl](#getserviceurl)\n  - [listTenants](#listtenants)\n  - [createDeployment](#createdeployment)\n  - [updateDeployment](#updatedeployment)\n  - [getApp](#getapp)\n  - [createApp](#createapp)\n\n## installation\n\n```\nnpm i -s @serverless/platform-sdk\n```\n\n## Functions\n### `login`\nOpens a browser for the user to login, along with a running server awaiting auth data once the user logs in.\n\n**Parameters**\n\nNone\n\n**Returns**\n\nPromise resolving to the following object:\n\n- `username` - `string` - dashboard username\n- `accessToken` - `string` - Auth0 access token\n- `idToken` - `string` - Auth0 idToken\n- `refreshToken` - `string` - Auth0 refreshToken\n- `expiresAt` - `string` - epoch time at which the idToken expires\n\n**Example**\n\n```js\nconst { login } = require('@serverless/platform-sdk')\n\nconst { username, accessToken, idToken, expiresAt } = await login()\n```\n\n---\n\n### `refreshToken`\nRefreshes Auth0 idToken\n\n**Parameters**\n\nrefresh token string\n\n**Returns**\n\n\nPromise resolving to the following object:\n\n- `id_token` - `string` - new Auth0 id token\n- `access_token` - `string` - new Auth0 access token\n- `expires_in` - `string` - number of seconds until token expiration\n\n**Example**\n\n```js\nconst { refreshToken } = require('@serverless/platform-sdk')\n\nconst { id_token, access_token, expires_in } = await refreshToken('some-refresh-token')\n```\n\n---\n\n### `createAccessKey`\nCreates a platform access key for the authenticated user.\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `tenant` - `string` - dashboard tenant\n- `idToken` - `string` - Auth0 idToken\n- `title` - `string` - title of the access key\n\n**Returns**\n\nPromise resolving to an `accessKey` string, that is the access key.\n\n**Example**\n\n```js\nconst { createAccessKey } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  tenant: 'eahefnawy',\n  idToken: 'abc',\n  title: 'Framework'\n}\n\nconst accessKey = await createAccessKey(data)\n```\n\n---\n\n### `archiveService`\nArchives a service in the platform.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `accessKey` - `string` - dashboard access key\n- `app` - `string` - service app\n- `name` - `string` - service name\n- `provider` - `string` - provider name\n- `region` - `string` - region name\n\n**Returns**\n\nNone\n\n**Example**\n\n```js\nconst { archiveService } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  accessKey: 'abc',\n  app: 'my-app',\n  name: 'my-service',\n  provider: 'aws',\n  region: 'us-east-1'\n}\n\nawait archiveService(data)\n```\n\n---\n\n### `getServiceUrl`\nConstructs a service url based on passed-in data.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `app` - `string` - service app\n- `name` - `string` - service name\n\n\n**Returns**\n\nThe service url string.\n\n**Example**\n\n```js\nconst { getServiceUrl } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  name: 'my-service'\n}\n\nconst serviceUrl = getServiceUrl(data)\n```\n\n---\n\n### `listTenants`\nLists the tenants for a given username\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `idToken` - `string` - auth0 user id token\n\n\n**Returns**\n\nArray of objects, each represents a single tenant data model.\n\n**Example**\n\n```js\nconst { listTenants } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  idToken: 'abc'\n}\n\nconst tenants = await listTenants(data)\n```\n\n---\n\n### `createDeploymnet`\nCreates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `accessKey` - `string` - dashboard access key\n- `files` - `object` - files which should be stored in the Platforms deployment record\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { createDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  accessKey: 'abc',\n  files: {\n    'serverless-state.json': {\n      //...snip...\n    }\n  }\n}\n\nconst { id } = await createDeployment(data)\n```\n\n---\n\n### `updateDeployment`\nUpdates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `deploymentId` - `string` - id of the previously created deployment\n- `status` - `string` - status of the deployment to update\n- `accessKey` - `string` - dashboard access key\n- `computedData` - `object` - computed data the Platform needs to generate the state items\n\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { updateDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  deploymentId: 'abc',\n  status: 'failed',\n  accessKey: 'abc',\n  computedData: {\n    // ...snip...\n  }\n}\n\nconst { id } = await updateDeployment(data)\n```\n\n---\n\n### `getApp`\nGets a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { getApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await getApp(data)\n```\n\n---\n\n### `createApp`\nCreates a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { createApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await createApp(data)\n```\n","readmeFilename":"README.md","_id":"@serverless/platform-sdk@0.7.2-7-gb8033fb","_npmVersion":"6.4.1","_nodeVersion":"10.15.3","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-X+3of0wQ1VfgEseL0CMcD0YP3KIek8Apm15KOTwD2lM+Y4Tq3SVto2HZKiH9Pn7NG68UMkZbxcO3aQ0SRIryaQ==","shasum":"30333222a820f68c187d52ef4d68331295b44d32","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-0.7.2-7-gb8033fb.tgz","fileCount":69,"unpackedSize":152097,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJct5YHCRA9TVsSAnZWagAANYEP/1MbvBWEOOCKXOtqgKx3\nM7sPzZ0yziq0KWdvhpsD7JApiKSnSUZezY9WfESVBl06bZgp4MYNVwzue5D6\napasMEECAkTjTjQU+OAVgo1GjkL8XlLgjCh2QsSbWdQPzafrGp8HsJrED9ju\nT4nEYY4mTWGqD2JVpNHAqPoVtxj2PHPLTK6n4WEvFx+GWMo/4CD8bvVrolUq\n8k9AKOBlM50QpujvbP34xl6ZSwfWSALodOss+4fQBvvB7MZLzvEQh8/8CTYh\ntu0CG6nPNTkAD77M1+0t6cUeqezoEj8Ubn2uGassh/rgwbULlBnek8o0Gcfi\nHVJjQXZysj1fjw7J3I1Fv1iMBvYj3X5igFHMhincGGJu24RJyn8sEAp3KcJQ\n+NJGWWch10FyyV1xfHx4xAWXN3DbC2nwNbq3swIhUtK8bLJ41Cl8VOH7ktoH\nOSgtXUzbya9YsOeqpFAfyg5BJ9FzpBNONrgQaWMBZp2IDMwTeLnWZhHn+fEs\nTSFPTzA6pznsu4w9GUev8ZUdngeBmazb2NuU3li2FGuHliNGTxy0DurZyDfb\njG15BGr17TAPCbQBkbFXaLoKE8rWJZcJGKahZ7F+LrPi0ZqOGtofJu36wAm2\nubJNwYxIPC+3X74vZkHv8+O8IYsSooU2OC/9b/PrvJHJh6mlbI0zhTkNMrPg\nIiPB\r\n=zpmN\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"services@serverless.com","name":"serverless-main"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_0.7.2-7-gb8033fb_1555535367055_0.922175130826068"},"_hasShrinkwrap":false},"0.7.2-9-gc7c71cb":{"name":"@serverless/platform-sdk","version":"0.7.2-9-gc7c71cb","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"prepare":"npm run build","build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","lint:staged":"lint-staged","setup":"./scripts/setup.sh","setup:ci":"./scripts/setup-ci.sh","test":"./scripts/test.sh","test:ci":"snyk test && ./scripts/test-ci.sh","watch":"./scripts/watch.sh"},"dependencies":{"babel-polyfill":"^6.26.0","body-parser":"^1.18.3","chalk":"^2.4.1","cors":"^2.8.4","express":"^4.16.3","is-docker":"^1.1.0","isomorphic-fetch":"^2.2.1","jwt-decode":"^2.2.0","opn":"^5.3.0","querystring":"^0.2.0","ramda":"^0.25.0","rc":"^1.2.8","source-map-support":"^0.5.5","uuid":"^3.3.2","write-file-atomic":"^2.3.0"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^21.2.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.13.0","eslint-plugin-prettier":"^2.6.1","jest-cli":"^21.2.0","lint-staged":"7.1.3","pre-commit":"^1.2.2","prettier":"^1.13.6","snyk":"^1.92.5"},"publishConfig":{"access":"public"},"lint-staged":{"*.js":["eslint --fix .","git add -A"]},"pre-commit":["lint:staged"],"gitHead":"c7c71cbc68eb49d161190f9ba14749d7a27a710d","readme":"# Platform SDK\n\nFunctional SDK for the Serverless Platfrom.\n\n## Project Status\n\n[![Build Status](https://travis-ci.com/serverless/platform-sdk.svg)](https://travis-ci.com/serverless/platform-sdk)\n[![license](https://img.shields.io/npm/l/@serverless/platform-sdk.svg)](https://www.npmjs.com/package/@serverless/platform-sdk)\n[![coverage](https://img.shields.io/codecov/c/github/serverless/platform-sdk.svg)](https://codecov.io/gh/serverless/platform-sdk)\n[![Known Vulnerabilities](https://snyk.io/test/github/serverless/platform-sdk/badge.svg)](https://snyk.io/test/github/serverless/platform-sdk)\n\n## Contents\n\n- [Installation](#installation)\n- [Functions](#functions)\n  - [login](#login)\n  - [refreshToken](#refreshtoken)\n  - [createAccessKey](#createaccesskey)\n  - [archiveService](#archiveservice)\n  - [getServiceUrl](#getserviceurl)\n  - [listTenants](#listtenants)\n  - [createDeployment](#createdeployment)\n  - [updateDeployment](#updatedeployment)\n  - [getApp](#getapp)\n  - [createApp](#createapp)\n\n## installation\n\n```\nnpm i -s @serverless/platform-sdk\n```\n\n## Functions\n### `login`\nOpens a browser for the user to login, along with a running server awaiting auth data once the user logs in.\n\n**Parameters**\n\nNone\n\n**Returns**\n\nPromise resolving to the following object:\n\n- `username` - `string` - dashboard username\n- `accessToken` - `string` - Auth0 access token\n- `idToken` - `string` - Auth0 idToken\n- `refreshToken` - `string` - Auth0 refreshToken\n- `expiresAt` - `string` - epoch time at which the idToken expires\n\n**Example**\n\n```js\nconst { login } = require('@serverless/platform-sdk')\n\nconst { username, accessToken, idToken, expiresAt } = await login()\n```\n\n---\n\n### `refreshToken`\nRefreshes Auth0 idToken\n\n**Parameters**\n\nrefresh token string\n\n**Returns**\n\n\nPromise resolving to the following object:\n\n- `id_token` - `string` - new Auth0 id token\n- `access_token` - `string` - new Auth0 access token\n- `expires_in` - `string` - number of seconds until token expiration\n\n**Example**\n\n```js\nconst { refreshToken } = require('@serverless/platform-sdk')\n\nconst { id_token, access_token, expires_in } = await refreshToken('some-refresh-token')\n```\n\n---\n\n### `createAccessKey`\nCreates a platform access key for the authenticated user.\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `tenant` - `string` - dashboard tenant\n- `idToken` - `string` - Auth0 idToken\n- `title` - `string` - title of the access key\n\n**Returns**\n\nPromise resolving to an `accessKey` string, that is the access key.\n\n**Example**\n\n```js\nconst { createAccessKey } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  tenant: 'eahefnawy',\n  idToken: 'abc',\n  title: 'Framework'\n}\n\nconst accessKey = await createAccessKey(data)\n```\n\n---\n\n### `archiveService`\nArchives a service in the platform.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `accessKey` - `string` - dashboard access key\n- `app` - `string` - service app\n- `name` - `string` - service name\n- `provider` - `string` - provider name\n- `region` - `string` - region name\n\n**Returns**\n\nNone\n\n**Example**\n\n```js\nconst { archiveService } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  accessKey: 'abc',\n  app: 'my-app',\n  name: 'my-service',\n  provider: 'aws',\n  region: 'us-east-1'\n}\n\nawait archiveService(data)\n```\n\n---\n\n### `getServiceUrl`\nConstructs a service url based on passed-in data.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `app` - `string` - service app\n- `name` - `string` - service name\n\n\n**Returns**\n\nThe service url string.\n\n**Example**\n\n```js\nconst { getServiceUrl } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  name: 'my-service'\n}\n\nconst serviceUrl = getServiceUrl(data)\n```\n\n---\n\n### `listTenants`\nLists the tenants for a given username\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `idToken` - `string` - auth0 user id token\n\n\n**Returns**\n\nArray of objects, each represents a single tenant data model.\n\n**Example**\n\n```js\nconst { listTenants } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  idToken: 'abc'\n}\n\nconst tenants = await listTenants(data)\n```\n\n---\n\n### `createDeploymnet`\nCreates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `accessKey` - `string` - dashboard access key\n- `files` - `object` - files which should be stored in the Platforms deployment record\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { createDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  accessKey: 'abc',\n  files: {\n    'serverless-state.json': {\n      //...snip...\n    }\n  }\n}\n\nconst { id } = await createDeployment(data)\n```\n\n---\n\n### `updateDeployment`\nUpdates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `deploymentId` - `string` - id of the previously created deployment\n- `status` - `string` - status of the deployment to update\n- `accessKey` - `string` - dashboard access key\n- `computedData` - `object` - computed data the Platform needs to generate the state items\n\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { updateDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  deploymentId: 'abc',\n  status: 'failed',\n  accessKey: 'abc',\n  computedData: {\n    // ...snip...\n  }\n}\n\nconst { id } = await updateDeployment(data)\n```\n\n---\n\n### `getApp`\nGets a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { getApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await getApp(data)\n```\n\n---\n\n### `createApp`\nCreates a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { createApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await createApp(data)\n```\n","readmeFilename":"README.md","_id":"@serverless/platform-sdk@0.7.2-9-gc7c71cb","_npmVersion":"6.4.1","_nodeVersion":"10.15.3","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-0KqDD3qNbljPpFimPxJPdcOdEsJatFZnzmIWK4yJkDzSxdZFVP6b+fS5An5k8kGEAsnXZPow/v9zzjNlEntbNg==","shasum":"33d833247a67fee72f89949188ca7646567dfbe1","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-0.7.2-9-gc7c71cb.tgz","fileCount":69,"unpackedSize":152297,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcuHzWCRA9TVsSAnZWagAA9n0P/RHHOPQXTss7++Z9Ltvk\nNWiOLPdrBrgJxgQNvu9glVK3PCIMWY/UdK+Dh6wjK4EUT3esQillDKvwXTnz\nsJgx3rG3xiEDg3r8OAul20ZXDGjluT/P32wINs6Hhv7aanYcY8cz2fydVxFY\ni3ta5fRcLGPAFOC79bG6ZYtNoRl3uugHKx8pFFQfOUGB4vI2jkI/Swu+rP66\n25AVUFbOeahP/r3cxGRj+Cb/fGBAK3Yzj97BSaHsin0sQNm9jjKuo73uosRp\nDTYeEovl8o3oQM2fRHM72hEfC0XKBBxN4NAbmC2vEXVZyevUFB9/xTS4pGSz\niFKXORMViBksimNmBRROW/APixd+Bxjwpa4o4zXy2JqL3Flug/OmxL4wZDZY\nC/BDxzT7Ko72udKaFzXtyVwHUv71xegAYWNRhcKrtxZVu3ZMDjB5fTduMYtU\n57S0DufXSyDtVm7YcDCBMZ6fXd10UxwF7X9F3VVyLdx/YXTE4+YhfRuoKPQr\nWsJO9nr2CMqPeyDzHlpbh/IEaUHcQo9QDfFCAI5n+YseGzxkanK0rSN8+LAt\nl6qv5lxRYSwhVjluYXCgC5TO3qh8s+c46jru7w3RNT976n3jgEplbbMo90WN\nikmILr4sPmf/RPXAsx+1OuJaxEO2VtZB3NurYaqgjNMZxLgSnrMxcj3zvMmB\nRwlP\r\n=Fopp\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"services@serverless.com","name":"serverless-main"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_0.7.2-9-gc7c71cb_1555594453594_0.2510043782742337"},"_hasShrinkwrap":false},"0.7.2-11-gbe810b8":{"name":"@serverless/platform-sdk","version":"0.7.2-11-gbe810b8","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"prepare":"npm run build","build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","lint:staged":"lint-staged","setup":"./scripts/setup.sh","setup:ci":"./scripts/setup-ci.sh","test":"./scripts/test.sh","test:ci":"snyk test && ./scripts/test-ci.sh","watch":"./scripts/watch.sh"},"dependencies":{"babel-polyfill":"^6.26.0","body-parser":"^1.18.3","chalk":"^2.4.1","cors":"^2.8.4","express":"^4.16.3","is-docker":"^1.1.0","isomorphic-fetch":"^2.2.1","jwt-decode":"^2.2.0","opn":"^5.3.0","querystring":"^0.2.0","ramda":"^0.25.0","rc":"^1.2.8","source-map-support":"^0.5.5","uuid":"^3.3.2","write-file-atomic":"^2.3.0"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^21.2.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.13.0","eslint-plugin-prettier":"^2.6.1","jest-cli":"^21.2.0","lint-staged":"7.1.3","pre-commit":"^1.2.2","prettier":"^1.13.6","snyk":"^1.92.5"},"publishConfig":{"access":"public"},"lint-staged":{"*.js":["eslint --fix .","git add -A"]},"pre-commit":["lint:staged"],"gitHead":"be810b8c9c55518d375c660b10602e0dc5c09c55","readme":"# Platform SDK\n\nFunctional SDK for the Serverless Platfrom.\n\n## Project Status\n\n[![Build Status](https://travis-ci.com/serverless/platform-sdk.svg)](https://travis-ci.com/serverless/platform-sdk)\n[![license](https://img.shields.io/npm/l/@serverless/platform-sdk.svg)](https://www.npmjs.com/package/@serverless/platform-sdk)\n[![coverage](https://img.shields.io/codecov/c/github/serverless/platform-sdk.svg)](https://codecov.io/gh/serverless/platform-sdk)\n[![Known Vulnerabilities](https://snyk.io/test/github/serverless/platform-sdk/badge.svg)](https://snyk.io/test/github/serverless/platform-sdk)\n\n## Contents\n\n- [Installation](#installation)\n- [Functions](#functions)\n  - [login](#login)\n  - [refreshToken](#refreshtoken)\n  - [createAccessKey](#createaccesskey)\n  - [archiveService](#archiveservice)\n  - [getServiceUrl](#getserviceurl)\n  - [listTenants](#listtenants)\n  - [createDeployment](#createdeployment)\n  - [updateDeployment](#updatedeployment)\n  - [getApp](#getapp)\n  - [createApp](#createapp)\n\n## installation\n\n```\nnpm i -s @serverless/platform-sdk\n```\n\n## Functions\n### `login`\nOpens a browser for the user to login, along with a running server awaiting auth data once the user logs in.\n\n**Parameters**\n\nNone\n\n**Returns**\n\nPromise resolving to the following object:\n\n- `username` - `string` - dashboard username\n- `accessToken` - `string` - Auth0 access token\n- `idToken` - `string` - Auth0 idToken\n- `refreshToken` - `string` - Auth0 refreshToken\n- `expiresAt` - `string` - epoch time at which the idToken expires\n\n**Example**\n\n```js\nconst { login } = require('@serverless/platform-sdk')\n\nconst { username, accessToken, idToken, expiresAt } = await login()\n```\n\n---\n\n### `refreshToken`\nRefreshes Auth0 idToken\n\n**Parameters**\n\nrefresh token string\n\n**Returns**\n\n\nPromise resolving to the following object:\n\n- `id_token` - `string` - new Auth0 id token\n- `access_token` - `string` - new Auth0 access token\n- `expires_in` - `string` - number of seconds until token expiration\n\n**Example**\n\n```js\nconst { refreshToken } = require('@serverless/platform-sdk')\n\nconst { id_token, access_token, expires_in } = await refreshToken('some-refresh-token')\n```\n\n---\n\n### `createAccessKey`\nCreates a platform access key for the authenticated user.\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `tenant` - `string` - dashboard tenant\n- `idToken` - `string` - Auth0 idToken\n- `title` - `string` - title of the access key\n\n**Returns**\n\nPromise resolving to an `accessKey` string, that is the access key.\n\n**Example**\n\n```js\nconst { createAccessKey } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  tenant: 'eahefnawy',\n  idToken: 'abc',\n  title: 'Framework'\n}\n\nconst accessKey = await createAccessKey(data)\n```\n\n---\n\n### `archiveService`\nArchives a service in the platform.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `accessKey` - `string` - dashboard access key\n- `app` - `string` - service app\n- `name` - `string` - service name\n- `provider` - `string` - provider name\n- `region` - `string` - region name\n\n**Returns**\n\nNone\n\n**Example**\n\n```js\nconst { archiveService } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  accessKey: 'abc',\n  app: 'my-app',\n  name: 'my-service',\n  provider: 'aws',\n  region: 'us-east-1'\n}\n\nawait archiveService(data)\n```\n\n---\n\n### `getServiceUrl`\nConstructs a service url based on passed-in data.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `app` - `string` - service app\n- `name` - `string` - service name\n\n\n**Returns**\n\nThe service url string.\n\n**Example**\n\n```js\nconst { getServiceUrl } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  name: 'my-service'\n}\n\nconst serviceUrl = getServiceUrl(data)\n```\n\n---\n\n### `listTenants`\nLists the tenants for a given username\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `idToken` - `string` - auth0 user id token\n\n\n**Returns**\n\nArray of objects, each represents a single tenant data model.\n\n**Example**\n\n```js\nconst { listTenants } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  idToken: 'abc'\n}\n\nconst tenants = await listTenants(data)\n```\n\n---\n\n### `createDeploymnet`\nCreates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `accessKey` - `string` - dashboard access key\n- `files` - `object` - files which should be stored in the Platforms deployment record\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { createDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  accessKey: 'abc',\n  files: {\n    'serverless-state.json': {\n      //...snip...\n    }\n  }\n}\n\nconst { id } = await createDeployment(data)\n```\n\n---\n\n### `updateDeployment`\nUpdates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `deploymentId` - `string` - id of the previously created deployment\n- `status` - `string` - status of the deployment to update\n- `accessKey` - `string` - dashboard access key\n- `computedData` - `object` - computed data the Platform needs to generate the state items\n\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { updateDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  deploymentId: 'abc',\n  status: 'failed',\n  accessKey: 'abc',\n  computedData: {\n    // ...snip...\n  }\n}\n\nconst { id } = await updateDeployment(data)\n```\n\n---\n\n### `getApp`\nGets a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { getApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await getApp(data)\n```\n\n---\n\n### `createApp`\nCreates a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { createApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await createApp(data)\n```\n","readmeFilename":"README.md","_id":"@serverless/platform-sdk@0.7.2-11-gbe810b8","_npmVersion":"6.4.1","_nodeVersion":"10.15.3","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-HyhIygAWJRNqVZlPLi0qz2MMcjY+A26ZMYikrOzDRx66baAzQoFDChqV2bI8QtsNRj9g2b6h/PJgeXcfsUai4w==","shasum":"e13020379768bcb92245b9d8b6801429cc5939f8","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-0.7.2-11-gbe810b8.tgz","fileCount":69,"unpackedSize":152288,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcuJsKCRA9TVsSAnZWagAA5mgP/iKC85N5bgG42FFEGsJG\n0xFLJnispxKdR98sufTN93f4ynMr+2Eghw53A4MSQE0+/PwkGE0zYBaemhpL\nDsHQ9Svt1Es+xgJc5B1640usKUVBlVXDPdm3lQkcEzKlTMP78OmxnX30SUXH\nMp/FrYvgTUBc68h2R1xvoP6FgEfgJICbexzYIfSkcchad9x1LTIy0UuBKW07\ndjPKq0my6T06NgZhxGj93Rx1ce9cMEYSkOjvmY60HEHuKScIvwbvmRVtEfLp\n9stxhJ5qdGNSsGeMXQV3xtmT0eZuQH7xS3ZFsP35jg7tGqdajLMZ1nA4Zhfi\nh6bLhvVm7kgJg00yAUcT4Xvu4+wM9oxEnT7qLtvr/2EC/Vtn4JldAsUlfCPT\nS/WsH+iWPq22Bs40GITe48ML4X3fQbyeoqJiSPeQTBmzeNn0HuUMrA/fyy5E\nG5VfDU7sBLhWRlppxoabXENIUQGH+Khy3pxfV9qw+8/2ZPPTO3tTferfHCnH\ndlvhLRCpMGUfpTphsQfNF82PDuuERos5RJtttAyKGJ1+LeYGg2WHSqGXsKuD\n8A/Mb+1pPmAf0oDOt1zCuRlawWZ+W//Z7tt3ejxNbCzW20/Yn6XXOKu94Awf\nlHTegT/V0CRb+3xgU/FCOynnBSzcN1YouBUTE285/WrLgRuQ5BqxhQUu8bKi\niI5N\r\n=hn0F\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"services@serverless.com","name":"serverless-main"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_0.7.2-11-gbe810b8_1555602185562_0.7528257248177805"},"_hasShrinkwrap":false},"0.7.2-13-gb9afd32":{"name":"@serverless/platform-sdk","version":"0.7.2-13-gb9afd32","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"prepare":"npm run build","build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","lint:staged":"lint-staged","setup":"./scripts/setup.sh","setup:ci":"./scripts/setup-ci.sh","test":"./scripts/test.sh","test:ci":"snyk test && ./scripts/test-ci.sh","watch":"./scripts/watch.sh"},"dependencies":{"babel-polyfill":"^6.26.0","body-parser":"^1.18.3","chalk":"^2.4.1","cors":"^2.8.4","express":"^4.16.3","is-docker":"^1.1.0","isomorphic-fetch":"^2.2.1","jwt-decode":"^2.2.0","opn":"^5.3.0","querystring":"^0.2.0","ramda":"^0.25.0","rc":"^1.2.8","source-map-support":"^0.5.5","uuid":"^3.3.2","write-file-atomic":"^2.3.0"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^21.2.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.13.0","eslint-plugin-prettier":"^2.6.1","jest-cli":"^21.2.0","lint-staged":"7.1.3","pre-commit":"^1.2.2","prettier":"^1.13.6","snyk":"^1.92.5"},"publishConfig":{"access":"public"},"lint-staged":{"*.js":["eslint --fix .","git add -A"]},"pre-commit":["lint:staged"],"gitHead":"b9afd32af2cb1f42bbc1ebffaeddb60f294d9efc","readme":"# Platform SDK\n\nFunctional SDK for the Serverless Platfrom.\n\n## Project Status\n\n[![Build Status](https://travis-ci.com/serverless/platform-sdk.svg)](https://travis-ci.com/serverless/platform-sdk)\n[![license](https://img.shields.io/npm/l/@serverless/platform-sdk.svg)](https://www.npmjs.com/package/@serverless/platform-sdk)\n[![coverage](https://img.shields.io/codecov/c/github/serverless/platform-sdk.svg)](https://codecov.io/gh/serverless/platform-sdk)\n[![Known Vulnerabilities](https://snyk.io/test/github/serverless/platform-sdk/badge.svg)](https://snyk.io/test/github/serverless/platform-sdk)\n\n## Contents\n\n- [Installation](#installation)\n- [Functions](#functions)\n  - [login](#login)\n  - [refreshToken](#refreshtoken)\n  - [createAccessKey](#createaccesskey)\n  - [archiveService](#archiveservice)\n  - [getServiceUrl](#getserviceurl)\n  - [listTenants](#listtenants)\n  - [createDeployment](#createdeployment)\n  - [updateDeployment](#updatedeployment)\n  - [getApp](#getapp)\n  - [createApp](#createapp)\n\n## installation\n\n```\nnpm i -s @serverless/platform-sdk\n```\n\n## Functions\n### `login`\nOpens a browser for the user to login, along with a running server awaiting auth data once the user logs in.\n\n**Parameters**\n\nNone\n\n**Returns**\n\nPromise resolving to the following object:\n\n- `username` - `string` - dashboard username\n- `accessToken` - `string` - Auth0 access token\n- `idToken` - `string` - Auth0 idToken\n- `refreshToken` - `string` - Auth0 refreshToken\n- `expiresAt` - `string` - epoch time at which the idToken expires\n\n**Example**\n\n```js\nconst { login } = require('@serverless/platform-sdk')\n\nconst { username, accessToken, idToken, expiresAt } = await login()\n```\n\n---\n\n### `refreshToken`\nRefreshes Auth0 idToken\n\n**Parameters**\n\nrefresh token string\n\n**Returns**\n\n\nPromise resolving to the following object:\n\n- `id_token` - `string` - new Auth0 id token\n- `access_token` - `string` - new Auth0 access token\n- `expires_in` - `string` - number of seconds until token expiration\n\n**Example**\n\n```js\nconst { refreshToken } = require('@serverless/platform-sdk')\n\nconst { id_token, access_token, expires_in } = await refreshToken('some-refresh-token')\n```\n\n---\n\n### `createAccessKey`\nCreates a platform access key for the authenticated user.\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `tenant` - `string` - dashboard tenant\n- `idToken` - `string` - Auth0 idToken\n- `title` - `string` - title of the access key\n\n**Returns**\n\nPromise resolving to an `accessKey` string, that is the access key.\n\n**Example**\n\n```js\nconst { createAccessKey } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  tenant: 'eahefnawy',\n  idToken: 'abc',\n  title: 'Framework'\n}\n\nconst accessKey = await createAccessKey(data)\n```\n\n---\n\n### `archiveService`\nArchives a service in the platform.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `accessKey` - `string` - dashboard access key\n- `app` - `string` - service app\n- `name` - `string` - service name\n- `provider` - `string` - provider name\n- `region` - `string` - region name\n\n**Returns**\n\nNone\n\n**Example**\n\n```js\nconst { archiveService } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  accessKey: 'abc',\n  app: 'my-app',\n  name: 'my-service',\n  provider: 'aws',\n  region: 'us-east-1'\n}\n\nawait archiveService(data)\n```\n\n---\n\n### `getServiceUrl`\nConstructs a service url based on passed-in data.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `app` - `string` - service app\n- `name` - `string` - service name\n\n\n**Returns**\n\nThe service url string.\n\n**Example**\n\n```js\nconst { getServiceUrl } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  name: 'my-service'\n}\n\nconst serviceUrl = getServiceUrl(data)\n```\n\n---\n\n### `listTenants`\nLists the tenants for a given username\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `idToken` - `string` - auth0 user id token\n\n\n**Returns**\n\nArray of objects, each represents a single tenant data model.\n\n**Example**\n\n```js\nconst { listTenants } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  idToken: 'abc'\n}\n\nconst tenants = await listTenants(data)\n```\n\n---\n\n### `createDeploymnet`\nCreates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `accessKey` - `string` - dashboard access key\n- `files` - `object` - files which should be stored in the Platforms deployment record\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { createDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  accessKey: 'abc',\n  files: {\n    'serverless-state.json': {\n      //...snip...\n    }\n  }\n}\n\nconst { id } = await createDeployment(data)\n```\n\n---\n\n### `updateDeployment`\nUpdates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `deploymentId` - `string` - id of the previously created deployment\n- `status` - `string` - status of the deployment to update\n- `accessKey` - `string` - dashboard access key\n- `computedData` - `object` - computed data the Platform needs to generate the state items\n\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { updateDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  deploymentId: 'abc',\n  status: 'failed',\n  accessKey: 'abc',\n  computedData: {\n    // ...snip...\n  }\n}\n\nconst { id } = await updateDeployment(data)\n```\n\n---\n\n### `getApp`\nGets a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { getApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await getApp(data)\n```\n\n---\n\n### `createApp`\nCreates a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { createApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await createApp(data)\n```\n","readmeFilename":"README.md","_id":"@serverless/platform-sdk@0.7.2-13-gb9afd32","_npmVersion":"6.4.1","_nodeVersion":"10.15.3","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-18AMXJDjiVsZIzUZO4vmqBsc7S2qE5I6pARnGIRkOt0S3J5F0+eawSml7s+iEay8a9n0NRqNBEPxo4fFGbWKKQ==","shasum":"73ad2a99784ab7b8806f1429715d4e893b397983","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-0.7.2-13-gb9afd32.tgz","fileCount":69,"unpackedSize":152288,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcyGcOCRA9TVsSAnZWagAAZ+0P/0LK4tLhqA8HKenevK77\n2uMqSAD2XNc6rj6s07IJcyDOWCc0ct5wscJ8uAB+iv3IhgHwpGFRHWWp3G10\nhQzYFhHNo4MR4/imiWmXNWZADKM2njsFsyxoyokkxfDV/j500u2fEgNUOiHc\n/vtoTz3BKjWYv/6KnV12F85qQdO9MMYj8N2f3Hh8TIm+OtRQ+Nn7WE26lvBv\na29IroFbMXXf/u/ak9JnHwayDJzj1Y6JyKVGyxJMvUyFlNMtNRTd/x0iO8dE\nFF0DXVSZk3PSaxvQ/qNHchF/LOwpNRXYD+vLy1SqfGDssS+8rsDFpOnCF3FW\nMN13HpD7A7csBb2PmQkMc7QSzqN74bWVX2WQkT9EsLAxWaLo4xPd4s1XaCp9\npnAGlCMssNyRFF3/6J83O1ST4JlOxX2w/qLJYqqCmFDnb3GjKPGX1cRPkDUG\nNKRDsjHl7RL0Oj/tInq/E3UyrG6yFpzna632X/v/Lr7Il9VFxeZbFr5KNFyO\nc0P4GgYLN0l5EolsYUSUJyC0Fmde1H7JFcEJ5gnZY/o07fVOXPKx+TCf81W1\nFPHzc129xcdVutZPatpC+wQ4TCAkDPbRmAFARJ7025erOyFR+LHs2ZhmPfvD\n8brJWTLA2Zznc91XcccirKtO0lFw+Oo4V7cnfsEPT2ouUxlpAoWgQGT6d+Ah\nRAT3\r\n=dnoI\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"services@serverless.com","name":"serverless-main"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_0.7.2-13-gb9afd32_1556637453317_0.008898815096068047"},"_hasShrinkwrap":false},"0.7.3":{"name":"@serverless/platform-sdk","version":"0.7.3","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"prepare":"npm run build","build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","lint:staged":"lint-staged","setup":"./scripts/setup.sh","setup:ci":"./scripts/setup-ci.sh","test":"./scripts/test.sh","test:ci":"snyk test && ./scripts/test-ci.sh","watch":"./scripts/watch.sh"},"dependencies":{"babel-polyfill":"^6.26.0","body-parser":"^1.18.3","chalk":"^2.4.1","cors":"^2.8.4","express":"^4.16.3","is-docker":"^1.1.0","isomorphic-fetch":"^2.2.1","jwt-decode":"^2.2.0","opn":"^5.3.0","querystring":"^0.2.0","ramda":"^0.25.0","rc":"^1.2.8","source-map-support":"^0.5.5","uuid":"^3.3.2","write-file-atomic":"^2.3.0"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^21.2.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.13.0","eslint-plugin-prettier":"^2.6.1","jest-cli":"^21.2.0","lint-staged":"7.1.3","pre-commit":"^1.2.2","prettier":"^1.13.6","snyk":"^1.92.5"},"publishConfig":{"access":"public"},"lint-staged":{"*.js":["eslint --fix .","git add -A"]},"pre-commit":["lint:staged"],"gitHead":"b9afd32af2cb1f42bbc1ebffaeddb60f294d9efc","_id":"@serverless/platform-sdk@0.7.3","_npmVersion":"6.4.1","_nodeVersion":"10.15.3","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-iqVbfuA+2GSkzXinaHL8m/a0fTP70nHTCrZkbsZVIQ2FclBlIs2xVznI0GtI0TZ7jaypBq44yeModYmVd5SkYg==","shasum":"27fb979a00f74bdbf1122646cbb0926402fa3f35","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-0.7.3.tgz","fileCount":69,"unpackedSize":152276,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcyGgZCRA9TVsSAnZWagAAhZQQAJ4iMT6CKYVSAZBaE4xQ\nC3nYLCfFIAeBhwaiN0ClBghmAKyPl1+gN8+Kmy6NdAlj4vIEfNV7C6ehi2bh\n7rcePM71NH0QrMYHiRKw4lwFviNDdy0BdD0wqRDeqAYGjntCECHqgOPABKU7\n8m+P88N1jzV83xEvN6DdxLVy2PUeeP2AcVJUm8oCxYiN55HLIrC3S7tQ72OM\ndPmEJf46uGxE3pli3MJsU+ckivo1SKj1ywxkz1geT30C93BSMeD42AZpty4/\ncrDPZLSTOEtGnXnZI9oQ+CG1q0zFROlDhxv9WzTHkzvd/ceJE5OtlXa+YT8v\nNDSklrSlQSq0teIYnaKdJqL9fJwu2O5raBSd15LRs7UxFFHbnutyyKxmG8zm\nbYSjasvqnq8taYKhG/G9g4G9GwW2oVwcvAUuV6SM1uiSEhEPkMmnuJCR3PCT\nLEQiroZKp0ke+WazdsEKwxDcAgX4nLvz79MYGByBC4VfnvtXj1MhOcQtdeDr\nLSpoWcKmDHBM/WwtkJhlJp6UgjBuVp1zZpzEd5xk/DK8p99Wjz6o4WHaQdyj\nNuVnwJG/fWmQWXyS10ZthtHDTvPrA6p763Bs7B9GpiW8I9GldZxlSBV4gQ1T\n1yRnG29LqlJw+uWZqzhcFwTZoR9Feu/sGfYFheiZMk0TG6w4yEL5lCMZ2VEV\nspwk\r\n=LWkJ\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"services@serverless.com","name":"serverless-main"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_0.7.3_1556637720462_0.22965143268794663"},"_hasShrinkwrap":false},"0.7.3-8-gf42d72a":{"name":"@serverless/platform-sdk","version":"0.7.3-8-gf42d72a","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"prepare":"npm run build","build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","lint:staged":"lint-staged","setup":"./scripts/setup.sh","setup:ci":"./scripts/setup-ci.sh","test":"./scripts/test.sh","test:ci":"snyk test && ./scripts/test-ci.sh","watch":"./scripts/watch.sh"},"dependencies":{"babel-polyfill":"^6.26.0","body-parser":"^1.19.0","chalk":"^2.4.1","cors":"^2.8.4","express":"^4.16.3","is-docker":"^1.1.0","isomorphic-fetch":"^2.2.1","jwt-decode":"^2.2.0","opn":"^5.5.0","querystring":"^0.2.0","ramda":"^0.25.0","rc":"^1.2.8","source-map-support":"^0.5.12","uuid":"^3.3.2","write-file-atomic":"^2.4.2"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^21.2.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.17.2","eslint-plugin-prettier":"^2.6.1","jest-cli":"^21.2.0","lint-staged":"7.1.3","pre-commit":"^1.2.2","prettier":"^1.17.1","snyk":"^1.163.3"},"publishConfig":{"access":"public"},"lint-staged":{"*.js":["eslint --fix .","git add -A"]},"pre-commit":["lint:staged"],"gitHead":"f42d72a0730b5e4bf2d19b5031b831bda4aef7e1","readme":"# Platform SDK\n\nFunctional SDK for the Serverless Platfrom.\n\n## Project Status\n\n[![Build Status](https://travis-ci.com/serverless/platform-sdk.svg)](https://travis-ci.com/serverless/platform-sdk)\n[![license](https://img.shields.io/npm/l/@serverless/platform-sdk.svg)](https://www.npmjs.com/package/@serverless/platform-sdk)\n[![coverage](https://img.shields.io/codecov/c/github/serverless/platform-sdk.svg)](https://codecov.io/gh/serverless/platform-sdk)\n[![Known Vulnerabilities](https://snyk.io/test/github/serverless/platform-sdk/badge.svg)](https://snyk.io/test/github/serverless/platform-sdk)\n\n## Contents\n\n- [Installation](#installation)\n- [Functions](#functions)\n  - [login](#login)\n  - [refreshToken](#refreshtoken)\n  - [createAccessKey](#createaccesskey)\n  - [archiveService](#archiveservice)\n  - [getServiceUrl](#getserviceurl)\n  - [listTenants](#listtenants)\n  - [createDeployment](#createdeployment)\n  - [updateDeployment](#updatedeployment)\n  - [getApp](#getapp)\n  - [createApp](#createapp)\n\n## installation\n\n```\nnpm i -s @serverless/platform-sdk\n```\n\n## Functions\n### `login`\nOpens a browser for the user to login, along with a running server awaiting auth data once the user logs in.\n\n**Parameters**\n\nNone\n\n**Returns**\n\nPromise resolving to the following object:\n\n- `username` - `string` - dashboard username\n- `accessToken` - `string` - Auth0 access token\n- `idToken` - `string` - Auth0 idToken\n- `refreshToken` - `string` - Auth0 refreshToken\n- `expiresAt` - `string` - epoch time at which the idToken expires\n\n**Example**\n\n```js\nconst { login } = require('@serverless/platform-sdk')\n\nconst { username, accessToken, idToken, expiresAt } = await login()\n```\n\n---\n\n### `refreshToken`\nRefreshes Auth0 idToken\n\n**Parameters**\n\nrefresh token string\n\n**Returns**\n\n\nPromise resolving to the following object:\n\n- `id_token` - `string` - new Auth0 id token\n- `access_token` - `string` - new Auth0 access token\n- `expires_in` - `string` - number of seconds until token expiration\n\n**Example**\n\n```js\nconst { refreshToken } = require('@serverless/platform-sdk')\n\nconst { id_token, access_token, expires_in } = await refreshToken('some-refresh-token')\n```\n\n---\n\n### `createAccessKey`\nCreates a platform access key for the authenticated user.\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `tenant` - `string` - dashboard tenant\n- `idToken` - `string` - Auth0 idToken\n- `title` - `string` - title of the access key\n\n**Returns**\n\nPromise resolving to an `accessKey` string, that is the access key.\n\n**Example**\n\n```js\nconst { createAccessKey } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  tenant: 'eahefnawy',\n  idToken: 'abc',\n  title: 'Framework'\n}\n\nconst accessKey = await createAccessKey(data)\n```\n\n---\n\n### `archiveService`\nArchives a service in the platform.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `accessKey` - `string` - dashboard access key\n- `app` - `string` - service app\n- `name` - `string` - service name\n- `provider` - `string` - provider name\n- `region` - `string` - region name\n\n**Returns**\n\nNone\n\n**Example**\n\n```js\nconst { archiveService } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  accessKey: 'abc',\n  app: 'my-app',\n  name: 'my-service',\n  provider: 'aws',\n  region: 'us-east-1'\n}\n\nawait archiveService(data)\n```\n\n---\n\n### `getServiceUrl`\nConstructs a service url based on passed-in data.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `app` - `string` - service app\n- `name` - `string` - service name\n\n\n**Returns**\n\nThe service url string.\n\n**Example**\n\n```js\nconst { getServiceUrl } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  name: 'my-service'\n}\n\nconst serviceUrl = getServiceUrl(data)\n```\n\n---\n\n### `listTenants`\nLists the tenants for a given username\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `idToken` - `string` - auth0 user id token\n\n\n**Returns**\n\nArray of objects, each represents a single tenant data model.\n\n**Example**\n\n```js\nconst { listTenants } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  idToken: 'abc'\n}\n\nconst tenants = await listTenants(data)\n```\n\n---\n\n### `createDeploymnet`\nCreates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `accessKey` - `string` - dashboard access key\n- `files` - `object` - files which should be stored in the Platforms deployment record\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { createDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  accessKey: 'abc',\n  files: {\n    'serverless-state.json': {\n      //...snip...\n    }\n  }\n}\n\nconst { id } = await createDeployment(data)\n```\n\n---\n\n### `updateDeployment`\nUpdates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `deploymentId` - `string` - id of the previously created deployment\n- `status` - `string` - status of the deployment to update\n- `accessKey` - `string` - dashboard access key\n- `computedData` - `object` - computed data the Platform needs to generate the state items\n\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { updateDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  deploymentId: 'abc',\n  status: 'failed',\n  accessKey: 'abc',\n  computedData: {\n    // ...snip...\n  }\n}\n\nconst { id } = await updateDeployment(data)\n```\n\n---\n\n### `getApp`\nGets a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { getApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await getApp(data)\n```\n\n---\n\n### `createApp`\nCreates a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { createApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await createApp(data)\n```\n","readmeFilename":"README.md","_id":"@serverless/platform-sdk@0.7.3-8-gf42d72a","_npmVersion":"6.4.1","_nodeVersion":"10.15.3","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-Xco+/7PvRB4X4Qk8Itk2ex5uvcrj4BQYnq9uBOInRqBbUdCffHa8OCeNMHFqMa57qPNwcfFhSjiCZMxwlLdJ+g==","shasum":"718c4800101008ccb8660b696575e287f92dd1c4","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-0.7.3-8-gf42d72a.tgz","fileCount":73,"unpackedSize":157076,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc2uBKCRA9TVsSAnZWagAAT7cP/1Ujq7BvM0YsAkZqTMSQ\n82cM9hNlWP4RVtNwj8fVSD8d+5SZN6qsWRKngzphLw1J1EjTHXGxVK67JuF8\nArBmnOuq25J0LrdEAv1+LrlJekMB6qisuB/T7cMPwakXVjgaqbYqUvBPH6rk\nepiBtkRnUruf+M5lRxgPT0PkgOIxtA/LCtsd+fS71GZYHYXLp6F4x62O1gRV\nNwbEfdDqbBNTEheKVmCCCoD8ZWfREY/WQKkgHyDGDdX8Wwu686Zt2/ssbt+c\nwM0Y5EpDx9fWOBdFP1o0a69OOl6/y71fm+pKkL461UdOOKzTtn9YAsu71/fM\nsLsWgCDzRQyaA6HzNAQSJWQMxagDKdeLJ4JBoYq4hVFtMDFmldoX7qEz2RVz\n3BAOv9e9YGuJiBfrYbIqc7wj8z7hefQqxLL2uvierxqxAVwpm0BXCGK0dQFp\nt4HuVwFHvR/rHyCMmW95iPo8Fo8FQhPX3bNzkFpA8gyh+AbwMEwikRVnnmcQ\npPXpb1UE44yV1HRElDd2855pu7EdLszccES0LynppCk3IMmi9g/hrDBYli5D\nXRGVUkdl+mIR2hijf2njU9Fr6/3be0F8NCzzpPbvyds/xasv4w0ztGNSjBLC\nc0dJsj4vjLdnQF3h6y2bjQ/SMbMc7iOzhq8t6xL1OI5NSZ+ocLc9MeLRMn7C\n35+Q\r\n=brXQ\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"services@serverless.com","name":"serverless-main"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_0.7.3-8-gf42d72a_1557848137099_0.9757007209753281"},"_hasShrinkwrap":false},"0.7.3-10-gf8af46c":{"name":"@serverless/platform-sdk","version":"0.7.3-10-gf8af46c","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"prepare":"npm run build","build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","lint:staged":"lint-staged","setup":"./scripts/setup.sh","setup:ci":"./scripts/setup-ci.sh","test":"./scripts/test.sh","test:ci":"snyk test && ./scripts/test-ci.sh","watch":"./scripts/watch.sh"},"dependencies":{"babel-polyfill":"^6.26.0","body-parser":"^1.19.0","chalk":"^2.4.1","cors":"^2.8.4","express":"^4.16.3","is-docker":"^1.1.0","isomorphic-fetch":"^2.2.1","jwt-decode":"^2.2.0","opn":"^5.5.0","querystring":"^0.2.0","ramda":"^0.25.0","rc":"^1.2.8","source-map-support":"^0.5.12","uuid":"^3.3.2","write-file-atomic":"^2.4.2"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^21.2.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.17.2","eslint-plugin-prettier":"^2.6.1","jest-cli":"^21.2.0","lint-staged":"7.1.3","pre-commit":"^1.2.2","prettier":"^1.17.1","snyk":"^1.163.3"},"publishConfig":{"access":"public"},"lint-staged":{"*.js":["eslint --fix .","git add -A"]},"pre-commit":["lint:staged"],"gitHead":"f8af46ca38cb5e321c30ce7b76a15e10f0320c8c","readme":"# Platform SDK\n\nFunctional SDK for the Serverless Platfrom.\n\n## Project Status\n\n[![Build Status](https://travis-ci.com/serverless/platform-sdk.svg)](https://travis-ci.com/serverless/platform-sdk)\n[![license](https://img.shields.io/npm/l/@serverless/platform-sdk.svg)](https://www.npmjs.com/package/@serverless/platform-sdk)\n[![coverage](https://img.shields.io/codecov/c/github/serverless/platform-sdk.svg)](https://codecov.io/gh/serverless/platform-sdk)\n[![Known Vulnerabilities](https://snyk.io/test/github/serverless/platform-sdk/badge.svg)](https://snyk.io/test/github/serverless/platform-sdk)\n\n## Contents\n\n- [Installation](#installation)\n- [Functions](#functions)\n  - [login](#login)\n  - [refreshToken](#refreshtoken)\n  - [createAccessKey](#createaccesskey)\n  - [archiveService](#archiveservice)\n  - [getServiceUrl](#getserviceurl)\n  - [listTenants](#listtenants)\n  - [createDeployment](#createdeployment)\n  - [updateDeployment](#updatedeployment)\n  - [getApp](#getapp)\n  - [createApp](#createapp)\n\n## installation\n\n```\nnpm i -s @serverless/platform-sdk\n```\n\n## Functions\n### `login`\nOpens a browser for the user to login, along with a running server awaiting auth data once the user logs in.\n\n**Parameters**\n\nNone\n\n**Returns**\n\nPromise resolving to the following object:\n\n- `username` - `string` - dashboard username\n- `accessToken` - `string` - Auth0 access token\n- `idToken` - `string` - Auth0 idToken\n- `refreshToken` - `string` - Auth0 refreshToken\n- `expiresAt` - `string` - epoch time at which the idToken expires\n\n**Example**\n\n```js\nconst { login } = require('@serverless/platform-sdk')\n\nconst { username, accessToken, idToken, expiresAt } = await login()\n```\n\n---\n\n### `refreshToken`\nRefreshes Auth0 idToken\n\n**Parameters**\n\nrefresh token string\n\n**Returns**\n\n\nPromise resolving to the following object:\n\n- `id_token` - `string` - new Auth0 id token\n- `access_token` - `string` - new Auth0 access token\n- `expires_in` - `string` - number of seconds until token expiration\n\n**Example**\n\n```js\nconst { refreshToken } = require('@serverless/platform-sdk')\n\nconst { id_token, access_token, expires_in } = await refreshToken('some-refresh-token')\n```\n\n---\n\n### `createAccessKey`\nCreates a platform access key for the authenticated user.\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `tenant` - `string` - dashboard tenant\n- `idToken` - `string` - Auth0 idToken\n- `title` - `string` - title of the access key\n\n**Returns**\n\nPromise resolving to an `accessKey` string, that is the access key.\n\n**Example**\n\n```js\nconst { createAccessKey } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  tenant: 'eahefnawy',\n  idToken: 'abc',\n  title: 'Framework'\n}\n\nconst accessKey = await createAccessKey(data)\n```\n\n---\n\n### `archiveService`\nArchives a service in the platform.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `accessKey` - `string` - dashboard access key\n- `app` - `string` - service app\n- `name` - `string` - service name\n- `provider` - `string` - provider name\n- `region` - `string` - region name\n\n**Returns**\n\nNone\n\n**Example**\n\n```js\nconst { archiveService } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  accessKey: 'abc',\n  app: 'my-app',\n  name: 'my-service',\n  provider: 'aws',\n  region: 'us-east-1'\n}\n\nawait archiveService(data)\n```\n\n---\n\n### `getServiceUrl`\nConstructs a service url based on passed-in data.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `app` - `string` - service app\n- `name` - `string` - service name\n\n\n**Returns**\n\nThe service url string.\n\n**Example**\n\n```js\nconst { getServiceUrl } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  name: 'my-service'\n}\n\nconst serviceUrl = getServiceUrl(data)\n```\n\n---\n\n### `listTenants`\nLists the tenants for a given username\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `idToken` - `string` - auth0 user id token\n\n\n**Returns**\n\nArray of objects, each represents a single tenant data model.\n\n**Example**\n\n```js\nconst { listTenants } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  idToken: 'abc'\n}\n\nconst tenants = await listTenants(data)\n```\n\n---\n\n### `createDeploymnet`\nCreates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `accessKey` - `string` - dashboard access key\n- `files` - `object` - files which should be stored in the Platforms deployment record\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { createDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  accessKey: 'abc',\n  files: {\n    'serverless-state.json': {\n      //...snip...\n    }\n  }\n}\n\nconst { id } = await createDeployment(data)\n```\n\n---\n\n### `updateDeployment`\nUpdates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `deploymentId` - `string` - id of the previously created deployment\n- `status` - `string` - status of the deployment to update\n- `accessKey` - `string` - dashboard access key\n- `computedData` - `object` - computed data the Platform needs to generate the state items\n\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { updateDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  deploymentId: 'abc',\n  status: 'failed',\n  accessKey: 'abc',\n  computedData: {\n    // ...snip...\n  }\n}\n\nconst { id } = await updateDeployment(data)\n```\n\n---\n\n### `getApp`\nGets a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { getApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await getApp(data)\n```\n\n---\n\n### `createApp`\nCreates a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { createApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await createApp(data)\n```\n","readmeFilename":"README.md","_id":"@serverless/platform-sdk@0.7.3-10-gf8af46c","_npmVersion":"6.4.1","_nodeVersion":"10.15.3","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-wXA10R+Y5lWttemaauw1wci2cG/AfqreFtGvEhZMb2luIt1KjuH2sah3t+gYucfMUnn0l69w87hhRethEKNggw==","shasum":"6e71c675e09ad7a41c963c7ec6265d9e7c4cc014","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-0.7.3-10-gf8af46c.tgz","fileCount":73,"unpackedSize":157144,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc3ENlCRA9TVsSAnZWagAAm14P/03PIK/Q61O4lBGvBh8C\nUGY3zCZT26zha1zEnFmmjf5X7a+12reJyrKaXD6elT9L/dA58pKtN2FpIUSI\nDS58IF21PIT1Qt6D2nTR7JM0FfQkzWpxnf9VSZH1wk6Wm7DNdnFQzuHKU9kX\nSU7kuoXC9vMB9kC2J16DN2eAdpCX1aAjbbkZfH0c5voyMG44G/Bhsm3bWoHq\nzEzxEq2+HiQm0qB8DUl+HqivO1VLQp3PpanqxhPar8vLPQLj4noj1s8mg7lX\nrb3GuzkzSPa+jz68viXPp/uWl/aTTig050O/LDHq9/F+x8OJjSlO4KN/QGwu\nk46t/Cjgje6TYHR4bwT5eByg6aq/4ISd1JwNk5pQQYwl1NnMSWRxDU/Xf+Il\nsmcYpus0TSkbPgzySuN2KQhEl5BA6STz72tFe7umoXkSv1V1Nv2etGyzUZjz\npfjPXHusH9R3v6QRUda6Eppd2T4kbhv+DIbbQxfMipeN4L6hRi1+3HwINlkG\nozmwCTzdc7qCV8EyIyVW2slQakSzN5gd3TYemp04E9PDnNiOSxSQIoQy85J/\nSVWij8W7SmgG/po6EXlwjUsLCWg6VsoTADcAZr1gway/xWDVRBz483jpOdWm\nTeA5hRNz/ZIu85muiy2x9YbiqC3Qqs0m9e9+2aHJ3RuksRg9ba5+xKWrsbL4\nR6pE\r\n=dgM0\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"services@serverless.com","name":"serverless-main"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_0.7.3-10-gf8af46c_1557939045100_0.9978963161601562"},"_hasShrinkwrap":false},"0.7.3-12-ge78fc3e":{"name":"@serverless/platform-sdk","version":"0.7.3-12-ge78fc3e","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"prepare":"npm run build","build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","lint:staged":"lint-staged","setup":"./scripts/setup.sh","setup:ci":"./scripts/setup-ci.sh","test":"./scripts/test.sh","test:ci":"snyk test && ./scripts/test-ci.sh","watch":"./scripts/watch.sh"},"dependencies":{"babel-polyfill":"^6.26.0","body-parser":"^1.19.0","chalk":"^2.4.1","cors":"^2.8.4","express":"^4.16.3","is-docker":"^1.1.0","isomorphic-fetch":"^2.2.1","jwt-decode":"^2.2.0","opn":"^5.5.0","querystring":"^0.2.0","ramda":"^0.25.0","rc":"^1.2.8","source-map-support":"^0.5.12","uuid":"^3.3.2","write-file-atomic":"^2.4.2"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^21.2.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.17.2","eslint-plugin-prettier":"^2.6.1","jest-cli":"^21.2.0","lint-staged":"7.1.3","pre-commit":"^1.2.2","prettier":"^1.17.1","snyk":"^1.163.3"},"publishConfig":{"access":"public"},"lint-staged":{"*.js":["eslint --fix .","git add -A"]},"pre-commit":["lint:staged"],"gitHead":"e78fc3e63dd72a30ddba8bc70bfe185d1d747530","readme":"# Platform SDK\n\nFunctional SDK for the Serverless Platfrom.\n\n## Project Status\n\n[![Build Status](https://travis-ci.com/serverless/platform-sdk.svg)](https://travis-ci.com/serverless/platform-sdk)\n[![license](https://img.shields.io/npm/l/@serverless/platform-sdk.svg)](https://www.npmjs.com/package/@serverless/platform-sdk)\n[![coverage](https://img.shields.io/codecov/c/github/serverless/platform-sdk.svg)](https://codecov.io/gh/serverless/platform-sdk)\n[![Known Vulnerabilities](https://snyk.io/test/github/serverless/platform-sdk/badge.svg)](https://snyk.io/test/github/serverless/platform-sdk)\n\n## Contents\n\n- [Installation](#installation)\n- [Functions](#functions)\n  - [login](#login)\n  - [refreshToken](#refreshtoken)\n  - [createAccessKey](#createaccesskey)\n  - [archiveService](#archiveservice)\n  - [getServiceUrl](#getserviceurl)\n  - [listTenants](#listtenants)\n  - [createDeployment](#createdeployment)\n  - [updateDeployment](#updatedeployment)\n  - [getApp](#getapp)\n  - [createApp](#createapp)\n\n## installation\n\n```\nnpm i -s @serverless/platform-sdk\n```\n\n## Functions\n### `login`\nOpens a browser for the user to login, along with a running server awaiting auth data once the user logs in.\n\n**Parameters**\n\nNone\n\n**Returns**\n\nPromise resolving to the following object:\n\n- `username` - `string` - dashboard username\n- `accessToken` - `string` - Auth0 access token\n- `idToken` - `string` - Auth0 idToken\n- `refreshToken` - `string` - Auth0 refreshToken\n- `expiresAt` - `string` - epoch time at which the idToken expires\n\n**Example**\n\n```js\nconst { login } = require('@serverless/platform-sdk')\n\nconst { username, accessToken, idToken, expiresAt } = await login()\n```\n\n---\n\n### `refreshToken`\nRefreshes Auth0 idToken\n\n**Parameters**\n\nrefresh token string\n\n**Returns**\n\n\nPromise resolving to the following object:\n\n- `id_token` - `string` - new Auth0 id token\n- `access_token` - `string` - new Auth0 access token\n- `expires_in` - `string` - number of seconds until token expiration\n\n**Example**\n\n```js\nconst { refreshToken } = require('@serverless/platform-sdk')\n\nconst { id_token, access_token, expires_in } = await refreshToken('some-refresh-token')\n```\n\n---\n\n### `createAccessKey`\nCreates a platform access key for the authenticated user.\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `tenant` - `string` - dashboard tenant\n- `idToken` - `string` - Auth0 idToken\n- `title` - `string` - title of the access key\n\n**Returns**\n\nPromise resolving to an `accessKey` string, that is the access key.\n\n**Example**\n\n```js\nconst { createAccessKey } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  tenant: 'eahefnawy',\n  idToken: 'abc',\n  title: 'Framework'\n}\n\nconst accessKey = await createAccessKey(data)\n```\n\n---\n\n### `archiveService`\nArchives a service in the platform.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `accessKey` - `string` - dashboard access key\n- `app` - `string` - service app\n- `name` - `string` - service name\n- `provider` - `string` - provider name\n- `region` - `string` - region name\n\n**Returns**\n\nNone\n\n**Example**\n\n```js\nconst { archiveService } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  accessKey: 'abc',\n  app: 'my-app',\n  name: 'my-service',\n  provider: 'aws',\n  region: 'us-east-1'\n}\n\nawait archiveService(data)\n```\n\n---\n\n### `getServiceUrl`\nConstructs a service url based on passed-in data.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `app` - `string` - service app\n- `name` - `string` - service name\n\n\n**Returns**\n\nThe service url string.\n\n**Example**\n\n```js\nconst { getServiceUrl } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  name: 'my-service'\n}\n\nconst serviceUrl = getServiceUrl(data)\n```\n\n---\n\n### `listTenants`\nLists the tenants for a given username\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `idToken` - `string` - auth0 user id token\n\n\n**Returns**\n\nArray of objects, each represents a single tenant data model.\n\n**Example**\n\n```js\nconst { listTenants } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  idToken: 'abc'\n}\n\nconst tenants = await listTenants(data)\n```\n\n---\n\n### `createDeploymnet`\nCreates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `accessKey` - `string` - dashboard access key\n- `files` - `object` - files which should be stored in the Platforms deployment record\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { createDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  accessKey: 'abc',\n  files: {\n    'serverless-state.json': {\n      //...snip...\n    }\n  }\n}\n\nconst { id } = await createDeployment(data)\n```\n\n---\n\n### `updateDeployment`\nUpdates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `deploymentId` - `string` - id of the previously created deployment\n- `status` - `string` - status of the deployment to update\n- `accessKey` - `string` - dashboard access key\n- `computedData` - `object` - computed data the Platform needs to generate the state items\n\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { updateDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  deploymentId: 'abc',\n  status: 'failed',\n  accessKey: 'abc',\n  computedData: {\n    // ...snip...\n  }\n}\n\nconst { id } = await updateDeployment(data)\n```\n\n---\n\n### `getApp`\nGets a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { getApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await getApp(data)\n```\n\n---\n\n### `createApp`\nCreates a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { createApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await createApp(data)\n```\n","readmeFilename":"README.md","_id":"@serverless/platform-sdk@0.7.3-12-ge78fc3e","_npmVersion":"6.4.1","_nodeVersion":"10.15.3","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-F3GqKsnEgmaV4ENDdtj+lMzJx3hCjeRRyM4uztH1AF73AOYCLaAQAYrWZ3qLFBWzZL4dxjQei9IxGLkxRNHnPw==","shasum":"5811dece32d25e2b375d6d353b211862a65ac1c0","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-0.7.3-12-ge78fc3e.tgz","fileCount":73,"unpackedSize":157147,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc4rm+CRA9TVsSAnZWagAAA0IP/1KN0pmzSmwvIBDxaUCB\nDLzxWfAOqi4cjQuVYknxhwUrJQsKVQSlxiK4bHBcS3hcsB53DVddL9X97HYp\nDOjoe3SbYoU8c+SF2D7rEnvFDfiBXpwwAOVdRJij/Aw0YfROf3WaKYbsigDQ\nMfVfX6ksn0ixi4PvEbxMJAgdrcWjpl1uAhtKQcjAESNJDTbVD5lZz6/5QAXu\nzIobSg1+03VRTc5o4QOy08BF1OGq2lHS0cgiC4nNw6nFp5LXMceZlu/8Ociw\nb4YDUb5gxXp23ry5Tw0it6lJL97JuVBuOezRD45RMhm655Qal462fSN9XOHX\nGnmhA2IAnzHFDVLfKjtPNMkl0JIqVv8Hv8NxfC7qCUIIp5pZ9/kqfjLOnGag\nAsovLF2oWINJNrqma1IWc3Dxk/poVzAgkwaYssX3rrMB8Uszw4toqyr9kDV1\noDplafBFmITutBDKScr9CDoy017viJwKLmgrU/Dk4Rk+SZWz2SUKECbggcry\nkaXK3PVtulX2Ktoe8f75+GWsc4XoIEQNHXG5qsgIH2TeTDZO4P2ONldK2KIs\nIDB3Qlxe4tL2AilR1rcHhcW0TXF7Am8NUBC9lmDvaydFsCFcNt7HQRqgFxRt\n5MRK8Kvi62wH6nKvkgSeE71ZzonT+M4rtsa34WehhUvDWUvlX2NW4xqODxPt\n4kYX\r\n=XEfN\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"services@serverless.com","name":"serverless-main"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_0.7.3-12-ge78fc3e_1558362558230_0.10115315726758611"},"_hasShrinkwrap":false},"0.7.3-16-g1353fc9":{"name":"@serverless/platform-sdk","version":"0.7.3-16-g1353fc9","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"prepare":"npm run build","build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","lint:staged":"lint-staged","setup":"./scripts/setup.sh","setup:ci":"./scripts/setup-ci.sh","test":"./scripts/test.sh","test:ci":"snyk test && ./scripts/test-ci.sh","watch":"./scripts/watch.sh"},"dependencies":{"babel-polyfill":"^6.26.0","body-parser":"^1.19.0","chalk":"^2.4.1","cors":"^2.8.4","express":"^4.16.3","is-docker":"^1.1.0","isomorphic-fetch":"^2.2.1","jwt-decode":"^2.2.0","opn":"^5.5.0","querystring":"^0.2.0","ramda":"^0.25.0","rc":"^1.2.8","source-map-support":"^0.5.12","uuid":"^3.3.2","write-file-atomic":"^2.4.2"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^21.2.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.17.2","eslint-plugin-prettier":"^2.6.1","jest-cli":"^21.2.0","lint-staged":"7.1.3","pre-commit":"^1.2.2","prettier":"^1.17.1","snyk":"^1.163.3"},"publishConfig":{"access":"public"},"lint-staged":{"*.js":["eslint --fix .","git add -A"]},"pre-commit":["lint:staged"],"gitHead":"1353fc9c28995482299e72d9008dc9cc5fc1c47b","readme":"# Platform SDK\n\nFunctional SDK for the Serverless Platfrom.\n\n## Project Status\n\n[![Build Status](https://travis-ci.com/serverless/platform-sdk.svg)](https://travis-ci.com/serverless/platform-sdk)\n[![license](https://img.shields.io/npm/l/@serverless/platform-sdk.svg)](https://www.npmjs.com/package/@serverless/platform-sdk)\n[![coverage](https://img.shields.io/codecov/c/github/serverless/platform-sdk.svg)](https://codecov.io/gh/serverless/platform-sdk)\n[![Known Vulnerabilities](https://snyk.io/test/github/serverless/platform-sdk/badge.svg)](https://snyk.io/test/github/serverless/platform-sdk)\n\n## Contents\n\n- [Installation](#installation)\n- [Functions](#functions)\n  - [login](#login)\n  - [refreshToken](#refreshtoken)\n  - [createAccessKey](#createaccesskey)\n  - [archiveService](#archiveservice)\n  - [getServiceUrl](#getserviceurl)\n  - [listTenants](#listtenants)\n  - [createDeployment](#createdeployment)\n  - [updateDeployment](#updatedeployment)\n  - [getApp](#getapp)\n  - [createApp](#createapp)\n\n## installation\n\n```\nnpm i -s @serverless/platform-sdk\n```\n\n## Functions\n### `login`\nOpens a browser for the user to login, along with a running server awaiting auth data once the user logs in.\n\n**Parameters**\n\nNone\n\n**Returns**\n\nPromise resolving to the following object:\n\n- `username` - `string` - dashboard username\n- `accessToken` - `string` - Auth0 access token\n- `idToken` - `string` - Auth0 idToken\n- `refreshToken` - `string` - Auth0 refreshToken\n- `expiresAt` - `string` - epoch time at which the idToken expires\n\n**Example**\n\n```js\nconst { login } = require('@serverless/platform-sdk')\n\nconst { username, accessToken, idToken, expiresAt } = await login()\n```\n\n---\n\n### `refreshToken`\nRefreshes Auth0 idToken\n\n**Parameters**\n\nrefresh token string\n\n**Returns**\n\n\nPromise resolving to the following object:\n\n- `id_token` - `string` - new Auth0 id token\n- `access_token` - `string` - new Auth0 access token\n- `expires_in` - `string` - number of seconds until token expiration\n\n**Example**\n\n```js\nconst { refreshToken } = require('@serverless/platform-sdk')\n\nconst { id_token, access_token, expires_in } = await refreshToken('some-refresh-token')\n```\n\n---\n\n### `createAccessKey`\nCreates a platform access key for the authenticated user.\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `tenant` - `string` - dashboard tenant\n- `idToken` - `string` - Auth0 idToken\n- `title` - `string` - title of the access key\n\n**Returns**\n\nPromise resolving to an `accessKey` string, that is the access key.\n\n**Example**\n\n```js\nconst { createAccessKey } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  tenant: 'eahefnawy',\n  idToken: 'abc',\n  title: 'Framework'\n}\n\nconst accessKey = await createAccessKey(data)\n```\n\n---\n\n### `archiveService`\nArchives a service in the platform.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `accessKey` - `string` - dashboard access key\n- `app` - `string` - service app\n- `name` - `string` - service name\n- `provider` - `string` - provider name\n- `region` - `string` - region name\n\n**Returns**\n\nNone\n\n**Example**\n\n```js\nconst { archiveService } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  accessKey: 'abc',\n  app: 'my-app',\n  name: 'my-service',\n  provider: 'aws',\n  region: 'us-east-1'\n}\n\nawait archiveService(data)\n```\n\n---\n\n### `getServiceUrl`\nConstructs a service url based on passed-in data.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `app` - `string` - service app\n- `name` - `string` - service name\n\n\n**Returns**\n\nThe service url string.\n\n**Example**\n\n```js\nconst { getServiceUrl } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  name: 'my-service'\n}\n\nconst serviceUrl = getServiceUrl(data)\n```\n\n---\n\n### `listTenants`\nLists the tenants for a given username\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `idToken` - `string` - auth0 user id token\n\n\n**Returns**\n\nArray of objects, each represents a single tenant data model.\n\n**Example**\n\n```js\nconst { listTenants } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  idToken: 'abc'\n}\n\nconst tenants = await listTenants(data)\n```\n\n---\n\n### `createDeploymnet`\nCreates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `accessKey` - `string` - dashboard access key\n- `files` - `object` - files which should be stored in the Platforms deployment record\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { createDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  accessKey: 'abc',\n  files: {\n    'serverless-state.json': {\n      //...snip...\n    }\n  }\n}\n\nconst { id } = await createDeployment(data)\n```\n\n---\n\n### `updateDeployment`\nUpdates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `deploymentId` - `string` - id of the previously created deployment\n- `status` - `string` - status of the deployment to update\n- `accessKey` - `string` - dashboard access key\n- `computedData` - `object` - computed data the Platform needs to generate the state items\n\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { updateDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  deploymentId: 'abc',\n  status: 'failed',\n  accessKey: 'abc',\n  computedData: {\n    // ...snip...\n  }\n}\n\nconst { id } = await updateDeployment(data)\n```\n\n---\n\n### `getApp`\nGets a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { getApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await getApp(data)\n```\n\n---\n\n### `createApp`\nCreates a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { createApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await createApp(data)\n```\n","readmeFilename":"README.md","_id":"@serverless/platform-sdk@0.7.3-16-g1353fc9","_npmVersion":"6.4.1","_nodeVersion":"10.15.3","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-ybjTjoFjmup164NRZqCI7hvSwIrtR+6VCpmd2dOB9uqdly2JmZ6W1s+GyQdcph73cpe9p+/8/CT7xuKq2Jg2XQ==","shasum":"5de1a94d5aac269de807812ba1ae8d99c1172313","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-0.7.3-16-g1353fc9.tgz","fileCount":75,"unpackedSize":161015,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc4sfPCRA9TVsSAnZWagAAdpsP+gKNv/99eoMs23kzoEwQ\nv5Bzo9FDBOij6WFp15nLs+Jh7Xbgvu4CMYE7mp+uvZzAImrFerugUg7pxYQ9\nEDcGB4YFEl2C2VJkPbsUD8/cKCs11I4RRc0Qtvo0TjyW1l+kK506gqJKaU+M\nxkf2u5tKtYVpMrGu62JszhbBZM0p80+ow3eHbnO01e2C6FG94mo5+DTx7vk3\nkOfgZSIjMoL8y61Ax+xTul/MiauKhVYY4FtdvTSbRa/r4uw5S4zvjoB6oyQ6\nllk1VJvwcMNaF612FdW/0wxCQ+YfxBOFVYAFMNCa//Mzp9XEOx7zPHc876To\nakCoBWnVGerb8IAVT2ReojVYznjWZWAu7eLHfYkTOA5VIjtdFO9VphqG5sO0\nwZAjIFWlBmiDTGITuUW3iUHBO16zvSZRyjNDGoLRbHa/lqASR1xLaLKBpOe/\ndQBEi66dAYz/GUKdQkwv3mOZUyid4c+m5OnbHIsToxjiv+wo4tD6IWiO055y\nf2PncmGi2h1srXCwTgUS7l5KQ6vLdzLtAEFKBEuE/4R8o9V9kj6AHpByZ7TS\nyDxY6C1LWtw/yvThdO8JxtnIn13xA2JzHmLPatqYUb1WpczsehW8u6mFNpMF\nG+XAe+f9rhedrlEPZ5kZvv86turI55G6rWS0qVrMVolueW6jRL8xvjrWmRZw\nXvPf\r\n=9z16\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"services@serverless.com","name":"serverless-main"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_0.7.3-16-g1353fc9_1558366158390_0.14165819862482598"},"_hasShrinkwrap":false},"0.7.3-18-gadb6424":{"name":"@serverless/platform-sdk","version":"0.7.3-18-gadb6424","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"prepare":"npm run build","build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","lint:staged":"lint-staged","setup":"./scripts/setup.sh","setup:ci":"./scripts/setup-ci.sh","test":"./scripts/test.sh","test:ci":"snyk test && ./scripts/test-ci.sh","watch":"./scripts/watch.sh"},"dependencies":{"babel-polyfill":"^6.26.0","body-parser":"^1.19.0","chalk":"^2.4.1","cors":"^2.8.4","express":"^4.16.3","is-docker":"^1.1.0","isomorphic-fetch":"^2.2.1","jwt-decode":"^2.2.0","opn":"^5.5.0","querystring":"^0.2.0","ramda":"^0.25.0","rc":"^1.2.8","source-map-support":"^0.5.12","uuid":"^3.3.2","write-file-atomic":"^2.4.2"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^21.2.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.17.2","eslint-plugin-prettier":"^2.6.1","jest-cli":"^21.2.0","lint-staged":"7.1.3","pre-commit":"^1.2.2","prettier":"^1.17.1","snyk":"^1.163.3"},"publishConfig":{"access":"public"},"lint-staged":{"*.js":["eslint --fix .","git add -A"]},"pre-commit":["lint:staged"],"gitHead":"adb6424add3d2ac93928f73d86c4a2074e0e743a","readme":"# Platform SDK\n\nFunctional SDK for the Serverless Platfrom.\n\n## Project Status\n\n[![Build Status](https://travis-ci.com/serverless/platform-sdk.svg)](https://travis-ci.com/serverless/platform-sdk)\n[![license](https://img.shields.io/npm/l/@serverless/platform-sdk.svg)](https://www.npmjs.com/package/@serverless/platform-sdk)\n[![coverage](https://img.shields.io/codecov/c/github/serverless/platform-sdk.svg)](https://codecov.io/gh/serverless/platform-sdk)\n[![Known Vulnerabilities](https://snyk.io/test/github/serverless/platform-sdk/badge.svg)](https://snyk.io/test/github/serverless/platform-sdk)\n\n## Contents\n\n- [Installation](#installation)\n- [Functions](#functions)\n  - [login](#login)\n  - [refreshToken](#refreshtoken)\n  - [createAccessKey](#createaccesskey)\n  - [archiveService](#archiveservice)\n  - [getServiceUrl](#getserviceurl)\n  - [listTenants](#listtenants)\n  - [createDeployment](#createdeployment)\n  - [updateDeployment](#updatedeployment)\n  - [getApp](#getapp)\n  - [createApp](#createapp)\n\n## installation\n\n```\nnpm i -s @serverless/platform-sdk\n```\n\n## Functions\n### `login`\nOpens a browser for the user to login, along with a running server awaiting auth data once the user logs in.\n\n**Parameters**\n\nNone\n\n**Returns**\n\nPromise resolving to the following object:\n\n- `username` - `string` - dashboard username\n- `accessToken` - `string` - Auth0 access token\n- `idToken` - `string` - Auth0 idToken\n- `refreshToken` - `string` - Auth0 refreshToken\n- `expiresAt` - `string` - epoch time at which the idToken expires\n\n**Example**\n\n```js\nconst { login } = require('@serverless/platform-sdk')\n\nconst { username, accessToken, idToken, expiresAt } = await login()\n```\n\n---\n\n### `refreshToken`\nRefreshes Auth0 idToken\n\n**Parameters**\n\nrefresh token string\n\n**Returns**\n\n\nPromise resolving to the following object:\n\n- `id_token` - `string` - new Auth0 id token\n- `access_token` - `string` - new Auth0 access token\n- `expires_in` - `string` - number of seconds until token expiration\n\n**Example**\n\n```js\nconst { refreshToken } = require('@serverless/platform-sdk')\n\nconst { id_token, access_token, expires_in } = await refreshToken('some-refresh-token')\n```\n\n---\n\n### `createAccessKey`\nCreates a platform access key for the authenticated user.\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `tenant` - `string` - dashboard tenant\n- `idToken` - `string` - Auth0 idToken\n- `title` - `string` - title of the access key\n\n**Returns**\n\nPromise resolving to an `accessKey` string, that is the access key.\n\n**Example**\n\n```js\nconst { createAccessKey } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  tenant: 'eahefnawy',\n  idToken: 'abc',\n  title: 'Framework'\n}\n\nconst accessKey = await createAccessKey(data)\n```\n\n---\n\n### `archiveService`\nArchives a service in the platform.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `accessKey` - `string` - dashboard access key\n- `app` - `string` - service app\n- `name` - `string` - service name\n- `provider` - `string` - provider name\n- `region` - `string` - region name\n\n**Returns**\n\nNone\n\n**Example**\n\n```js\nconst { archiveService } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  accessKey: 'abc',\n  app: 'my-app',\n  name: 'my-service',\n  provider: 'aws',\n  region: 'us-east-1'\n}\n\nawait archiveService(data)\n```\n\n---\n\n### `getServiceUrl`\nConstructs a service url based on passed-in data.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `app` - `string` - service app\n- `name` - `string` - service name\n\n\n**Returns**\n\nThe service url string.\n\n**Example**\n\n```js\nconst { getServiceUrl } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  name: 'my-service'\n}\n\nconst serviceUrl = getServiceUrl(data)\n```\n\n---\n\n### `listTenants`\nLists the tenants for a given username\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `idToken` - `string` - auth0 user id token\n\n\n**Returns**\n\nArray of objects, each represents a single tenant data model.\n\n**Example**\n\n```js\nconst { listTenants } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  idToken: 'abc'\n}\n\nconst tenants = await listTenants(data)\n```\n\n---\n\n### `createDeploymnet`\nCreates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `accessKey` - `string` - dashboard access key\n- `files` - `object` - files which should be stored in the Platforms deployment record\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { createDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  accessKey: 'abc',\n  files: {\n    'serverless-state.json': {\n      //...snip...\n    }\n  }\n}\n\nconst { id } = await createDeployment(data)\n```\n\n---\n\n### `updateDeployment`\nUpdates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `deploymentId` - `string` - id of the previously created deployment\n- `status` - `string` - status of the deployment to update\n- `accessKey` - `string` - dashboard access key\n- `computedData` - `object` - computed data the Platform needs to generate the state items\n\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { updateDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  deploymentId: 'abc',\n  status: 'failed',\n  accessKey: 'abc',\n  computedData: {\n    // ...snip...\n  }\n}\n\nconst { id } = await updateDeployment(data)\n```\n\n---\n\n### `getApp`\nGets a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { getApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await getApp(data)\n```\n\n---\n\n### `createApp`\nCreates a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { createApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await createApp(data)\n```\n","readmeFilename":"README.md","_id":"@serverless/platform-sdk@0.7.3-18-gadb6424","_npmVersion":"6.4.1","_nodeVersion":"10.15.3","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-nwQilY0kGK5m9s/zPQp1xvMHUaziLbSEdTx5i3VKMtk3vrhbkOG8Nsr1rMqfrShtgqkhQg3HQFsCoRMjxvcKhg==","shasum":"f2997bee93a5587f1b50c6ceac0f25b376f60e6f","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-0.7.3-18-gadb6424.tgz","fileCount":75,"unpackedSize":161015,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc4tOUCRA9TVsSAnZWagAA6GsP/j2XAQY9PfO7uaOir9D6\nlj51qVEV3a+od9dEJE8IFxOJ7GLpxPHh3v85/+1M8B06ETNSmp3kMQFv/v/4\nTu7jezFP4zW8dTSUlzSCZTOAVJErOF/RKup15/ZFMbJUIRG4MwPZ2+cIkaWw\nU7aeXAq/dpo7cVbtcI5yHcQwF/pHOdNw9jyPSixFXTo6M0TTq4j5W1PfnOXV\nM7HYKGa61bsl5SIn7lRvGDcO6OmmCc/xxKRHuLI7QQH9krcKhKli2q2o3U7i\naIVnbY0EoEmtJD5JJqrJlZeB5p8FQwCXSv35rnzOmi0ajBULbm5G6jnoEjQL\nF/gZOYxuiI1wfn1YU6VTUczAY3jMYs5ce6UwlPOOtFXXZeLF65gug3Ezv9JZ\nE3X6Br4HFGO05TTOlISs0aWT8kdfrL7+S/kHLsdGyMc35uzJqfBAGwJ//3Br\nXRIGhadqHA5Auzx9+zyDo1Q8eSm4guLW3bZtTF7+Os/qKB389k0W6G+HDmtw\nArkzdkA23PacVHzRQq6zol9HWRdLK4T+wMqDTqOGNQ4nqbFcC4Z1m0qVHy+8\nWMW8VsB78+GsO9PG68Bb46210F/lDUJ+jJCuXDg2L8EXC3PUleTmicDr7anj\n4ZUn8rxvt7jcLpwtL4n9ctR+J7qiHq6VzC2iIBEbaMM7pdzgrk7joLJtPnzh\n0eMa\r\n=17Ed\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"services@serverless.com","name":"serverless-main"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_0.7.3-18-gadb6424_1558369171733_0.9163800754889251"},"_hasShrinkwrap":false},"1.0.0":{"name":"@serverless/platform-sdk","version":"1.0.0","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"prepare":"npm run build","build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","lint:staged":"lint-staged","setup":"./scripts/setup.sh","setup:ci":"./scripts/setup-ci.sh","test":"./scripts/test.sh","test:ci":"snyk test && ./scripts/test-ci.sh","watch":"./scripts/watch.sh"},"dependencies":{"babel-polyfill":"^6.26.0","body-parser":"^1.19.0","chalk":"^2.4.1","cors":"^2.8.4","express":"^4.16.3","is-docker":"^1.1.0","isomorphic-fetch":"^2.2.1","jwt-decode":"^2.2.0","opn":"^5.5.0","querystring":"^0.2.0","ramda":"^0.25.0","rc":"^1.2.8","source-map-support":"^0.5.12","uuid":"^3.3.2","write-file-atomic":"^2.4.2"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^21.2.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.17.2","eslint-plugin-prettier":"^2.6.1","jest-cli":"^21.2.0","lint-staged":"7.1.3","pre-commit":"^1.2.2","prettier":"^1.17.1","snyk":"^1.163.3"},"publishConfig":{"access":"public"},"lint-staged":{"*.js":["eslint --fix .","git add -A"]},"pre-commit":["lint:staged"],"gitHead":"adb6424add3d2ac93928f73d86c4a2074e0e743a","_id":"@serverless/platform-sdk@1.0.0","_npmVersion":"6.4.1","_nodeVersion":"10.15.3","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-+MYfXA36tXERShJDbfMQcEJKt4eRHQBbUeAzrY7emzJ/RYViPTw49Z8iHvYXhsMIi0v0DOlGHma7xNtGaKNm6Q==","shasum":"7177c1719a7d5e94e5ff73b5f876f07850b06843","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-1.0.0.tgz","fileCount":75,"unpackedSize":161003,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc4tRkCRA9TVsSAnZWagAAGj8P/R5WXAQ/aMOmCxYv/4JP\n6q5lPEddVZMqA+CoptaD1aN9uI22DP9KbvcMPMh+W28Y88VgHgX62fg5YraM\n4h2m1YXFbi9lTi412/hY4fPQP2gnduU943DppQoa3PkpPQwRAXENPe01yVuN\nWopJpJpHs44dv4Fg2m/BXtpnv7H4NyjQBeg1HmUkQkpEAp5AImtxIOuErhg+\nBNofqYmkFVjVJp+AF9aNetuDMtVmyM/R0gYUResWPnn/q6MpghKzsm9osFKV\nmI0QXGUE9nd/qn2Uu3Lde4gLdrdH/wXseg6Fct+qzPteZyF9LdIMfqdc+e33\nx27GZ/VzS5ZgKdLg0WbZm4phwlVnw+q4oFyp/lmLDX59u5HsoZ6Di732SG0e\n/sgq2avPRPYiAG+rkCaKLJf8d3Ydne2H0aHgao3M6YxEZfotkn/wH2wCWQbC\nzMwQeG3QOpklI11EIfojHZKaet9JZdVE9UIV7DbMfRt8ynYQUIhgddKivIaK\nCfYHly6noopwJY8dhsIkWpI5EHNSgXwYvm7iJdxTwdrrjizvOOY/8kEDlOPv\n0UWYjuGKHwRVpxmSjcocd483EhK6JmZmqntYhFh0y61wArRz2CJlCHg6xWnl\nwkvydzRcECtxTMGfRRDKvvAJhogMssT5Mv5CgWMNmP4dAaVZu3iMymAvjfw2\ntJJi\r\n=osa+\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"services@serverless.com","name":"serverless-main"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_1.0.0_1558369379666_0.19167017799590536"},"_hasShrinkwrap":false},"1.0.0-3-g144f440":{"name":"@serverless/platform-sdk","version":"1.0.0-3-g144f440","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"prepare":"npm run build","build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","lint:staged":"lint-staged","setup":"./scripts/setup.sh","setup:ci":"./scripts/setup-ci.sh","test":"./scripts/test.sh","test:ci":"snyk test && ./scripts/test-ci.sh","watch":"./scripts/watch.sh"},"dependencies":{"body-parser":"^1.19.0","chalk":"^2.4.1","cors":"^2.8.4","express":"^4.16.3","is-docker":"^1.1.0","isomorphic-fetch":"^2.2.1","jwt-decode":"^2.2.0","opn":"^5.5.0","querystring":"^0.2.0","ramda":"^0.25.0","rc":"^1.2.8","regenerator-runtime":"^0.13.1","source-map-support":"^0.5.12","uuid":"^3.3.2","write-file-atomic":"^2.4.2"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^21.2.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.17.2","eslint-plugin-prettier":"^2.6.1","jest-cli":"^21.2.0","lint-staged":"7.1.3","pre-commit":"^1.2.2","prettier":"^1.17.1","snyk":"^1.163.3"},"publishConfig":{"access":"public"},"lint-staged":{"*.js":["eslint --fix .","git add -A"]},"pre-commit":["lint:staged"],"gitHead":"144f440596678dea4a255511ff55cba182ec49d9","readme":"# Platform SDK\n\nFunctional SDK for the Serverless Platfrom.\n\n## Project Status\n\n[![Build Status](https://travis-ci.com/serverless/platform-sdk.svg)](https://travis-ci.com/serverless/platform-sdk)\n[![license](https://img.shields.io/npm/l/@serverless/platform-sdk.svg)](https://www.npmjs.com/package/@serverless/platform-sdk)\n[![coverage](https://img.shields.io/codecov/c/github/serverless/platform-sdk.svg)](https://codecov.io/gh/serverless/platform-sdk)\n[![Known Vulnerabilities](https://snyk.io/test/github/serverless/platform-sdk/badge.svg)](https://snyk.io/test/github/serverless/platform-sdk)\n\n## Contents\n\n- [Installation](#installation)\n- [Functions](#functions)\n  - [login](#login)\n  - [refreshToken](#refreshtoken)\n  - [createAccessKey](#createaccesskey)\n  - [archiveService](#archiveservice)\n  - [getServiceUrl](#getserviceurl)\n  - [listTenants](#listtenants)\n  - [createDeployment](#createdeployment)\n  - [updateDeployment](#updatedeployment)\n  - [getApp](#getapp)\n  - [createApp](#createapp)\n\n## installation\n\n```\nnpm i -s @serverless/platform-sdk\n```\n\n## Functions\n### `login`\nOpens a browser for the user to login, along with a running server awaiting auth data once the user logs in.\n\n**Parameters**\n\nNone\n\n**Returns**\n\nPromise resolving to the following object:\n\n- `username` - `string` - dashboard username\n- `accessToken` - `string` - Auth0 access token\n- `idToken` - `string` - Auth0 idToken\n- `refreshToken` - `string` - Auth0 refreshToken\n- `expiresAt` - `string` - epoch time at which the idToken expires\n\n**Example**\n\n```js\nconst { login } = require('@serverless/platform-sdk')\n\nconst { username, accessToken, idToken, expiresAt } = await login()\n```\n\n---\n\n### `refreshToken`\nRefreshes Auth0 idToken\n\n**Parameters**\n\nrefresh token string\n\n**Returns**\n\n\nPromise resolving to the following object:\n\n- `id_token` - `string` - new Auth0 id token\n- `access_token` - `string` - new Auth0 access token\n- `expires_in` - `string` - number of seconds until token expiration\n\n**Example**\n\n```js\nconst { refreshToken } = require('@serverless/platform-sdk')\n\nconst { id_token, access_token, expires_in } = await refreshToken('some-refresh-token')\n```\n\n---\n\n### `createAccessKey`\nCreates a platform access key for the authenticated user.\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `tenant` - `string` - dashboard tenant\n- `idToken` - `string` - Auth0 idToken\n- `title` - `string` - title of the access key\n\n**Returns**\n\nPromise resolving to an `accessKey` string, that is the access key.\n\n**Example**\n\n```js\nconst { createAccessKey } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  tenant: 'eahefnawy',\n  idToken: 'abc',\n  title: 'Framework'\n}\n\nconst accessKey = await createAccessKey(data)\n```\n\n---\n\n### `archiveService`\nArchives a service in the platform.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `accessKey` - `string` - dashboard access key\n- `app` - `string` - service app\n- `name` - `string` - service name\n- `provider` - `string` - provider name\n- `region` - `string` - region name\n\n**Returns**\n\nNone\n\n**Example**\n\n```js\nconst { archiveService } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  accessKey: 'abc',\n  app: 'my-app',\n  name: 'my-service',\n  provider: 'aws',\n  region: 'us-east-1'\n}\n\nawait archiveService(data)\n```\n\n---\n\n### `getServiceUrl`\nConstructs a service url based on passed-in data.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `app` - `string` - service app\n- `name` - `string` - service name\n\n\n**Returns**\n\nThe service url string.\n\n**Example**\n\n```js\nconst { getServiceUrl } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  name: 'my-service'\n}\n\nconst serviceUrl = getServiceUrl(data)\n```\n\n---\n\n### `listTenants`\nLists the tenants for a given username\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `idToken` - `string` - auth0 user id token\n\n\n**Returns**\n\nArray of objects, each represents a single tenant data model.\n\n**Example**\n\n```js\nconst { listTenants } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  idToken: 'abc'\n}\n\nconst tenants = await listTenants(data)\n```\n\n---\n\n### `createDeploymnet`\nCreates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `accessKey` - `string` - dashboard access key\n- `files` - `object` - files which should be stored in the Platforms deployment record\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { createDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  accessKey: 'abc',\n  files: {\n    'serverless-state.json': {\n      //...snip...\n    }\n  }\n}\n\nconst { id } = await createDeployment(data)\n```\n\n---\n\n### `updateDeployment`\nUpdates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `deploymentId` - `string` - id of the previously created deployment\n- `status` - `string` - status of the deployment to update\n- `accessKey` - `string` - dashboard access key\n- `computedData` - `object` - computed data the Platform needs to generate the state items\n\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { updateDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  deploymentId: 'abc',\n  status: 'failed',\n  accessKey: 'abc',\n  computedData: {\n    // ...snip...\n  }\n}\n\nconst { id } = await updateDeployment(data)\n```\n\n---\n\n### `getApp`\nGets a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { getApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await getApp(data)\n```\n\n---\n\n### `createApp`\nCreates a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { createApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await createApp(data)\n```\n","readmeFilename":"README.md","_id":"@serverless/platform-sdk@1.0.0-3-g144f440","_npmVersion":"6.4.1","_nodeVersion":"10.15.3","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-Nytu8lY57fRzclUrJ7zVIeEC0siV9fHxWT3Nc8lm8T08xUVrTKtr0NZokVlCjtpilgCBJq6PY2PNq2bGY9U7AA==","shasum":"5f481083b9b229ae1d537a91a78019095e5f6e1e","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-1.0.0-3-g144f440.tgz","fileCount":77,"unpackedSize":161255,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc5VQeCRA9TVsSAnZWagAAGyEP/jXqQw+5gXrAC5oQQY7u\nSYG4FSvRVszHPAk3MH6XuXvoYUgpR39hKDTPJRjrIHvrb//CGCYE+SQ56R1k\nJF+O5qnSFott/8BRLAt8jLSzHAK1YgpA+YF7aKbA2XdA3lIRRF/QqgQMhIgS\n6zid5Ee8quIcYs7Z51PKdzK6X3mqqA3jIplRqZiNjkK3fLjt8pQ/ENRMnTm9\n1HZ7luJzLkyvkOziyimYGOBXV0yx5EPsZCK/gOQ+RAdOiodU64g46a33GNp8\ngkhhxOvKZ7ZAlBMUMwg3DE4gCK+etpCFJH3275UVh6jrPP+4iW2fwH5kha9X\n32LhErs84GSZemCUab6gdd+nbV6hXsUdM8H05HqgaDqmv8cSbBMs6u6awjQe\nHop0UVl1o2O2uDGpBJM7CtnVns5LL6iTzD1LAhZBXy23tPxm0HRXZb+pMePG\nWNdYFdX39D6a9kqV0XWie8cQaPn4fyWn/mfJWMM0WcqqzQnYqy0JJr5CXchh\nhcJTQUfAIwdWi20qpxF69HmebhQV9YSGY0phVVAsNgdE8KJ2ABvA3N0PIcLc\nGkLYC+IUCIcpTtH62psQ5IHnKLkhi44cw006wnjaVEibivDJbwcITEr9YasV\nPme6byZNfeZbwtNWswzDJ/Q22aahfaxA8qMb+IPPnKDCI8QmD5eOR5BEPJ9c\nBq9i\r\n=XJ7A\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"services@serverless.com","name":"serverless-main"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_1.0.0-3-g144f440_1558533149505_0.6182890057648134"},"_hasShrinkwrap":false},"1.0.0-5-g1c589d1":{"name":"@serverless/platform-sdk","version":"1.0.0-5-g1c589d1","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"prepare":"npm run build","build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","lint:staged":"lint-staged","setup":"./scripts/setup.sh","setup:ci":"./scripts/setup-ci.sh","test":"./scripts/test.sh","test:ci":"snyk test && ./scripts/test-ci.sh","watch":"./scripts/watch.sh"},"dependencies":{"body-parser":"^1.19.0","chalk":"^2.4.1","cors":"^2.8.4","express":"^4.16.3","is-docker":"^1.1.0","isomorphic-fetch":"^2.2.1","jwt-decode":"^2.2.0","opn":"^5.5.0","querystring":"^0.2.0","ramda":"^0.25.0","rc":"^1.2.8","regenerator-runtime":"^0.13.1","source-map-support":"^0.5.12","uuid":"^3.3.2","write-file-atomic":"^2.4.2"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^21.2.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.17.2","eslint-plugin-prettier":"^2.6.1","jest-cli":"^21.2.0","lint-staged":"7.1.3","pre-commit":"^1.2.2","prettier":"^1.17.1","snyk":"^1.163.3"},"publishConfig":{"access":"public"},"lint-staged":{"*.js":["eslint --fix .","git add -A"]},"pre-commit":["lint:staged"],"gitHead":"1c589d1cf431e986b1325e1cbda4baf35bafbbfb","readme":"# Platform SDK\n\nFunctional SDK for the Serverless Platfrom.\n\n## Project Status\n\n[![Build Status](https://travis-ci.com/serverless/platform-sdk.svg)](https://travis-ci.com/serverless/platform-sdk)\n[![license](https://img.shields.io/npm/l/@serverless/platform-sdk.svg)](https://www.npmjs.com/package/@serverless/platform-sdk)\n[![coverage](https://img.shields.io/codecov/c/github/serverless/platform-sdk.svg)](https://codecov.io/gh/serverless/platform-sdk)\n[![Known Vulnerabilities](https://snyk.io/test/github/serverless/platform-sdk/badge.svg)](https://snyk.io/test/github/serverless/platform-sdk)\n\n## Contents\n\n- [Installation](#installation)\n- [Functions](#functions)\n  - [login](#login)\n  - [refreshToken](#refreshtoken)\n  - [createAccessKey](#createaccesskey)\n  - [archiveService](#archiveservice)\n  - [getServiceUrl](#getserviceurl)\n  - [listTenants](#listtenants)\n  - [createDeployment](#createdeployment)\n  - [updateDeployment](#updatedeployment)\n  - [getApp](#getapp)\n  - [createApp](#createapp)\n\n## installation\n\n```\nnpm i -s @serverless/platform-sdk\n```\n\n## Functions\n### `login`\nOpens a browser for the user to login, along with a running server awaiting auth data once the user logs in.\n\n**Parameters**\n\nNone\n\n**Returns**\n\nPromise resolving to the following object:\n\n- `username` - `string` - dashboard username\n- `accessToken` - `string` - Auth0 access token\n- `idToken` - `string` - Auth0 idToken\n- `refreshToken` - `string` - Auth0 refreshToken\n- `expiresAt` - `string` - epoch time at which the idToken expires\n\n**Example**\n\n```js\nconst { login } = require('@serverless/platform-sdk')\n\nconst { username, accessToken, idToken, expiresAt } = await login()\n```\n\n---\n\n### `refreshToken`\nRefreshes Auth0 idToken\n\n**Parameters**\n\nrefresh token string\n\n**Returns**\n\n\nPromise resolving to the following object:\n\n- `id_token` - `string` - new Auth0 id token\n- `access_token` - `string` - new Auth0 access token\n- `expires_in` - `string` - number of seconds until token expiration\n\n**Example**\n\n```js\nconst { refreshToken } = require('@serverless/platform-sdk')\n\nconst { id_token, access_token, expires_in } = await refreshToken('some-refresh-token')\n```\n\n---\n\n### `createAccessKey`\nCreates a platform access key for the authenticated user.\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `tenant` - `string` - dashboard tenant\n- `idToken` - `string` - Auth0 idToken\n- `title` - `string` - title of the access key\n\n**Returns**\n\nPromise resolving to an `accessKey` string, that is the access key.\n\n**Example**\n\n```js\nconst { createAccessKey } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  tenant: 'eahefnawy',\n  idToken: 'abc',\n  title: 'Framework'\n}\n\nconst accessKey = await createAccessKey(data)\n```\n\n---\n\n### `archiveService`\nArchives a service in the platform.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `accessKey` - `string` - dashboard access key\n- `app` - `string` - service app\n- `name` - `string` - service name\n- `provider` - `string` - provider name\n- `region` - `string` - region name\n\n**Returns**\n\nNone\n\n**Example**\n\n```js\nconst { archiveService } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  accessKey: 'abc',\n  app: 'my-app',\n  name: 'my-service',\n  provider: 'aws',\n  region: 'us-east-1'\n}\n\nawait archiveService(data)\n```\n\n---\n\n### `getServiceUrl`\nConstructs a service url based on passed-in data.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `app` - `string` - service app\n- `name` - `string` - service name\n\n\n**Returns**\n\nThe service url string.\n\n**Example**\n\n```js\nconst { getServiceUrl } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  name: 'my-service'\n}\n\nconst serviceUrl = getServiceUrl(data)\n```\n\n---\n\n### `listTenants`\nLists the tenants for a given username\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `idToken` - `string` - auth0 user id token\n\n\n**Returns**\n\nArray of objects, each represents a single tenant data model.\n\n**Example**\n\n```js\nconst { listTenants } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  idToken: 'abc'\n}\n\nconst tenants = await listTenants(data)\n```\n\n---\n\n### `createDeploymnet`\nCreates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `accessKey` - `string` - dashboard access key\n- `files` - `object` - files which should be stored in the Platforms deployment record\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { createDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  accessKey: 'abc',\n  files: {\n    'serverless-state.json': {\n      //...snip...\n    }\n  }\n}\n\nconst { id } = await createDeployment(data)\n```\n\n---\n\n### `updateDeployment`\nUpdates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `deploymentId` - `string` - id of the previously created deployment\n- `status` - `string` - status of the deployment to update\n- `accessKey` - `string` - dashboard access key\n- `computedData` - `object` - computed data the Platform needs to generate the state items\n\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { updateDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  deploymentId: 'abc',\n  status: 'failed',\n  accessKey: 'abc',\n  computedData: {\n    // ...snip...\n  }\n}\n\nconst { id } = await updateDeployment(data)\n```\n\n---\n\n### `getApp`\nGets a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { getApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await getApp(data)\n```\n\n---\n\n### `createApp`\nCreates a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { createApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await createApp(data)\n```\n","readmeFilename":"README.md","_id":"@serverless/platform-sdk@1.0.0-5-g1c589d1","_npmVersion":"6.4.1","_nodeVersion":"10.15.3","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-jmoOKPLnZJzraLwSsCnKT33D1he5RRLZWwIqpQz4KrjKROOtHcphvsYAkz8Bww4eBt8v+aIAXChzhzs5UzOxGQ==","shasum":"b975bdfad9a3c1a6eefdca7724a044d4e2ed1acf","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-1.0.0-5-g1c589d1.tgz","fileCount":77,"unpackedSize":161255,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc7RyVCRA9TVsSAnZWagAAt94P/2MqkGm/GZ2OnoCFHhrj\n1kJ4zqX1s4WzAcDmMJP9IWAa749gxJVpCiCm1JXPwAXz7qov0NA9O/MaOKHz\nuE44hoDdAAm51Ym0MX4SCkTuiwpHPkvqPAjDyhAwQfTW/f0EnG5C9FgdoP4S\nkIB0t+3R0j9btTaMj2j0FqdS9NtWpGD1WBTfm1K4Zwdol/Z/kmIOfnTHgRAT\nFFsYDDJ7Curvr8+GMHurlF5aXvqOjY8S9KxApcWW3lSXBqJbXEBcwE6QLijk\n1LLY0QeBriFh62h7kHDHNeVy8+tX2guwamde0d+FaLV3rjhQ3ZGWDHtPohbj\nevjnaCp0faPTen1jr8G8eV22I89ScpGaUEaT5fwZGqKkOZBnT50STLTluJbX\nEIdHf5qncXN9T9Lp/8UwqKFFM9kEFaelntkNAoOeId+vJNv1FDCNuMh2cGsg\n/kHGv9YYYWizZgTyO5LPH1qA0J8GumnkKKOhh0Yw/nR0xpMLQnQsvfBKts2c\nqE3uprsDbQZSzYqrW17n1yAQQIeo77Y6zNrxyi3TPU0fLBjFaPt94LnX5HiT\ny/Icd4XR1roP32I8hs2E5dfEei1kTw1HBp/0SEKw4hv6LqaSwc1r+YHp/PSL\nn5+kCboIC4ZUayf8L1Tkkf8WytN4Bz7xtxdLKx4b2wUIgjrCgebpTWoiuMv6\nWHui\r\n=5dy3\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"services@serverless.com","name":"serverless-main"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_1.0.0-5-g1c589d1_1559043221054_0.7924711658393484"},"_hasShrinkwrap":false},"1.0.1":{"name":"@serverless/platform-sdk","version":"1.0.1","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"prepare":"npm run build","build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","lint:staged":"lint-staged","setup":"./scripts/setup.sh","setup:ci":"./scripts/setup-ci.sh","test":"./scripts/test.sh","test:ci":"snyk test && ./scripts/test-ci.sh","watch":"./scripts/watch.sh"},"dependencies":{"body-parser":"^1.19.0","chalk":"^2.4.1","cors":"^2.8.4","express":"^4.16.3","is-docker":"^1.1.0","isomorphic-fetch":"^2.2.1","jwt-decode":"^2.2.0","opn":"^5.5.0","querystring":"^0.2.0","ramda":"^0.25.0","rc":"^1.2.8","regenerator-runtime":"^0.13.1","source-map-support":"^0.5.12","uuid":"^3.3.2","write-file-atomic":"^2.4.2"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^21.2.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.17.2","eslint-plugin-prettier":"^2.6.1","jest-cli":"^21.2.0","lint-staged":"7.1.3","pre-commit":"^1.2.2","prettier":"^1.17.1","snyk":"^1.163.3"},"publishConfig":{"access":"public"},"lint-staged":{"*.js":["eslint --fix .","git add -A"]},"pre-commit":["lint:staged"],"gitHead":"1c589d1cf431e986b1325e1cbda4baf35bafbbfb","_id":"@serverless/platform-sdk@1.0.1","_npmVersion":"6.4.1","_nodeVersion":"10.15.3","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-x7DWlvAEOdwur7pYLPHkqsEJ4+1xgmOHjSqpv3krthqQoUuh1+IBexL+GhtYqpN1t3N//a4mXDREb2Vd5eqIhA==","shasum":"ea613954d340464b19694401395309ca22f5c107","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-1.0.1.tgz","fileCount":77,"unpackedSize":161244,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc7SZqCRA9TVsSAnZWagAAP8wQAJ9OL7fdyIQAjvvdGRoK\ndgv4d0GuV80qG7jSsqcElIH/P/gjS8hE9vlrfTUiRTnCs9b6WK/ZERTy1yjh\nA08thJlffT9X9r35HWkI3WFBjJ9pATqpTO24qTmwnSdK12iwRL22tkNIXYRn\nBS38bdicwz0sExB0NYChRYnw2DVBDysvkdPfqgWFTHmnctV7h/NRqEFQYZzs\nv2aqAlcSOM5CTK11HoAfLNNJZTakWasJJfbNYoVbpYFl0N5Ry5xXSknAMu9O\nsqwIoA77u6lbBWDID7sbT5W60JyFvuDRkObL94TcmeT+gRCQfi4EOLoy2xz6\neG/dloCkSoubRAHY2I0+ergqsayOl9a8D2M2xr/evlnDpZcFUFMf8FdaviXt\n5Zu1D8j4lMDGcsHPThAUxXPfbX1iGNxh2TjsGiEbN43k75ND/ohVouzWVFzU\nRQ5IH7kjFO9Ufl40DfaV1DQwk7TSxrGAI3ASyCnEh0FpE4bCFARqZahBUy0j\nnjl2v+nEZ/izIygpXtHXtHHputArrAUqgERp4ft5Tq4lbfh/ZAVD13e0Yuc/\nKu3pgDZxWpyhAP+Y00HAC0QPmxiS7kJEQqJAiMFEYx2/1D6Myf63xN+OF58m\n8OKKJwmcUFNrLAnB8TgLmR/xCsHUV3ou+fAjDQmnvNRIA39zjZLPvr6OqDRg\nu4ml\r\n=hrJH\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"services@serverless.com","name":"serverless-main"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_1.0.1_1559045737648_0.612226558463147"},"_hasShrinkwrap":false},"1.0.1-4-g16d9fb3":{"name":"@serverless/platform-sdk","version":"1.0.1-4-g16d9fb3","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"prepare":"npm run build","build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","lint:staged":"lint-staged","setup":"./scripts/setup.sh","setup:ci":"./scripts/setup-ci.sh","test":"./scripts/test.sh","test:ci":"snyk test && ./scripts/test-ci.sh","watch":"./scripts/watch.sh"},"dependencies":{"body-parser":"^1.19.0","chalk":"^2.4.1","cors":"^2.8.4","express":"^4.16.3","is-docker":"^1.1.0","isomorphic-fetch":"^2.2.1","jwt-decode":"^2.2.0","opn":"^5.5.0","querystring":"^0.2.0","ramda":"^0.25.0","rc":"^1.2.8","regenerator-runtime":"^0.13.1","source-map-support":"^0.5.12","uuid":"^3.3.2","write-file-atomic":"^2.4.2"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^21.2.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.17.2","eslint-plugin-prettier":"^2.6.1","jest-cli":"^21.2.0","lint-staged":"7.1.3","pre-commit":"^1.2.2","prettier":"^1.17.1","snyk":"^1.163.3"},"publishConfig":{"access":"public"},"lint-staged":{"*.js":["eslint --fix .","git add -A"]},"pre-commit":["lint:staged"],"gitHead":"16d9fb398018ff46a7b507deb872d958c865e529","readme":"# Platform SDK\n\nFunctional SDK for the Serverless Platfrom.\n\n## Project Status\n\n[![Build Status](https://travis-ci.com/serverless/platform-sdk.svg)](https://travis-ci.com/serverless/platform-sdk)\n[![license](https://img.shields.io/npm/l/@serverless/platform-sdk.svg)](https://www.npmjs.com/package/@serverless/platform-sdk)\n[![coverage](https://img.shields.io/codecov/c/github/serverless/platform-sdk.svg)](https://codecov.io/gh/serverless/platform-sdk)\n[![Known Vulnerabilities](https://snyk.io/test/github/serverless/platform-sdk/badge.svg)](https://snyk.io/test/github/serverless/platform-sdk)\n\n## Contents\n\n- [Installation](#installation)\n- [Functions](#functions)\n  - [login](#login)\n  - [refreshToken](#refreshtoken)\n  - [createAccessKey](#createaccesskey)\n  - [archiveService](#archiveservice)\n  - [getServiceUrl](#getserviceurl)\n  - [listTenants](#listtenants)\n  - [createDeployment](#createdeployment)\n  - [updateDeployment](#updatedeployment)\n  - [getApp](#getapp)\n  - [createApp](#createapp)\n\n## installation\n\n```\nnpm i -s @serverless/platform-sdk\n```\n\n## Functions\n### `login`\nOpens a browser for the user to login, along with a running server awaiting auth data once the user logs in.\n\n**Parameters**\n\nNone\n\n**Returns**\n\nPromise resolving to the following object:\n\n- `username` - `string` - dashboard username\n- `accessToken` - `string` - Auth0 access token\n- `idToken` - `string` - Auth0 idToken\n- `refreshToken` - `string` - Auth0 refreshToken\n- `expiresAt` - `string` - epoch time at which the idToken expires\n\n**Example**\n\n```js\nconst { login } = require('@serverless/platform-sdk')\n\nconst { username, accessToken, idToken, expiresAt } = await login()\n```\n\n---\n\n### `refreshToken`\nRefreshes Auth0 idToken\n\n**Parameters**\n\nrefresh token string\n\n**Returns**\n\n\nPromise resolving to the following object:\n\n- `id_token` - `string` - new Auth0 id token\n- `access_token` - `string` - new Auth0 access token\n- `expires_in` - `string` - number of seconds until token expiration\n\n**Example**\n\n```js\nconst { refreshToken } = require('@serverless/platform-sdk')\n\nconst { id_token, access_token, expires_in } = await refreshToken('some-refresh-token')\n```\n\n---\n\n### `createAccessKey`\nCreates a platform access key for the authenticated user.\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `tenant` - `string` - dashboard tenant\n- `idToken` - `string` - Auth0 idToken\n- `title` - `string` - title of the access key\n\n**Returns**\n\nPromise resolving to an `accessKey` string, that is the access key.\n\n**Example**\n\n```js\nconst { createAccessKey } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  tenant: 'eahefnawy',\n  idToken: 'abc',\n  title: 'Framework'\n}\n\nconst accessKey = await createAccessKey(data)\n```\n\n---\n\n### `archiveService`\nArchives a service in the platform.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `accessKey` - `string` - dashboard access key\n- `app` - `string` - service app\n- `name` - `string` - service name\n- `provider` - `string` - provider name\n- `region` - `string` - region name\n\n**Returns**\n\nNone\n\n**Example**\n\n```js\nconst { archiveService } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  accessKey: 'abc',\n  app: 'my-app',\n  name: 'my-service',\n  provider: 'aws',\n  region: 'us-east-1'\n}\n\nawait archiveService(data)\n```\n\n---\n\n### `getServiceUrl`\nConstructs a service url based on passed-in data.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `app` - `string` - service app\n- `name` - `string` - service name\n\n\n**Returns**\n\nThe service url string.\n\n**Example**\n\n```js\nconst { getServiceUrl } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  name: 'my-service'\n}\n\nconst serviceUrl = getServiceUrl(data)\n```\n\n---\n\n### `listTenants`\nLists the tenants for a given username\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `idToken` - `string` - auth0 user id token\n\n\n**Returns**\n\nArray of objects, each represents a single tenant data model.\n\n**Example**\n\n```js\nconst { listTenants } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  idToken: 'abc'\n}\n\nconst tenants = await listTenants(data)\n```\n\n---\n\n### `createDeploymnet`\nCreates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `accessKey` - `string` - dashboard access key\n- `files` - `object` - files which should be stored in the Platforms deployment record\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { createDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  accessKey: 'abc',\n  files: {\n    'serverless-state.json': {\n      //...snip...\n    }\n  }\n}\n\nconst { id } = await createDeployment(data)\n```\n\n---\n\n### `updateDeployment`\nUpdates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `deploymentId` - `string` - id of the previously created deployment\n- `status` - `string` - status of the deployment to update\n- `accessKey` - `string` - dashboard access key\n- `computedData` - `object` - computed data the Platform needs to generate the state items\n\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { updateDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  deploymentId: 'abc',\n  status: 'failed',\n  accessKey: 'abc',\n  computedData: {\n    // ...snip...\n  }\n}\n\nconst { id } = await updateDeployment(data)\n```\n\n---\n\n### `getApp`\nGets a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { getApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await getApp(data)\n```\n\n---\n\n### `createApp`\nCreates a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { createApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await createApp(data)\n```\n","readmeFilename":"README.md","_id":"@serverless/platform-sdk@1.0.1-4-g16d9fb3","_npmVersion":"6.4.1","_nodeVersion":"10.15.3","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-iu2v8znQ3jb+TM4DITsEd1zjXN0gziOhDh7Z58Jl1cPA+WosxPDJjxD1hOqWFZYExhJDkJgaoyDtmRQfoArEJw==","shasum":"adb4bcb48537e775e03160c72a26cd50ef016871","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-1.0.1-4-g16d9fb3.tgz","fileCount":77,"unpackedSize":161208,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdFkOhCRA9TVsSAnZWagAAOPEQAJ0dVWBvIKDaRxEpl8n9\nqqWkt1Wl6Fo29wl2DffTkxH1eh4npitZFZO6JHee+r5wvaXSAZ/Pp5LYge9n\npekfwIg/KofS7Fuc09zvhK6LtdNc/z0HeweNW+MusuMFZ343ezwa32Elnl2V\nFm/ZU64qsl5mAXNv4gCTbYYOe6O08rUN2qiSxgtsF7BA+ADrP/qTWlf43Q79\nnisEz2Q44t6xzr4BypaeiYRjV1nZulX9XBOy1xlKU0IOXzwQzm9jckp1yEiM\n5B/Z7wLEhGjB7lUIDaaX/j4ZTU8aFKis0DE7CkCb2pfrXODpiXrjAfmKavc9\n65ZdPUG3Qo1qwegQxA5L3wzSGh9LLRY4gNdL2MJjt6aAnwmfG+uKX/XexAxx\naWkAcze4n/rtQbN+DTOaGrC8G0iqaAyAfgBWlnCt1zaPPTVeOPIPt9+fKsIi\n7hAysiNFG7k0nhJE9KTLlLo241y5Bd/fNVYz07CegR9NqPgEXM7AeAWuwAUx\nKoC7LNMfQPcIfjqVyaUaz6sp1wC7L3LNQCntyonEh3B4qRXJ9zPTR0WnsO9q\niwDP5ASel4XqDb5mIhQLI1/HOevZz8dveXgVpkS+LtI0845yxo1f56kPzK1L\nkVKT4pl5JISjmNzOg1i4vOdSiGB7ttxsCEplxAyyH/zzHhwsa9SvxkCbYVoa\nt9D/\r\n=m1QA\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"services@serverless.com","name":"serverless-main"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_1.0.1-4-g16d9fb3_1561740192734_0.3868251512495411"},"_hasShrinkwrap":false},"1.0.2":{"name":"@serverless/platform-sdk","version":"1.0.2","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"prepare":"npm run build","build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","lint:staged":"lint-staged","setup":"./scripts/setup.sh","setup:ci":"./scripts/setup-ci.sh","test":"./scripts/test.sh","test:ci":"snyk test && ./scripts/test-ci.sh","watch":"./scripts/watch.sh"},"dependencies":{"body-parser":"^1.19.0","chalk":"^2.4.1","cors":"^2.8.4","express":"^4.16.3","is-docker":"^1.1.0","isomorphic-fetch":"^2.2.1","jwt-decode":"^2.2.0","opn":"^5.5.0","querystring":"^0.2.0","ramda":"^0.25.0","rc":"^1.2.8","regenerator-runtime":"^0.13.1","source-map-support":"^0.5.12","uuid":"^3.3.2","write-file-atomic":"^2.4.2"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^21.2.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.17.2","eslint-plugin-prettier":"^2.6.1","jest-cli":"^21.2.0","lint-staged":"7.1.3","pre-commit":"^1.2.2","prettier":"^1.17.1","snyk":"^1.163.3"},"publishConfig":{"access":"public"},"lint-staged":{"*.js":["eslint --fix .","git add -A"]},"pre-commit":["lint:staged"],"gitHead":"16d9fb398018ff46a7b507deb872d958c865e529","_id":"@serverless/platform-sdk@1.0.2","_npmVersion":"6.4.1","_nodeVersion":"10.15.3","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-Aud1eQVUhqpREUtayATPEsk1+1+ph+gjB+AvGCFrD1dZoMSYDsfzyiPa8OoZAPwkfNmeuS1GjELqh3oKPkzPOQ==","shasum":"5456f2528885b72b9272526a807c96e0184942fd","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-1.0.2.tgz","fileCount":77,"unpackedSize":161197,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdFkh9CRA9TVsSAnZWagAAEkwP+QAEiTLfZlFQE8Uk4YjA\nCbDRUH7ZMP5DsDrMGYr0mKM6eTeoqdGjJLFqQ490Qw9B2Ku1RTH+gMviP7H/\njeeddM87lpQFukfSo0AqsULFTHIQIngxsakmvUyhZubIRhIc/iEXf3eEU3p3\nFou8f7DaJd+23EtWrTYilt2E3YQlCLbM6vK2wTmsgBMmCoDq1RGvnGrNVxp1\nXnOqzbvmgO11wrW4F9+Z/THff1Dj8fh1A/Q7PKrOpf54CziFBMJ/3950Ybia\nG7RhPxjRpgs1nFMrLK4IhOE0mSiRN+VrJfE4UWxMcimHCuQattk5RrM77Pop\n8dDnOcM/hdcNN+TfE8pOE4IHlmW+2aY3fDYqJdyrZqTQnZSRbEuXVJ0Zmtq+\nJDGEBuxg/aajZDCsqDhldtknpvSvnlj5HmrCEFB36zX9nmwFo351RsA1xG1h\nRplkeHPU2dnFAw6ZT9mHt/L6lnS5wn+h97DAhJUjlnCXp6Ot3YVZz1mlSaCG\nL3iu3BIUR1yN17Ow9kYblbIiwPOYslkv73sEPiZKE2zqHw/nkmAJDb6AVx/V\ncnq3WQp9DGKT+Jg/2hJfZpsJz9E+4m5JPqmhEJ+Pw5p90K3AN7OnzBQ3c1h1\n8kf1lhKQxpLJrvMCYvNSnlhJ3AX7QvZvb9lX73nT/lLHG3uC5F/Ul+060zjp\ne1jp\r\n=qptm\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"services@serverless.com","name":"serverless-main"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_1.0.2_1561741436772_0.9082626180519231"},"_hasShrinkwrap":false},"1.0.2-8-g1b71dd1":{"name":"@serverless/platform-sdk","version":"1.0.2-8-g1b71dd1","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"prepare":"npm run build","build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","lint:staged":"lint-staged","setup":"./scripts/setup.sh","setup:ci":"./scripts/setup-ci.sh","test":"./scripts/test.sh","test:ci":"snyk test && ./scripts/test-ci.sh","watch":"./scripts/watch.sh"},"dependencies":{"body-parser":"^1.19.0","chalk":"^2.4.1","cors":"^2.8.4","express":"^4.16.3","is-docker":"^1.1.0","isomorphic-fetch":"^2.2.1","jwt-decode":"^2.2.0","opn":"^5.5.0","querystring":"^0.2.0","ramda":"^0.25.0","rc":"^1.2.8","regenerator-runtime":"^0.13.1","source-map-support":"^0.5.12","uuid":"^3.3.2","write-file-atomic":"^2.4.2"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^21.2.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.17.2","eslint-plugin-prettier":"^2.6.1","jest-cli":"^21.2.0","lint-staged":"7.1.3","pre-commit":"^1.2.2","prettier":"^1.17.1","snyk":"^1.163.3"},"publishConfig":{"access":"public"},"lint-staged":{"*.js":["eslint --fix .","git add -A"]},"pre-commit":["lint:staged"],"gitHead":"1b71dd1b2d20b44ffd2d2c6fcf6cf77688c70a88","readme":"# Platform SDK\n\nFunctional SDK for the Serverless Platfrom.\n\n## Project Status\n\n[![Build Status](https://travis-ci.com/serverless/platform-sdk.svg)](https://travis-ci.com/serverless/platform-sdk)\n[![license](https://img.shields.io/npm/l/@serverless/platform-sdk.svg)](https://www.npmjs.com/package/@serverless/platform-sdk)\n[![coverage](https://img.shields.io/codecov/c/github/serverless/platform-sdk.svg)](https://codecov.io/gh/serverless/platform-sdk)\n[![Known Vulnerabilities](https://snyk.io/test/github/serverless/platform-sdk/badge.svg)](https://snyk.io/test/github/serverless/platform-sdk)\n\n## Contents\n\n- [Installation](#installation)\n- [Functions](#functions)\n  - [login](#login)\n  - [refreshToken](#refreshtoken)\n  - [createAccessKey](#createaccesskey)\n  - [archiveService](#archiveservice)\n  - [getServiceUrl](#getserviceurl)\n  - [listTenants](#listtenants)\n  - [createDeployment](#createdeployment)\n  - [updateDeployment](#updatedeployment)\n  - [getApp](#getapp)\n  - [createApp](#createapp)\n\n## installation\n\n```\nnpm i -s @serverless/platform-sdk\n```\n\n## Functions\n### `login`\nOpens a browser for the user to login, along with a running server awaiting auth data once the user logs in.\n\n**Parameters**\n\nNone\n\n**Returns**\n\nPromise resolving to the following object:\n\n- `username` - `string` - dashboard username\n- `accessToken` - `string` - Auth0 access token\n- `idToken` - `string` - Auth0 idToken\n- `refreshToken` - `string` - Auth0 refreshToken\n- `expiresAt` - `string` - epoch time at which the idToken expires\n\n**Example**\n\n```js\nconst { login } = require('@serverless/platform-sdk')\n\nconst { username, accessToken, idToken, expiresAt } = await login()\n```\n\n---\n\n### `refreshToken`\nRefreshes Auth0 idToken\n\n**Parameters**\n\nrefresh token string\n\n**Returns**\n\n\nPromise resolving to the following object:\n\n- `id_token` - `string` - new Auth0 id token\n- `access_token` - `string` - new Auth0 access token\n- `expires_in` - `string` - number of seconds until token expiration\n\n**Example**\n\n```js\nconst { refreshToken } = require('@serverless/platform-sdk')\n\nconst { id_token, access_token, expires_in } = await refreshToken('some-refresh-token')\n```\n\n---\n\n### `createAccessKey`\nCreates a platform access key for the authenticated user.\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `tenant` - `string` - dashboard tenant\n- `idToken` - `string` - Auth0 idToken\n- `title` - `string` - title of the access key\n\n**Returns**\n\nPromise resolving to an `accessKey` string, that is the access key.\n\n**Example**\n\n```js\nconst { createAccessKey } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  tenant: 'eahefnawy',\n  idToken: 'abc',\n  title: 'Framework'\n}\n\nconst accessKey = await createAccessKey(data)\n```\n\n---\n\n### `archiveService`\nArchives a service in the platform.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `accessKey` - `string` - dashboard access key\n- `app` - `string` - service app\n- `name` - `string` - service name\n- `provider` - `string` - provider name\n- `region` - `string` - region name\n\n**Returns**\n\nNone\n\n**Example**\n\n```js\nconst { archiveService } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  accessKey: 'abc',\n  app: 'my-app',\n  name: 'my-service',\n  provider: 'aws',\n  region: 'us-east-1'\n}\n\nawait archiveService(data)\n```\n\n---\n\n### `getServiceUrl`\nConstructs a service url based on passed-in data.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `app` - `string` - service app\n- `name` - `string` - service name\n\n\n**Returns**\n\nThe service url string.\n\n**Example**\n\n```js\nconst { getServiceUrl } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  name: 'my-service'\n}\n\nconst serviceUrl = getServiceUrl(data)\n```\n\n---\n\n### `listTenants`\nLists the tenants for a given username\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `idToken` - `string` - auth0 user id token\n\n\n**Returns**\n\nArray of objects, each represents a single tenant data model.\n\n**Example**\n\n```js\nconst { listTenants } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  idToken: 'abc'\n}\n\nconst tenants = await listTenants(data)\n```\n\n---\n\n### `createDeploymnet`\nCreates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `accessKey` - `string` - dashboard access key\n- `files` - `object` - files which should be stored in the Platforms deployment record\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { createDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  accessKey: 'abc',\n  files: {\n    'serverless-state.json': {\n      //...snip...\n    }\n  }\n}\n\nconst { id } = await createDeployment(data)\n```\n\n---\n\n### `updateDeployment`\nUpdates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `deploymentId` - `string` - id of the previously created deployment\n- `status` - `string` - status of the deployment to update\n- `accessKey` - `string` - dashboard access key\n- `computedData` - `object` - computed data the Platform needs to generate the state items\n\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { updateDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  deploymentId: 'abc',\n  status: 'failed',\n  accessKey: 'abc',\n  computedData: {\n    // ...snip...\n  }\n}\n\nconst { id } = await updateDeployment(data)\n```\n\n---\n\n### `getApp`\nGets a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { getApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await getApp(data)\n```\n\n---\n\n### `createApp`\nCreates a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { createApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await createApp(data)\n```\n","readmeFilename":"README.md","_id":"@serverless/platform-sdk@1.0.2-8-g1b71dd1","_npmVersion":"6.4.1","_nodeVersion":"10.15.3","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-Pur97HxShipQrr1teCbLalDdjVQ/I7wa/2e6exTM1QjLhUDyqefE9zoog4trr1o1nwuhIthWF1uOsmTyHdO2ig==","shasum":"09e50d8150fee3a3ae1923c0857b46b1cdd2fd3d","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-1.0.2-8-g1b71dd1.tgz","fileCount":85,"unpackedSize":172021,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdJNqgCRA9TVsSAnZWagAABt4P+wRpFpcT6lAARNPJMywA\n8WEUXOC59Opgutd98qwsrT2gUD8FtutTry3xAGF+0fzOuZ/Lgw1jS0PBRTyK\nGNWajQtJABt1jOYL7ixnwf5ZOhMreg8ssI3h9+JJt3TfV57VLJH5dOvsoUYT\n/KJvZgWwH9I+DWPDpJkT84wQx2MGwjQeG8NGhZo0DdYeucTMDq5k135K6QHA\nFV2oEY8gTuVqsKo+KhQI0J6ZyXsGmRBOgXdhopN3LXo6S7gH2pCtQkwxh2v3\naMkSr2fAnIuc1MlIOVeY9jsRFF/erslQffgkClDc8tFcF3WxOE6hqlwUgiAx\nWUojs6UJGglHB3d3P5eeTGNCeCabRIUkRtrGxlIAWhEK2t1aVK9yU3b9KwEc\nIKsXnEmdLkMvTVWTdxBy0wW+nL97VtLV4q6lGejjpbd+2wvBX4sDuIVndpQf\n+bpqlfDLqTlhml6ECpIOqeyza71raWNN+lDDNxl0/N8J2mRgm5zm2srhASHo\n25PimcRQH7WZZQvyZt4V2yhTaX7lt4tc15B+5mIP0m++voqHwCxRtW4PsVSu\nonsTqGa4kN4Re2nzoHay7iIRyg1OC5Ql5WLO8E7EihVAO6+5kPRi+H/y9zHU\nNS5BQ80jWdkyccCeMzpLvuIegGKJtVEqn6z2nB1oi5rGX2/kXrUh5dzgGQxa\n5YOF\r\n=TMkW\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"services@serverless.com","name":"serverless-main"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_1.0.2-8-g1b71dd1_1562696351353_0.7529942218707009"},"_hasShrinkwrap":false},"1.0.2-10-g1437fbc":{"name":"@serverless/platform-sdk","version":"1.0.2-10-g1437fbc","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"prepare":"npm run build","build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","lint:staged":"lint-staged","setup":"./scripts/setup.sh","setup:ci":"./scripts/setup-ci.sh","test":"./scripts/test.sh","test:ci":"snyk test && ./scripts/test-ci.sh","watch":"./scripts/watch.sh"},"dependencies":{"body-parser":"^1.19.0","chalk":"^2.4.1","cors":"^2.8.4","express":"^4.16.3","is-docker":"^1.1.0","isomorphic-fetch":"^2.2.1","jwt-decode":"^2.2.0","opn":"^5.5.0","querystring":"^0.2.0","ramda":"^0.25.0","rc":"^1.2.8","regenerator-runtime":"^0.13.1","source-map-support":"^0.5.12","uuid":"^3.3.2","write-file-atomic":"^2.4.2"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^21.2.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.17.2","eslint-plugin-prettier":"^2.6.1","jest-cli":"^21.2.0","lint-staged":"7.1.3","pre-commit":"^1.2.2","prettier":"^1.17.1","snyk":"^1.163.3"},"publishConfig":{"access":"public"},"lint-staged":{"*.js":["eslint --fix .","git add -A"]},"pre-commit":["lint:staged"],"gitHead":"1437fbc795b4d4ed918ea4fe027ae1b3685becbf","readme":"# Platform SDK\n\nFunctional SDK for the Serverless Platfrom.\n\n## Project Status\n\n[![Build Status](https://travis-ci.com/serverless/platform-sdk.svg)](https://travis-ci.com/serverless/platform-sdk)\n[![license](https://img.shields.io/npm/l/@serverless/platform-sdk.svg)](https://www.npmjs.com/package/@serverless/platform-sdk)\n[![coverage](https://img.shields.io/codecov/c/github/serverless/platform-sdk.svg)](https://codecov.io/gh/serverless/platform-sdk)\n[![Known Vulnerabilities](https://snyk.io/test/github/serverless/platform-sdk/badge.svg)](https://snyk.io/test/github/serverless/platform-sdk)\n\n## Contents\n\n- [Installation](#installation)\n- [Functions](#functions)\n  - [login](#login)\n  - [refreshToken](#refreshtoken)\n  - [createAccessKey](#createaccesskey)\n  - [archiveService](#archiveservice)\n  - [getServiceUrl](#getserviceurl)\n  - [listTenants](#listtenants)\n  - [createDeployment](#createdeployment)\n  - [updateDeployment](#updatedeployment)\n  - [getApp](#getapp)\n  - [createApp](#createapp)\n\n## installation\n\n```\nnpm i -s @serverless/platform-sdk\n```\n\n## Functions\n### `login`\nOpens a browser for the user to login, along with a running server awaiting auth data once the user logs in.\n\n**Parameters**\n\nNone\n\n**Returns**\n\nPromise resolving to the following object:\n\n- `username` - `string` - dashboard username\n- `accessToken` - `string` - Auth0 access token\n- `idToken` - `string` - Auth0 idToken\n- `refreshToken` - `string` - Auth0 refreshToken\n- `expiresAt` - `string` - epoch time at which the idToken expires\n\n**Example**\n\n```js\nconst { login } = require('@serverless/platform-sdk')\n\nconst { username, accessToken, idToken, expiresAt } = await login()\n```\n\n---\n\n### `refreshToken`\nRefreshes Auth0 idToken\n\n**Parameters**\n\nrefresh token string\n\n**Returns**\n\n\nPromise resolving to the following object:\n\n- `id_token` - `string` - new Auth0 id token\n- `access_token` - `string` - new Auth0 access token\n- `expires_in` - `string` - number of seconds until token expiration\n\n**Example**\n\n```js\nconst { refreshToken } = require('@serverless/platform-sdk')\n\nconst { id_token, access_token, expires_in } = await refreshToken('some-refresh-token')\n```\n\n---\n\n### `createAccessKey`\nCreates a platform access key for the authenticated user.\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `tenant` - `string` - dashboard tenant\n- `idToken` - `string` - Auth0 idToken\n- `title` - `string` - title of the access key\n\n**Returns**\n\nPromise resolving to an `accessKey` string, that is the access key.\n\n**Example**\n\n```js\nconst { createAccessKey } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  tenant: 'eahefnawy',\n  idToken: 'abc',\n  title: 'Framework'\n}\n\nconst accessKey = await createAccessKey(data)\n```\n\n---\n\n### `archiveService`\nArchives a service in the platform.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `accessKey` - `string` - dashboard access key\n- `app` - `string` - service app\n- `name` - `string` - service name\n- `provider` - `string` - provider name\n- `region` - `string` - region name\n\n**Returns**\n\nNone\n\n**Example**\n\n```js\nconst { archiveService } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  accessKey: 'abc',\n  app: 'my-app',\n  name: 'my-service',\n  provider: 'aws',\n  region: 'us-east-1'\n}\n\nawait archiveService(data)\n```\n\n---\n\n### `getServiceUrl`\nConstructs a service url based on passed-in data.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `app` - `string` - service app\n- `name` - `string` - service name\n\n\n**Returns**\n\nThe service url string.\n\n**Example**\n\n```js\nconst { getServiceUrl } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  name: 'my-service'\n}\n\nconst serviceUrl = getServiceUrl(data)\n```\n\n---\n\n### `listTenants`\nLists the tenants for a given username\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `idToken` - `string` - auth0 user id token\n\n\n**Returns**\n\nArray of objects, each represents a single tenant data model.\n\n**Example**\n\n```js\nconst { listTenants } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  idToken: 'abc'\n}\n\nconst tenants = await listTenants(data)\n```\n\n---\n\n### `createDeploymnet`\nCreates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `accessKey` - `string` - dashboard access key\n- `files` - `object` - files which should be stored in the Platforms deployment record\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { createDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  accessKey: 'abc',\n  files: {\n    'serverless-state.json': {\n      //...snip...\n    }\n  }\n}\n\nconst { id } = await createDeployment(data)\n```\n\n---\n\n### `updateDeployment`\nUpdates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `deploymentId` - `string` - id of the previously created deployment\n- `status` - `string` - status of the deployment to update\n- `accessKey` - `string` - dashboard access key\n- `computedData` - `object` - computed data the Platform needs to generate the state items\n\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { updateDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  deploymentId: 'abc',\n  status: 'failed',\n  accessKey: 'abc',\n  computedData: {\n    // ...snip...\n  }\n}\n\nconst { id } = await updateDeployment(data)\n```\n\n---\n\n### `getApp`\nGets a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { getApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await getApp(data)\n```\n\n---\n\n### `createApp`\nCreates a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { createApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await createApp(data)\n```\n","readmeFilename":"README.md","_id":"@serverless/platform-sdk@1.0.2-10-g1437fbc","_npmVersion":"6.4.1","_nodeVersion":"10.15.3","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-ICxdikj+LxEa9BhmyIO7SgCMC4r25UvORL01hFHEA223tLJIunMUJpYbeheWi02y0y3nT9GC5ox8ZDIfwO7oag==","shasum":"bf4d479989f875e89f3fb72007925a1f1318eff3","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-1.0.2-10-g1437fbc.tgz","fileCount":85,"unpackedSize":172024,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdKPQvCRA9TVsSAnZWagAAXcMP/31B7508CmW2l0UEXBs7\nrOSnft43qcTTtDAPzr6jyoO3VGYzejtnQFydl9nIhbRO+nT5s7VvJZN2jr3l\nhcsyvnqCXIFT3c8mwRa0p1riAPobWJj6Vi51svapFYNlAAGwUF8T0pXarANz\nb5K9JJHxOGISdPa8QSNiOkdqNar5/txj1XLfThdNmHZOAfjRkAf2YulxSDuP\nlqMzOLwxJD6iCSTUWPc55P8zYEurjr1neEhAsLdztAO1SrVpeAR7pHPlrDwi\nsg0q+dfvoarg3sGrxiJdjvlm9so7f4amrMg62eLBMyLv+zklASDiBSnugkO2\nNrmnBhTZELG4DdpeDvx3kj6/HRbV4YVLiDNLwOFKt5M5PFJAhW+hjmddGs58\nBoM/E64j8rmIs7naULrbDoJsw3pZMlXYCpoGAXEF2vHgpeyif1fqlcaYfB5Z\nBgNP7H7ettybFkmLvMjc9pstJrySAKwx4sOW6OmUJyIGFfTAs0UPkddYLv/s\nu9rYovOgJeB2izIOiwSoJvU6Rof8/N4c0u/wCROceJrD58E1EYkral4CgnNt\nwt7KLIuRTdOVeqt8eNnZlpFW6/LMmXpglKrx5WXdcTM0KlBNRez6VvxAZe28\ndkecFdhjxgnR4FILxKGzCx5bIAXhx+KKvh0E9rrorhVKPf1OWs8wusPBd6Ou\ncQhj\r\n=y9fE\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"services@serverless.com","name":"serverless-main"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_1.0.2-10-g1437fbc_1562965038449_0.7175708118708255"},"_hasShrinkwrap":false},"1.0.2-13-gfe23ad1":{"name":"@serverless/platform-sdk","version":"1.0.2-13-gfe23ad1","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"prepare":"npm run build","build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","lint:staged":"lint-staged","setup":"./scripts/setup.sh","setup:ci":"./scripts/setup-ci.sh","test":"./scripts/test.sh","test:ci":"snyk test && ./scripts/test-ci.sh","watch":"./scripts/watch.sh"},"dependencies":{"body-parser":"^1.19.0","chalk":"^2.4.1","cors":"^2.8.4","express":"^4.16.3","is-docker":"^1.1.0","isomorphic-fetch":"^2.2.1","jwt-decode":"^2.2.0","opn":"^5.5.0","querystring":"^0.2.0","ramda":"^0.25.0","rc":"^1.2.8","regenerator-runtime":"^0.13.1","source-map-support":"^0.5.12","uuid":"^3.3.2","write-file-atomic":"^2.4.2"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^21.2.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.17.2","eslint-plugin-prettier":"^2.6.1","jest-cli":"^21.2.0","lint-staged":"7.1.3","pre-commit":"^1.2.2","prettier":"^1.17.1","snyk":"^1.163.3"},"publishConfig":{"access":"public"},"lint-staged":{"*.js":["eslint --fix .","git add -A"]},"pre-commit":["lint:staged"],"gitHead":"fe23ad17924c2796a805332610aa3f5a32da0a95","readme":"# Platform SDK\n\nFunctional SDK for the Serverless Platfrom.\n\n## Project Status\n\n[![Build Status](https://travis-ci.com/serverless/platform-sdk.svg)](https://travis-ci.com/serverless/platform-sdk)\n[![license](https://img.shields.io/npm/l/@serverless/platform-sdk.svg)](https://www.npmjs.com/package/@serverless/platform-sdk)\n[![coverage](https://img.shields.io/codecov/c/github/serverless/platform-sdk.svg)](https://codecov.io/gh/serverless/platform-sdk)\n[![Known Vulnerabilities](https://snyk.io/test/github/serverless/platform-sdk/badge.svg)](https://snyk.io/test/github/serverless/platform-sdk)\n\n## Contents\n\n- [Installation](#installation)\n- [Functions](#functions)\n  - [login](#login)\n  - [refreshToken](#refreshtoken)\n  - [createAccessKey](#createaccesskey)\n  - [archiveService](#archiveservice)\n  - [getServiceUrl](#getserviceurl)\n  - [listTenants](#listtenants)\n  - [createDeployment](#createdeployment)\n  - [updateDeployment](#updatedeployment)\n  - [getApp](#getapp)\n  - [createApp](#createapp)\n\n## installation\n\n```\nnpm i -s @serverless/platform-sdk\n```\n\n## Functions\n### `login`\nOpens a browser for the user to login, along with a running server awaiting auth data once the user logs in.\n\n**Parameters**\n\nNone\n\n**Returns**\n\nPromise resolving to the following object:\n\n- `username` - `string` - dashboard username\n- `accessToken` - `string` - Auth0 access token\n- `idToken` - `string` - Auth0 idToken\n- `refreshToken` - `string` - Auth0 refreshToken\n- `expiresAt` - `string` - epoch time at which the idToken expires\n\n**Example**\n\n```js\nconst { login } = require('@serverless/platform-sdk')\n\nconst { username, accessToken, idToken, expiresAt } = await login()\n```\n\n---\n\n### `refreshToken`\nRefreshes Auth0 idToken\n\n**Parameters**\n\nrefresh token string\n\n**Returns**\n\n\nPromise resolving to the following object:\n\n- `id_token` - `string` - new Auth0 id token\n- `access_token` - `string` - new Auth0 access token\n- `expires_in` - `string` - number of seconds until token expiration\n\n**Example**\n\n```js\nconst { refreshToken } = require('@serverless/platform-sdk')\n\nconst { id_token, access_token, expires_in } = await refreshToken('some-refresh-token')\n```\n\n---\n\n### `createAccessKey`\nCreates a platform access key for the authenticated user.\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `tenant` - `string` - dashboard tenant\n- `idToken` - `string` - Auth0 idToken\n- `title` - `string` - title of the access key\n\n**Returns**\n\nPromise resolving to an `accessKey` string, that is the access key.\n\n**Example**\n\n```js\nconst { createAccessKey } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  tenant: 'eahefnawy',\n  idToken: 'abc',\n  title: 'Framework'\n}\n\nconst accessKey = await createAccessKey(data)\n```\n\n---\n\n### `archiveService`\nArchives a service in the platform.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `accessKey` - `string` - dashboard access key\n- `app` - `string` - service app\n- `name` - `string` - service name\n- `provider` - `string` - provider name\n- `region` - `string` - region name\n\n**Returns**\n\nNone\n\n**Example**\n\n```js\nconst { archiveService } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  accessKey: 'abc',\n  app: 'my-app',\n  name: 'my-service',\n  provider: 'aws',\n  region: 'us-east-1'\n}\n\nawait archiveService(data)\n```\n\n---\n\n### `getServiceUrl`\nConstructs a service url based on passed-in data.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `app` - `string` - service app\n- `name` - `string` - service name\n\n\n**Returns**\n\nThe service url string.\n\n**Example**\n\n```js\nconst { getServiceUrl } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  name: 'my-service'\n}\n\nconst serviceUrl = getServiceUrl(data)\n```\n\n---\n\n### `listTenants`\nLists the tenants for a given username\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `idToken` - `string` - auth0 user id token\n\n\n**Returns**\n\nArray of objects, each represents a single tenant data model.\n\n**Example**\n\n```js\nconst { listTenants } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  idToken: 'abc'\n}\n\nconst tenants = await listTenants(data)\n```\n\n---\n\n### `createDeploymnet`\nCreates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `accessKey` - `string` - dashboard access key\n- `files` - `object` - files which should be stored in the Platforms deployment record\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { createDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  accessKey: 'abc',\n  files: {\n    'serverless-state.json': {\n      //...snip...\n    }\n  }\n}\n\nconst { id } = await createDeployment(data)\n```\n\n---\n\n### `updateDeployment`\nUpdates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `deploymentId` - `string` - id of the previously created deployment\n- `status` - `string` - status of the deployment to update\n- `accessKey` - `string` - dashboard access key\n- `computedData` - `object` - computed data the Platform needs to generate the state items\n\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { updateDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  deploymentId: 'abc',\n  status: 'failed',\n  accessKey: 'abc',\n  computedData: {\n    // ...snip...\n  }\n}\n\nconst { id } = await updateDeployment(data)\n```\n\n---\n\n### `getApp`\nGets a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { getApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await getApp(data)\n```\n\n---\n\n### `createApp`\nCreates a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { createApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await createApp(data)\n```\n","readmeFilename":"README.md","_id":"@serverless/platform-sdk@1.0.2-13-gfe23ad1","_npmVersion":"6.4.1","_nodeVersion":"10.15.3","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-j3VE6XJZ4GELK3eTlkXSsysXSEL2GIyGUfXCZZNLWh+MeQss+vIIOGH8QQK5S3KkDXlSJhrnUycaBxT2aYYM8Q==","shasum":"22e4b1b46d92ad79aef6dfa001acd3f8f0c01b2a","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-1.0.2-13-gfe23ad1.tgz","fileCount":85,"unpackedSize":172279,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdLKe0CRA9TVsSAnZWagAA/BYQAJGlAYpwfmiVbWctk27w\nGUqMX9g243ZTBR2DS0jVA/lJPpw2FmslGKvAt2D6BBUxd6r388SXW8aGgxDm\nXUAc1twlXBnOM8NWlMQdGovNVIb59dhqJUqgrbYM5R2CzF90hi77vyYIsyyG\nzRpwxYP23Iwugfby1lgqwum+MJYAcO0wDbQMtq3tT3lzVTbC43/3ptGe188F\nG0ETjetE5406m02qQOACEc7JEptfKYOXAGojXpqPyQJyoQmglEp+zkLAOITH\nnNrPo9dMWFSehnYgocSHs6qFoG6F36A1QJBgDTN0HS9g8nxwRF76W2FtVcy4\nSAWCJfUau/yBuD6NeLBY6j01WKUbxUSJI4k42CAiCfAsAzKS7+Y3TnID50oY\n2/SIFAXtn2F89zA4ASMzkGMCTrXwJ72h3UZ53u5d8qf5HRw70+egiQG1Ea4L\nnbY8jqrizFTkLdmPli7vJ7ozdFcloLv/VW58AZWda69kqx80sTi0kqOQ1MOT\nCu2489eCHUDHFV4TbfyWU+bqJ3qPOF1b5pymNcblvOsuYJ5HXB4dw+dpwBHY\nIiFI14idvdony3Ap+j3r07GF5O7CajL5wd4RKQlhFAoZc7sQoLc8ck0n5nP0\nZQWr3jeEY/pOMwI9BRaMUI1FBOOJvu9C4iW/mWkPwktMytX045Sz3qQjaEc0\nvSpt\r\n=eHQH\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"services@serverless.com","name":"serverless-main"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_1.0.2-13-gfe23ad1_1563207604211_0.2281046041479604"},"_hasShrinkwrap":false},"2.0.0":{"name":"@serverless/platform-sdk","version":"2.0.0","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"prepare":"npm run build","build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","lint:staged":"lint-staged","setup":"./scripts/setup.sh","setup:ci":"./scripts/setup-ci.sh","test":"./scripts/test.sh","test:ci":"snyk test && ./scripts/test-ci.sh","watch":"./scripts/watch.sh"},"dependencies":{"body-parser":"^1.19.0","chalk":"^2.4.1","cors":"^2.8.4","express":"^4.16.3","is-docker":"^1.1.0","isomorphic-fetch":"^2.2.1","jwt-decode":"^2.2.0","opn":"^5.5.0","querystring":"^0.2.0","ramda":"^0.25.0","rc":"^1.2.8","regenerator-runtime":"^0.13.1","source-map-support":"^0.5.12","uuid":"^3.3.2","write-file-atomic":"^2.4.2"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^21.2.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.17.2","eslint-plugin-prettier":"^2.6.1","jest-cli":"^21.2.0","lint-staged":"7.1.3","pre-commit":"^1.2.2","prettier":"^1.17.1","snyk":"^1.163.3"},"publishConfig":{"access":"public"},"lint-staged":{"*.js":["eslint --fix .","git add -A"]},"pre-commit":["lint:staged"],"gitHead":"fe23ad17924c2796a805332610aa3f5a32da0a95","_id":"@serverless/platform-sdk@2.0.0","_npmVersion":"6.4.1","_nodeVersion":"10.15.3","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-E4xCUtR+Z9HnMkYGY7E7W2Yq8ulzm+baaX122ynwlo2oBJVs/NgYYfEWS/oqP2XsUajVTePOoiwogt/fC/nE3A==","shasum":"2dace1958b4cad2656ec120bb7945e8003f195f4","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-2.0.0.tgz","fileCount":85,"unpackedSize":172267,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdLKgwCRA9TVsSAnZWagAAL6cQAKMurm3r19vR9kIGj1iY\nZ9iJtkB6UoFi5L9rP7/zINW8yFU3D6nrhCZcps720ImaAmrVmpLh4MABabtB\nca0RfdE9w1nqh8tVfWGVhTb6Wg8Y530TkxB8hMZKreMKgc4l1opyT6T/OvW+\nkDCY/YTH0CyRi79jYwS4nul0ZvA33edUacQvWXSd7nGmqH4ZTqT1XGHlQDz5\ntb3XcjBmxRO3juyjH+TiE3f8om9YENZWdQPFGlJO0htR48UsVoLFcAv3myPu\nlBjlW7g1+th8fKOlVmdjwDrAbj5TrMbL4qxZ0b5g0ETR02kWQRmcmKj4Jfj1\n6e4iBU+PjNQ5hMZFYwe18ztaRhQKq1KalWHROEKmoxYBoum7GUaK7YMd4rPX\nz+1sa3HiOwAERUULnOILiOk8SxMc4UFo1yab5GqC50oM7HV2YfQT9lLhSpSk\nj+sgZx9MYnN23tbvqkspFzSdck9kZjCkmY9KoHBu8UVyv4Nt6rmCPRY5LJzb\nzw2QshyS3RZXcuqw5EJ/mTatQDjFrhWeey/iACGLQzAssf3Yd2F+hzHEiJlT\npEk8N0GuWuT3/+3WPGMsAzX032SS8JAcwHHsNlkV8VILVVKYRyuF7ZDpGs4Y\n48JjjW3o42W/RNxM4bFprrgdqnW4Tx8QofV1cBbrZGboyPbJrHXlzNRbfXIn\n44lz\r\n=Syps\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"services@serverless.com","name":"serverless-main"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_2.0.0_1563207728119_0.8490673751148052"},"_hasShrinkwrap":false},"2.0.0-5-g7a1454c":{"name":"@serverless/platform-sdk","version":"2.0.0-5-g7a1454c","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"prepare":"npm run build","build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","lint:staged":"lint-staged","setup":"./scripts/setup.sh","setup:ci":"./scripts/setup-ci.sh","test":"./scripts/test.sh","test:ci":"snyk test && ./scripts/test-ci.sh","watch":"./scripts/watch.sh"},"dependencies":{"body-parser":"^1.19.0","chalk":"^2.4.1","cors":"^2.8.4","express":"^4.16.3","is-docker":"^1.1.0","isomorphic-fetch":"^2.2.1","jwt-decode":"^2.2.0","opn":"^5.5.0","querystring":"^0.2.0","ramda":"^0.25.0","rc":"^1.2.8","regenerator-runtime":"^0.13.1","source-map-support":"^0.5.12","uuid":"^3.3.2","write-file-atomic":"^2.4.2"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^21.2.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.17.2","eslint-plugin-prettier":"^2.6.1","jest-cli":"^21.2.0","lint-staged":"7.1.3","pre-commit":"^1.2.2","prettier":"^1.17.1","snyk":"^1.163.3"},"publishConfig":{"access":"public"},"lint-staged":{"*.js":["eslint --fix .","git add -A"]},"pre-commit":["lint:staged"],"gitHead":"7a1454c9c6d1c9411a835a0c94cbbb880f8e9e07","readme":"# Platform SDK\n\nFunctional SDK for the Serverless Platfrom.\n\n## Project Status\n\n[![Build Status](https://travis-ci.com/serverless/platform-sdk.svg)](https://travis-ci.com/serverless/platform-sdk)\n[![license](https://img.shields.io/npm/l/@serverless/platform-sdk.svg)](https://www.npmjs.com/package/@serverless/platform-sdk)\n[![coverage](https://img.shields.io/codecov/c/github/serverless/platform-sdk.svg)](https://codecov.io/gh/serverless/platform-sdk)\n[![Known Vulnerabilities](https://snyk.io/test/github/serverless/platform-sdk/badge.svg)](https://snyk.io/test/github/serverless/platform-sdk)\n\n## Contents\n\n- [Installation](#installation)\n- [Functions](#functions)\n  - [login](#login)\n  - [refreshToken](#refreshtoken)\n  - [createAccessKey](#createaccesskey)\n  - [archiveService](#archiveservice)\n  - [getServiceUrl](#getserviceurl)\n  - [listTenants](#listtenants)\n  - [createDeployment](#createdeployment)\n  - [updateDeployment](#updatedeployment)\n  - [getApp](#getapp)\n  - [createApp](#createapp)\n\n## installation\n\n```\nnpm i -s @serverless/platform-sdk\n```\n\n## Functions\n### `login`\nOpens a browser for the user to login, along with a running server awaiting auth data once the user logs in.\n\n**Parameters**\n\nNone\n\n**Returns**\n\nPromise resolving to the following object:\n\n- `username` - `string` - dashboard username\n- `accessToken` - `string` - Auth0 access token\n- `idToken` - `string` - Auth0 idToken\n- `refreshToken` - `string` - Auth0 refreshToken\n- `expiresAt` - `string` - epoch time at which the idToken expires\n\n**Example**\n\n```js\nconst { login } = require('@serverless/platform-sdk')\n\nconst { username, accessToken, idToken, expiresAt } = await login()\n```\n\n---\n\n### `refreshToken`\nRefreshes Auth0 idToken\n\n**Parameters**\n\nrefresh token string\n\n**Returns**\n\n\nPromise resolving to the following object:\n\n- `id_token` - `string` - new Auth0 id token\n- `access_token` - `string` - new Auth0 access token\n- `expires_in` - `string` - number of seconds until token expiration\n\n**Example**\n\n```js\nconst { refreshToken } = require('@serverless/platform-sdk')\n\nconst { id_token, access_token, expires_in } = await refreshToken('some-refresh-token')\n```\n\n---\n\n### `createAccessKey`\nCreates a platform access key for the authenticated user.\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `tenant` - `string` - dashboard tenant\n- `idToken` - `string` - Auth0 idToken\n- `title` - `string` - title of the access key\n\n**Returns**\n\nPromise resolving to an `accessKey` string, that is the access key.\n\n**Example**\n\n```js\nconst { createAccessKey } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  tenant: 'eahefnawy',\n  idToken: 'abc',\n  title: 'Framework'\n}\n\nconst accessKey = await createAccessKey(data)\n```\n\n---\n\n### `archiveService`\nArchives a service in the platform.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `accessKey` - `string` - dashboard access key\n- `app` - `string` - service app\n- `name` - `string` - service name\n- `provider` - `string` - provider name\n- `region` - `string` - region name\n\n**Returns**\n\nNone\n\n**Example**\n\n```js\nconst { archiveService } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  accessKey: 'abc',\n  app: 'my-app',\n  name: 'my-service',\n  provider: 'aws',\n  region: 'us-east-1'\n}\n\nawait archiveService(data)\n```\n\n---\n\n### `getServiceUrl`\nConstructs a service url based on passed-in data.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `app` - `string` - service app\n- `name` - `string` - service name\n\n\n**Returns**\n\nThe service url string.\n\n**Example**\n\n```js\nconst { getServiceUrl } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  name: 'my-service'\n}\n\nconst serviceUrl = getServiceUrl(data)\n```\n\n---\n\n### `listTenants`\nLists the tenants for a given username\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `idToken` - `string` - auth0 user id token\n\n\n**Returns**\n\nArray of objects, each represents a single tenant data model.\n\n**Example**\n\n```js\nconst { listTenants } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  idToken: 'abc'\n}\n\nconst tenants = await listTenants(data)\n```\n\n---\n\n### `createDeploymnet`\nCreates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `accessKey` - `string` - dashboard access key\n- `files` - `object` - files which should be stored in the Platforms deployment record\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { createDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  accessKey: 'abc',\n  files: {\n    'serverless-state.json': {\n      //...snip...\n    }\n  }\n}\n\nconst { id } = await createDeployment(data)\n```\n\n---\n\n### `updateDeployment`\nUpdates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `deploymentId` - `string` - id of the previously created deployment\n- `status` - `string` - status of the deployment to update\n- `accessKey` - `string` - dashboard access key\n- `computedData` - `object` - computed data the Platform needs to generate the state items\n\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { updateDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  deploymentId: 'abc',\n  status: 'failed',\n  accessKey: 'abc',\n  computedData: {\n    // ...snip...\n  }\n}\n\nconst { id } = await updateDeployment(data)\n```\n\n---\n\n### `getApp`\nGets a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { getApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await getApp(data)\n```\n\n---\n\n### `createApp`\nCreates a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { createApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await createApp(data)\n```\n","readmeFilename":"README.md","_id":"@serverless/platform-sdk@2.0.0-5-g7a1454c","_npmVersion":"6.4.1","_nodeVersion":"10.15.3","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-tUdX24MrfuLdCbbrbV9ZnU644vCJpSWyY3cFcsT5NW7oVMnDjBAJ12yhUUqfU4nAW2Dc9ebG9DBOMBEkzISLVw==","shasum":"b34d75174a6c629ecf694621646770ef4d34b0e1","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-2.0.0-5-g7a1454c.tgz","fileCount":85,"unpackedSize":173584,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdLOLJCRA9TVsSAnZWagAAxOIQAJnmrSXy2Z0JtYjeGlST\nEM8IEUjXh/SvDs4OVa3D9mPNHzsEYLvy++D1W2ZeYVRz5L9NRbRcedC1h27r\nql2TiGISfPVlYoyNbd97cb0pU+HgVIjhusErrpF829998I14W+6wq/voRK3w\nHva25QbcttR6lkt4AbiAGzby1RuxvYLPlBuewNGzA9/jfdw992OuBDV4z+3L\n15D2aGjpGcV2k7THa5ibmOgd+0tBaUZO7Lz6D/7/fntE3wroq6a5B5lg8D4a\nHnA3TUqOjPfPvbZBBma4JJ58jRSvp/uowljkBOS2eh8Qc1XsvKlO9RO60JHH\nyR4p0tDdO15DXdleg1k86w/WNUUw7rmAIz0TdZcn1zJ6KCrG/BXF49VkeoHf\nNSmhSheUR2bTRqDfUEos1/rDrshXINgOLRXH11vy/j7yDPRhG0Mk6VQVXtmd\nXkw6jWt2IoaxYtsfnlUeET+OKHxUJHEhdAtmyUjrkhKIrAZkLJtaQSZ8nQjz\nwiiENEyrRW0d+90J1ZmMX0y5o1p2WtCAb3e/dlWlbD/BqPYs+OpSDmGqReP7\n5oWfdo0o0GxsQPHerUpJSoTFrLMLjldc8FRNrg4pSlJiTvl/dE9w3kDkba6W\nxtOXToJYSD5iglTeWojXdJCS5SGmA/oefiFrYldP+7dySjvalzMl7q8h1Z25\n8Z4E\r\n=+tus\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"services@serverless.com","name":"serverless-main"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_2.0.0-5-g7a1454c_1563222728536_0.1621349713442235"},"_hasShrinkwrap":false},"2.0.1":{"name":"@serverless/platform-sdk","version":"2.0.1","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"prepare":"npm run build","build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","lint:staged":"lint-staged","setup":"./scripts/setup.sh","setup:ci":"./scripts/setup-ci.sh","test":"./scripts/test.sh","test:ci":"snyk test && ./scripts/test-ci.sh","watch":"./scripts/watch.sh"},"dependencies":{"body-parser":"^1.19.0","chalk":"^2.4.1","cors":"^2.8.4","express":"^4.16.3","is-docker":"^1.1.0","isomorphic-fetch":"^2.2.1","jwt-decode":"^2.2.0","opn":"^5.5.0","querystring":"^0.2.0","ramda":"^0.25.0","rc":"^1.2.8","regenerator-runtime":"^0.13.1","source-map-support":"^0.5.12","uuid":"^3.3.2","write-file-atomic":"^2.4.2"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^21.2.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.17.2","eslint-plugin-prettier":"^2.6.1","jest-cli":"^21.2.0","lint-staged":"7.1.3","pre-commit":"^1.2.2","prettier":"^1.17.1","snyk":"^1.163.3"},"publishConfig":{"access":"public"},"lint-staged":{"*.js":["eslint --fix .","git add -A"]},"pre-commit":["lint:staged"],"gitHead":"7a1454c9c6d1c9411a835a0c94cbbb880f8e9e07","_id":"@serverless/platform-sdk@2.0.1","_npmVersion":"6.4.1","_nodeVersion":"10.15.3","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-nuGI3wKLLeoks9IlaVmIYr7hO91JyzNFRkSqa+0wPWruzqDOeBWhsSL95UcVFz8JESqjTHp+4CI3v66pioxqow==","shasum":"10c1890ba808c73ba7faf5227b7de44efd01a2b1","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-2.0.1.tgz","fileCount":85,"unpackedSize":173573,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdLONICRA9TVsSAnZWagAA5m4P/0rvx87/ORpu6vyQ2c07\nkBXZxkyiN5LV7gTvVf3+U5doB5NaI+JYCLZfwE+09+wx+d2lDL2W/pDZAygd\noSbMNO2oYMcIzZNXAlXBsVMSSxJBO9FiwJ2s2rggUUvxrNCpC949a4muIbpo\nEc+NMMT9FY4Ix8wnlZUHum9c8qllPpQyeTrFU7zJ0/PmbTJLZBZK3VoSkOvc\nbPGD87Qs3jK38zAnkBtr7bvwAZGyiMeCk+Uiq/gb1BuOi7M/IG/fEfYQDijx\nYhMkFG7smapuEkoUEybZahqV9SpuKTPaHnqKCdR9AuGfHhNxU0J62zbkcdBO\nSr716AelLmTp2yuex6Od03ITYnXOjI654UFNQzDDg4lgU+89K/39cwztc/QF\nJCSB90geZxd6UyBDCeDomVWey3seX/HW/V8ROF60ckICpebTDn3pJX4tgWLS\nz7JIdLSN62I/4iowPu5eXey4HF03HeuKcAjno2nXWTEBxKUDIvYUbEhnqdcr\nDq2L9LGDCjTVp+EVEbcPIxwelXVqU9mh1KkwHXy4KHTx10KNf2W6q82ASN1h\nV54agBO7Huc3kqoLr0LNcSlKQLIIei9F6wESE6UtLhuu+N074yHQng6KkxEb\njzYHeDczP+NlwZUqSUyUeCoHNR20ZRUGz/uWknf7A0MI9Z6u/gDC0JfIiIHs\nM+kW\r\n=P2D4\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"services@serverless.com","name":"serverless-main"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_2.0.1_1563222855697_0.5523297096785635"},"_hasShrinkwrap":false},"2.0.1-4-g193f754":{"name":"@serverless/platform-sdk","version":"2.0.1-4-g193f754","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"prepare":"npm run build","build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","lint:staged":"lint-staged","setup":"./scripts/setup.sh","setup:ci":"./scripts/setup-ci.sh","test":"./scripts/test.sh","test:ci":"snyk test && ./scripts/test-ci.sh","watch":"./scripts/watch.sh"},"dependencies":{"body-parser":"^1.19.0","chalk":"^2.4.1","cors":"^2.8.4","express":"^4.16.3","is-docker":"^1.1.0","isomorphic-fetch":"^2.2.1","jwt-decode":"^2.2.0","opn":"^5.5.0","querystring":"^0.2.0","ramda":"^0.25.0","rc":"^1.2.8","regenerator-runtime":"^0.13.1","source-map-support":"^0.5.12","uuid":"^3.3.2","write-file-atomic":"^2.4.2"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^21.2.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.17.2","eslint-plugin-prettier":"^2.6.1","jest-cli":"^21.2.0","lint-staged":"7.1.3","pre-commit":"^1.2.2","prettier":"^1.17.1","snyk":"^1.163.3"},"publishConfig":{"access":"public"},"lint-staged":{"*.js":["eslint --fix .","git add -A"]},"pre-commit":["lint:staged"],"gitHead":"193f75450c6889639d76246fef9de732000b269f","readme":"# Platform SDK\n\nFunctional SDK for the Serverless Platfrom.\n\n## Project Status\n\n[![Build Status](https://travis-ci.com/serverless/platform-sdk.svg)](https://travis-ci.com/serverless/platform-sdk)\n[![license](https://img.shields.io/npm/l/@serverless/platform-sdk.svg)](https://www.npmjs.com/package/@serverless/platform-sdk)\n[![coverage](https://img.shields.io/codecov/c/github/serverless/platform-sdk.svg)](https://codecov.io/gh/serverless/platform-sdk)\n[![Known Vulnerabilities](https://snyk.io/test/github/serverless/platform-sdk/badge.svg)](https://snyk.io/test/github/serverless/platform-sdk)\n\n## Contents\n\n- [Installation](#installation)\n- [Functions](#functions)\n  - [login](#login)\n  - [refreshToken](#refreshtoken)\n  - [createAccessKey](#createaccesskey)\n  - [archiveService](#archiveservice)\n  - [getServiceUrl](#getserviceurl)\n  - [listTenants](#listtenants)\n  - [createDeployment](#createdeployment)\n  - [updateDeployment](#updatedeployment)\n  - [getApp](#getapp)\n  - [createApp](#createapp)\n\n## installation\n\n```\nnpm i -s @serverless/platform-sdk\n```\n\n## Functions\n### `login`\nOpens a browser for the user to login, along with a running server awaiting auth data once the user logs in.\n\n**Parameters**\n\nNone\n\n**Returns**\n\nPromise resolving to the following object:\n\n- `username` - `string` - dashboard username\n- `accessToken` - `string` - Auth0 access token\n- `idToken` - `string` - Auth0 idToken\n- `refreshToken` - `string` - Auth0 refreshToken\n- `expiresAt` - `string` - epoch time at which the idToken expires\n\n**Example**\n\n```js\nconst { login } = require('@serverless/platform-sdk')\n\nconst { username, accessToken, idToken, expiresAt } = await login()\n```\n\n---\n\n### `refreshToken`\nRefreshes Auth0 idToken\n\n**Parameters**\n\nrefresh token string\n\n**Returns**\n\n\nPromise resolving to the following object:\n\n- `id_token` - `string` - new Auth0 id token\n- `access_token` - `string` - new Auth0 access token\n- `expires_in` - `string` - number of seconds until token expiration\n\n**Example**\n\n```js\nconst { refreshToken } = require('@serverless/platform-sdk')\n\nconst { id_token, access_token, expires_in } = await refreshToken('some-refresh-token')\n```\n\n---\n\n### `createAccessKey`\nCreates a platform access key for the authenticated user.\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `tenant` - `string` - dashboard tenant\n- `idToken` - `string` - Auth0 idToken\n- `title` - `string` - title of the access key\n\n**Returns**\n\nPromise resolving to an `accessKey` string, that is the access key.\n\n**Example**\n\n```js\nconst { createAccessKey } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  tenant: 'eahefnawy',\n  idToken: 'abc',\n  title: 'Framework'\n}\n\nconst accessKey = await createAccessKey(data)\n```\n\n---\n\n### `archiveService`\nArchives a service in the platform.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `accessKey` - `string` - dashboard access key\n- `app` - `string` - service app\n- `name` - `string` - service name\n- `provider` - `string` - provider name\n- `region` - `string` - region name\n\n**Returns**\n\nNone\n\n**Example**\n\n```js\nconst { archiveService } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  accessKey: 'abc',\n  app: 'my-app',\n  name: 'my-service',\n  provider: 'aws',\n  region: 'us-east-1'\n}\n\nawait archiveService(data)\n```\n\n---\n\n### `getServiceUrl`\nConstructs a service url based on passed-in data.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `app` - `string` - service app\n- `name` - `string` - service name\n\n\n**Returns**\n\nThe service url string.\n\n**Example**\n\n```js\nconst { getServiceUrl } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  name: 'my-service'\n}\n\nconst serviceUrl = getServiceUrl(data)\n```\n\n---\n\n### `listTenants`\nLists the tenants for a given username\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `idToken` - `string` - auth0 user id token\n\n\n**Returns**\n\nArray of objects, each represents a single tenant data model.\n\n**Example**\n\n```js\nconst { listTenants } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  idToken: 'abc'\n}\n\nconst tenants = await listTenants(data)\n```\n\n---\n\n### `createDeploymnet`\nCreates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `accessKey` - `string` - dashboard access key\n- `files` - `object` - files which should be stored in the Platforms deployment record\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { createDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  accessKey: 'abc',\n  files: {\n    'serverless-state.json': {\n      //...snip...\n    }\n  }\n}\n\nconst { id } = await createDeployment(data)\n```\n\n---\n\n### `updateDeployment`\nUpdates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `deploymentId` - `string` - id of the previously created deployment\n- `status` - `string` - status of the deployment to update\n- `accessKey` - `string` - dashboard access key\n- `computedData` - `object` - computed data the Platform needs to generate the state items\n\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { updateDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  deploymentId: 'abc',\n  status: 'failed',\n  accessKey: 'abc',\n  computedData: {\n    // ...snip...\n  }\n}\n\nconst { id } = await updateDeployment(data)\n```\n\n---\n\n### `getApp`\nGets a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { getApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await getApp(data)\n```\n\n---\n\n### `createApp`\nCreates a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { createApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await createApp(data)\n```\n","readmeFilename":"README.md","_id":"@serverless/platform-sdk@2.0.1-4-g193f754","_npmVersion":"6.4.1","_nodeVersion":"10.15.3","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-z6+lRe8J7Osvc5K+/k+tcWnhXd3RPUMZhl5+bILPiF2NDkXiYBPX5GFq0/Q79xFI1rB5D+8htmwZcDe/n7f3uw==","shasum":"f2a9c6b475f8a6c31b34f385a8bdca3aadf607d7","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-2.0.1-4-g193f754.tgz","fileCount":85,"unpackedSize":173688,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdLij9CRA9TVsSAnZWagAAgwoP/RCrxuW5eNWyRZUEQstl\n8/FPig8v0PG5RG6C4NFHDWvDh6XtL7e4/UPQUFI8CwYuDpH3ilKb64Rw2fb5\nb03GxWFEqpufXLlCnNjzCH/Gjx9hIUBGQv8EI1ziW7jEjebB+arMaRprKFkG\nYeHsPsHYdAW2EpinAy6FV5tokg1h1jYnSFxAU8fVqKFAlF7uK/E9j1+/LPRi\nNrNljV442BXs6JlkNuvNzfkVxy28NU4SdB2KKo/zXeDP+iyltdFmDwIVX0Uc\nsQOwy57vi79rV9RO8K5++Z/GT945BGirExjxesOZB5BwAW7tEQ0Yh8KGfrKM\nELW3kDaZi2AEDYPMSheYBXl3qZspy/i+32yDum0dC4+iN751VRG0a/0535Sn\n6JSD7DkWIb0L6bDMGh8EdHoZSWHvU6Nl56dFDdIowzfKZzz2B+loope0vLtY\n88NusKgmWnVp9ZN3BRAFETbfdbTR/tBNGGzS4G4GkxMujlsQRdzklaAflvdp\n/awNvyN4l4qp08qkii4VUcaxq7VYZ0q/W7PrTgb0MvPgzMpSxTe/pta1OsaQ\nn9QOjom/ojZ85tQGcIFLaLrM3v/UZoR9lWTYyN7KXJZAzfB0pKN4G/hHcKN8\nOiSDUdpYoqzHU1rdtTN4ImvSEUjzNhoNLMaSrCAeP3QTXS1CrtvGzhHzAZQa\nlE4S\r\n=QRzm\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"services@serverless.com","name":"serverless-main"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_2.0.1-4-g193f754_1563306236459_0.5422360816880838"},"_hasShrinkwrap":false},"2.0.2":{"name":"@serverless/platform-sdk","version":"2.0.2","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"prepare":"npm run build","build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","lint:staged":"lint-staged","setup":"./scripts/setup.sh","setup:ci":"./scripts/setup-ci.sh","test":"./scripts/test.sh","test:ci":"snyk test && ./scripts/test-ci.sh","watch":"./scripts/watch.sh"},"dependencies":{"body-parser":"^1.19.0","chalk":"^2.4.1","cors":"^2.8.4","express":"^4.16.3","is-docker":"^1.1.0","isomorphic-fetch":"^2.2.1","jwt-decode":"^2.2.0","opn":"^5.5.0","querystring":"^0.2.0","ramda":"^0.25.0","rc":"^1.2.8","regenerator-runtime":"^0.13.1","source-map-support":"^0.5.12","uuid":"^3.3.2","write-file-atomic":"^2.4.2"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^21.2.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.17.2","eslint-plugin-prettier":"^2.6.1","jest-cli":"^21.2.0","lint-staged":"7.1.3","pre-commit":"^1.2.2","prettier":"^1.17.1","snyk":"^1.163.3"},"publishConfig":{"access":"public"},"lint-staged":{"*.js":["eslint --fix .","git add -A"]},"pre-commit":["lint:staged"],"gitHead":"193f75450c6889639d76246fef9de732000b269f","_id":"@serverless/platform-sdk@2.0.2","_npmVersion":"6.4.1","_nodeVersion":"10.15.3","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-VnRmu2a+NSrxQRGSiffjmpKVxjFcYl/RN5g02fquurql0HBPyS9/OCrALzELDNPDSCOMjOGcO35U7neVwxJK4g==","shasum":"6d522d89b77bd2a89ad63d1bfb1ed65abc6ace6f","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-2.0.2.tgz","fileCount":85,"unpackedSize":173677,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdLit2CRA9TVsSAnZWagAA/QgP/0en6lS9DIzowa5E1VDm\n7oivmbPIg8wyCVT21+UmtE2HZRHobq+QjHt2CioVqlkTcgbh2SRluZbcIhum\n/BZR5a4Bcyht4wIxhZYeinNcQuo2yudlAldUn69bPawMEmg+Cvbb82CvmG8L\nkzz7grzmItBGZpFv2e1L4FoVtH/1rnYFr5RHNrR3XZUOqqmliyrOKPti3CJx\nf+yr04ypbnEJpSUVI62sucsi37a9Rk8/hAqzpTSqvzECFXeUbaqB+Oa73vxO\nrR1/C0+a+mKsy9vQy4GT5/pBpPQAxolx5clp/B/ksI4F1JI9mBi/gvCg5s9b\nNHTkxKhPriADBJQwAM3b/bbp2s64O+mRXOLGQ9efE/sQ1Jipx2opJIP6w5FP\nx/a2gieqANWD13hrDQkxjL8Aqx+0sZfJhF7t/I7+DvcB3qB2KAT+imk/ezxw\nkQsgb66Rq//I9Rd0xYcuboPUDQuIj+SAAYCuFjOhU9hbQ4viWgLAGTwYiCw/\nVoOjuAGYS+6bskJjAN4NB0915+y8yp4HfITzKLovPQ5FAhpofr8qNpHku2lx\nQYgk/YO0NtbwU9eRmYy6AfWfmZlc5dywbptRXJMO5NEqs8qiX+ldMpTmfNoO\n+VW4uNYndhUVD8l4AIP1w/oe2KYkWZQYB3pFw7LuSbbzrvewqMfe6bomPEzI\nhNRi\r\n=342L\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"services@serverless.com","name":"serverless-main"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_2.0.2_1563306869618_0.8217361312372211"},"_hasShrinkwrap":false},"2.0.2-5-gc35c02b":{"name":"@serverless/platform-sdk","version":"2.0.2-5-gc35c02b","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"prepare":"npm run build","build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","lint:staged":"lint-staged","setup":"./scripts/setup.sh","setup:ci":"./scripts/setup-ci.sh","test":"./scripts/test.sh","test:ci":"snyk test && ./scripts/test-ci.sh","watch":"./scripts/watch.sh"},"dependencies":{"body-parser":"^1.19.0","chalk":"^2.4.1","cors":"^2.8.4","express":"^4.16.3","is-docker":"^1.1.0","isomorphic-fetch":"^2.2.1","jwt-decode":"^2.2.0","opn":"^5.5.0","querystring":"^0.2.0","ramda":"^0.25.0","rc":"^1.2.8","regenerator-runtime":"^0.13.1","source-map-support":"^0.5.12","uuid":"^3.3.2","write-file-atomic":"^2.4.2"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^21.2.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.17.2","eslint-plugin-prettier":"^2.6.1","jest-cli":"^21.2.0","lint-staged":"7.1.3","pre-commit":"^1.2.2","prettier":"^1.17.1","snyk":"^1.163.3"},"publishConfig":{"access":"public"},"lint-staged":{"*.js":["eslint --fix .","git add -A"]},"pre-commit":["lint:staged"],"gitHead":"c35c02b69866636aeebff3bc1084266949785a7b","readme":"# Platform SDK\n\nFunctional SDK for the Serverless Platfrom.\n\n## Project Status\n\n[![Build Status](https://travis-ci.com/serverless/platform-sdk.svg)](https://travis-ci.com/serverless/platform-sdk)\n[![license](https://img.shields.io/npm/l/@serverless/platform-sdk.svg)](https://www.npmjs.com/package/@serverless/platform-sdk)\n[![coverage](https://img.shields.io/codecov/c/github/serverless/platform-sdk.svg)](https://codecov.io/gh/serverless/platform-sdk)\n[![Known Vulnerabilities](https://snyk.io/test/github/serverless/platform-sdk/badge.svg)](https://snyk.io/test/github/serverless/platform-sdk)\n\n## Contents\n\n- [Installation](#installation)\n- [Functions](#functions)\n  - [login](#login)\n  - [refreshToken](#refreshtoken)\n  - [createAccessKey](#createaccesskey)\n  - [archiveService](#archiveservice)\n  - [getServiceUrl](#getserviceurl)\n  - [listTenants](#listtenants)\n  - [createDeployment](#createdeployment)\n  - [updateDeployment](#updatedeployment)\n  - [getApp](#getapp)\n  - [createApp](#createapp)\n\n## installation\n\n```\nnpm i -s @serverless/platform-sdk\n```\n\n## Functions\n### `login`\nOpens a browser for the user to login, along with a running server awaiting auth data once the user logs in.\n\n**Parameters**\n\nNone\n\n**Returns**\n\nPromise resolving to the following object:\n\n- `username` - `string` - dashboard username\n- `accessToken` - `string` - Auth0 access token\n- `idToken` - `string` - Auth0 idToken\n- `refreshToken` - `string` - Auth0 refreshToken\n- `expiresAt` - `string` - epoch time at which the idToken expires\n\n**Example**\n\n```js\nconst { login } = require('@serverless/platform-sdk')\n\nconst { username, accessToken, idToken, expiresAt } = await login()\n```\n\n---\n\n### `refreshToken`\nRefreshes Auth0 idToken\n\n**Parameters**\n\nrefresh token string\n\n**Returns**\n\n\nPromise resolving to the following object:\n\n- `id_token` - `string` - new Auth0 id token\n- `access_token` - `string` - new Auth0 access token\n- `expires_in` - `string` - number of seconds until token expiration\n\n**Example**\n\n```js\nconst { refreshToken } = require('@serverless/platform-sdk')\n\nconst { id_token, access_token, expires_in } = await refreshToken('some-refresh-token')\n```\n\n---\n\n### `createAccessKey`\nCreates a platform access key for the authenticated user.\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `tenant` - `string` - dashboard tenant\n- `idToken` - `string` - Auth0 idToken\n- `title` - `string` - title of the access key\n\n**Returns**\n\nPromise resolving to an `accessKey` string, that is the access key.\n\n**Example**\n\n```js\nconst { createAccessKey } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  tenant: 'eahefnawy',\n  idToken: 'abc',\n  title: 'Framework'\n}\n\nconst accessKey = await createAccessKey(data)\n```\n\n---\n\n### `archiveService`\nArchives a service in the platform.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `accessKey` - `string` - dashboard access key\n- `app` - `string` - service app\n- `name` - `string` - service name\n- `provider` - `string` - provider name\n- `region` - `string` - region name\n\n**Returns**\n\nNone\n\n**Example**\n\n```js\nconst { archiveService } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  accessKey: 'abc',\n  app: 'my-app',\n  name: 'my-service',\n  provider: 'aws',\n  region: 'us-east-1'\n}\n\nawait archiveService(data)\n```\n\n---\n\n### `getServiceUrl`\nConstructs a service url based on passed-in data.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `app` - `string` - service app\n- `name` - `string` - service name\n\n\n**Returns**\n\nThe service url string.\n\n**Example**\n\n```js\nconst { getServiceUrl } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  name: 'my-service'\n}\n\nconst serviceUrl = getServiceUrl(data)\n```\n\n---\n\n### `listTenants`\nLists the tenants for a given username\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `idToken` - `string` - auth0 user id token\n\n\n**Returns**\n\nArray of objects, each represents a single tenant data model.\n\n**Example**\n\n```js\nconst { listTenants } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  idToken: 'abc'\n}\n\nconst tenants = await listTenants(data)\n```\n\n---\n\n### `createDeploymnet`\nCreates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `accessKey` - `string` - dashboard access key\n- `files` - `object` - files which should be stored in the Platforms deployment record\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { createDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  accessKey: 'abc',\n  files: {\n    'serverless-state.json': {\n      //...snip...\n    }\n  }\n}\n\nconst { id } = await createDeployment(data)\n```\n\n---\n\n### `updateDeployment`\nUpdates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `deploymentId` - `string` - id of the previously created deployment\n- `status` - `string` - status of the deployment to update\n- `accessKey` - `string` - dashboard access key\n- `computedData` - `object` - computed data the Platform needs to generate the state items\n\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { updateDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  deploymentId: 'abc',\n  status: 'failed',\n  accessKey: 'abc',\n  computedData: {\n    // ...snip...\n  }\n}\n\nconst { id } = await updateDeployment(data)\n```\n\n---\n\n### `getApp`\nGets a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { getApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await getApp(data)\n```\n\n---\n\n### `createApp`\nCreates a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { createApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await createApp(data)\n```\n","readmeFilename":"README.md","_id":"@serverless/platform-sdk@2.0.2-5-gc35c02b","_npmVersion":"6.4.1","_nodeVersion":"10.15.3","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-F2NJwwg/ivy8bXu7SYJP1r0AwuzWwyPekBDpTWEIPZhgjAfbJay8/fLW0aBrB4cpe6PVPzB68rVtgndN64Qmrg==","shasum":"142fe53d4b201c2ef603fcbae460022474923dbc","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-2.0.2-5-gc35c02b.tgz","fileCount":85,"unpackedSize":173833,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdMJQnCRA9TVsSAnZWagAAKCkP/jZK2eWgjqDiY2mg6mDm\nGF3cMi9uPhu00EfuVdEVphkFXNkDdQKI+wFmrO5kl2vt57C32S9RNO70Xx1w\nX8yTUDh0kctRL7RuWN+S1XC6t2DBSQlXcueRgkLJI5Y77vU+INLALXReYdV1\nzRQahbjCvKUKOogr5sB311hXymVKT+2KvsohloZ0Qu4Ym2yOWg+hAqNiQWh1\nz/ZM2qYcZLnt4aN5CI56X7yzsYjhaWPt0n9MM2k5fF+RmfLJUjIhrj43rB0A\nVZHJUqGjX1xcezZK6B2kJSM+fSx/Y6FuNv+k4P1jmJRMiKwLbLkQ3jKcC91J\nHuhF8rQ/2Tk7YQQ21HYvZvNbRlNnnGYXhq0wwCXdomG0ozmGKwfHONFWGi8c\nUoi24Rtm+jbXoRwMibyk2aTgL0baw9eOIB2krayPyq3Ux2JeZNpWnMwN3Wdz\n3FtVCxun4la4c8TTHzKitzaGcVo8RzfcQCIjdQ1zx3L2HAQH5dDcXbBOAp+R\n4GmUvP+MjSDx/QnoxlJfB0fjQG8HGtOyfOi9JWCOvDbdHP21DjpiQnoBw70F\n63UmXY5Eslcz+XSbrjCEO7NEA3Hw9m50DwkPGZ4HCbX6qQbA3RWf3qz7oY2N\nCqa3jOlOm3ejEA+abxcQylFeJ5JXNc60M4NOYdtkHOQ++tEexkBOeQK90R2c\nf61F\r\n=FFzQ\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"services@serverless.com","name":"serverless-main"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_2.0.2-5-gc35c02b_1563464742904_0.07047648409700069"},"_hasShrinkwrap":false},"2.0.2-7-gd9e3a74":{"name":"@serverless/platform-sdk","version":"2.0.2-7-gd9e3a74","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"prepare":"npm run build","build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","lint:staged":"lint-staged","setup":"./scripts/setup.sh","setup:ci":"./scripts/setup-ci.sh","test":"./scripts/test.sh","test:ci":"snyk test && ./scripts/test-ci.sh","watch":"./scripts/watch.sh"},"dependencies":{"body-parser":"^1.19.0","chalk":"^2.4.1","cors":"^2.8.4","express":"^4.16.3","is-docker":"^1.1.0","isomorphic-fetch":"^2.2.1","jwt-decode":"^2.2.0","opn":"^5.5.0","querystring":"^0.2.0","ramda":"^0.25.0","rc":"^1.2.8","regenerator-runtime":"^0.13.1","source-map-support":"^0.5.12","uuid":"^3.3.2","write-file-atomic":"^2.4.2"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^21.2.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.17.2","eslint-plugin-prettier":"^2.6.1","jest-cli":"^21.2.0","lint-staged":"7.1.3","pre-commit":"^1.2.2","prettier":"^1.17.1","snyk":"^1.163.3"},"publishConfig":{"access":"public"},"lint-staged":{"*.js":["eslint --fix .","git add -A"]},"pre-commit":["lint:staged"],"gitHead":"d9e3a74badd666fcfefa91ead9827657205d81a5","readme":"# Platform SDK\n\nFunctional SDK for the Serverless Platfrom.\n\n## Project Status\n\n[![Build Status](https://travis-ci.com/serverless/platform-sdk.svg)](https://travis-ci.com/serverless/platform-sdk)\n[![license](https://img.shields.io/npm/l/@serverless/platform-sdk.svg)](https://www.npmjs.com/package/@serverless/platform-sdk)\n[![coverage](https://img.shields.io/codecov/c/github/serverless/platform-sdk.svg)](https://codecov.io/gh/serverless/platform-sdk)\n[![Known Vulnerabilities](https://snyk.io/test/github/serverless/platform-sdk/badge.svg)](https://snyk.io/test/github/serverless/platform-sdk)\n\n## Contents\n\n- [Installation](#installation)\n- [Functions](#functions)\n  - [login](#login)\n  - [refreshToken](#refreshtoken)\n  - [createAccessKey](#createaccesskey)\n  - [archiveService](#archiveservice)\n  - [getServiceUrl](#getserviceurl)\n  - [listTenants](#listtenants)\n  - [createDeployment](#createdeployment)\n  - [updateDeployment](#updatedeployment)\n  - [getApp](#getapp)\n  - [createApp](#createapp)\n\n## installation\n\n```\nnpm i -s @serverless/platform-sdk\n```\n\n## Functions\n### `login`\nOpens a browser for the user to login, along with a running server awaiting auth data once the user logs in.\n\n**Parameters**\n\nNone\n\n**Returns**\n\nPromise resolving to the following object:\n\n- `username` - `string` - dashboard username\n- `accessToken` - `string` - Auth0 access token\n- `idToken` - `string` - Auth0 idToken\n- `refreshToken` - `string` - Auth0 refreshToken\n- `expiresAt` - `string` - epoch time at which the idToken expires\n\n**Example**\n\n```js\nconst { login } = require('@serverless/platform-sdk')\n\nconst { username, accessToken, idToken, expiresAt } = await login()\n```\n\n---\n\n### `refreshToken`\nRefreshes Auth0 idToken\n\n**Parameters**\n\nrefresh token string\n\n**Returns**\n\n\nPromise resolving to the following object:\n\n- `id_token` - `string` - new Auth0 id token\n- `access_token` - `string` - new Auth0 access token\n- `expires_in` - `string` - number of seconds until token expiration\n\n**Example**\n\n```js\nconst { refreshToken } = require('@serverless/platform-sdk')\n\nconst { id_token, access_token, expires_in } = await refreshToken('some-refresh-token')\n```\n\n---\n\n### `createAccessKey`\nCreates a platform access key for the authenticated user.\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `tenant` - `string` - dashboard tenant\n- `idToken` - `string` - Auth0 idToken\n- `title` - `string` - title of the access key\n\n**Returns**\n\nPromise resolving to an `accessKey` string, that is the access key.\n\n**Example**\n\n```js\nconst { createAccessKey } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  tenant: 'eahefnawy',\n  idToken: 'abc',\n  title: 'Framework'\n}\n\nconst accessKey = await createAccessKey(data)\n```\n\n---\n\n### `archiveService`\nArchives a service in the platform.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `accessKey` - `string` - dashboard access key\n- `app` - `string` - service app\n- `name` - `string` - service name\n- `provider` - `string` - provider name\n- `region` - `string` - region name\n\n**Returns**\n\nNone\n\n**Example**\n\n```js\nconst { archiveService } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  accessKey: 'abc',\n  app: 'my-app',\n  name: 'my-service',\n  provider: 'aws',\n  region: 'us-east-1'\n}\n\nawait archiveService(data)\n```\n\n---\n\n### `getServiceUrl`\nConstructs a service url based on passed-in data.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `app` - `string` - service app\n- `name` - `string` - service name\n\n\n**Returns**\n\nThe service url string.\n\n**Example**\n\n```js\nconst { getServiceUrl } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  name: 'my-service'\n}\n\nconst serviceUrl = getServiceUrl(data)\n```\n\n---\n\n### `listTenants`\nLists the tenants for a given username\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `idToken` - `string` - auth0 user id token\n\n\n**Returns**\n\nArray of objects, each represents a single tenant data model.\n\n**Example**\n\n```js\nconst { listTenants } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  idToken: 'abc'\n}\n\nconst tenants = await listTenants(data)\n```\n\n---\n\n### `createDeploymnet`\nCreates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `accessKey` - `string` - dashboard access key\n- `files` - `object` - files which should be stored in the Platforms deployment record\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { createDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  accessKey: 'abc',\n  files: {\n    'serverless-state.json': {\n      //...snip...\n    }\n  }\n}\n\nconst { id } = await createDeployment(data)\n```\n\n---\n\n### `updateDeployment`\nUpdates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `deploymentId` - `string` - id of the previously created deployment\n- `status` - `string` - status of the deployment to update\n- `accessKey` - `string` - dashboard access key\n- `computedData` - `object` - computed data the Platform needs to generate the state items\n\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { updateDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  deploymentId: 'abc',\n  status: 'failed',\n  accessKey: 'abc',\n  computedData: {\n    // ...snip...\n  }\n}\n\nconst { id } = await updateDeployment(data)\n```\n\n---\n\n### `getApp`\nGets a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { getApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await getApp(data)\n```\n\n---\n\n### `createApp`\nCreates a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { createApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await createApp(data)\n```\n","readmeFilename":"README.md","_id":"@serverless/platform-sdk@2.0.2-7-gd9e3a74","_npmVersion":"6.4.1","_nodeVersion":"10.15.3","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-s9cxqCZhLCUIxZKkkQTr1QttoJWS4pGQKkTS2HhjHU4sovZrfG5M1XYSeyBsdCl3ue5sjZ9hY7JHLehs0Zu4MQ==","shasum":"9081e17f8e06d6efb422a1677e2a000f24f4426e","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-2.0.2-7-gd9e3a74.tgz","fileCount":85,"unpackedSize":173833,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdMN6ECRA9TVsSAnZWagAAUI4P/396tjki8bTGajHVYeix\nBQX2EShkjrkC/mp3LALwvgZLMITxmQiQ2h0M83YOzeUccZTYUEcZC8WIcw9A\nygPey4d+BbkliY4S8a88uwkbEZyIxPanRK42onf7zkHSN9wcuIoySZvHmSma\nmUL0jayyH3+6gHtr7CwOhNTNYJTS8TOL5Qt5ik2bU/9wuE4UWwV1dcy9fq24\n0/fzDLV5LxbT+pU+VLIG0X8Ob7Ak7Qb4AI7pm62FPlBMVkIiQ0ZjI1ZupS4b\nRbb3jVDdAjJMKezdbuTfkIUtEWWHlMVMwsMIPwo0m7khK9xOzgwcw4V5pmNO\nKKC3cFxEO/s2H640NfXz9iFVc2cRaa69M9OZZYwH21ypceIeWzAd9KtFTfE3\nsL2JXaS3F7DgiBpe0pyl++2etxY8peQQTS8Dg4++H/Q8IdtPOBeV4qTZ+rt8\n2ZO6r0lFv43VRp1sTEfrYlnWfzIDyvv/iB5ColKMlT4w0OWPZ3tGM/SAiuic\nAD7RdIkaRwSZPlWwwulIsAYjpkJMmx5Kw4n+ixqH3NPzeSluZBZ8YAWwKmnU\naisfyODySW9nonYD73orCwYN9XA+5ZYM7m0nbY0XXxY4DzKls9Qr2qrWdkbM\ntsiXzTlmEMulnmd3R5MPSOjMFwPr/YK+7ZKmRvQcRDolwEHwiWQB67Xo5ZwM\npqHX\r\n=mBqG\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"services@serverless.com","name":"serverless-main"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_2.0.2-7-gd9e3a74_1563483779665_0.7112697589677766"},"_hasShrinkwrap":false},"2.0.3":{"name":"@serverless/platform-sdk","version":"2.0.3","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"prepare":"npm run build","build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","lint:staged":"lint-staged","setup":"./scripts/setup.sh","setup:ci":"./scripts/setup-ci.sh","test":"./scripts/test.sh","test:ci":"snyk test && ./scripts/test-ci.sh","watch":"./scripts/watch.sh"},"dependencies":{"body-parser":"^1.19.0","chalk":"^2.4.1","cors":"^2.8.4","express":"^4.16.3","is-docker":"^1.1.0","isomorphic-fetch":"^2.2.1","jwt-decode":"^2.2.0","opn":"^5.5.0","querystring":"^0.2.0","ramda":"^0.25.0","rc":"^1.2.8","regenerator-runtime":"^0.13.1","source-map-support":"^0.5.12","uuid":"^3.3.2","write-file-atomic":"^2.4.2"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^21.2.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.17.2","eslint-plugin-prettier":"^2.6.1","jest-cli":"^21.2.0","lint-staged":"7.1.3","pre-commit":"^1.2.2","prettier":"^1.17.1","snyk":"^1.163.3"},"publishConfig":{"access":"public"},"lint-staged":{"*.js":["eslint --fix .","git add -A"]},"pre-commit":["lint:staged"],"gitHead":"d9e3a74badd666fcfefa91ead9827657205d81a5","_id":"@serverless/platform-sdk@2.0.3","_npmVersion":"6.4.1","_nodeVersion":"10.15.3","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-A9SpDcdcjHweBj2IOfoWgSkXD9Y8O+TqGMUDFsKNcpWEMsp48IGwzV6NHJywz/V3PzZ7JmiL3ZM7+61UTMiiMw==","shasum":"4827c2ef9cb03e665cff67410377a261d9ffc954","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-2.0.3.tgz","fileCount":85,"unpackedSize":173822,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdMN9hCRA9TVsSAnZWagAApLUP/3vwySlco/+QKG/unTi4\nrzxQh55gUWanW+MkhbGULwtwpgGLcGnneGs7DdGi/0qPf4VNLU0f/BFooj9x\nkQ9OrcfmgA/WEqhE1BmA66rzyg2Ga5MRTuT4Zq5gtzZ5QHRL7QAKeXQE+UF1\nA/+SNJ5tkrriyTV0pr1mciv0AywIccZdfnp9A3osbdaUKNDm0MIQGBIR2l0f\nx15fMUevgaENG6MppC4CRhi2US3zxcUuFitOcREGd9YSfCH8sF05JbCCqirn\nnAh8+LgdS9Zx6zxsK76SLoUc2jKxlk65P2BjglCyvXIp7PpCIWJY82bV7H5M\nVeP45/t+o6uo+LYZF6G6NP2/byQx3TQqiaDWQN8+zdmdOlErh/QxYaYYGgT9\noxx9aPHxmxG61lBqemuCtOvfIExx16e/tVlFPGZ4e0jeBw25SooUhQehxxDY\noPkB4YkKppPbcQO11iqXpEXpLIFGfAZ45jmiaV3vufyXxZJDVt8NYAIAyS1E\nQojwY49ubkEoMjuZiSAFwfrYqu2PRzMgl0CF2wOMEgxL6OtqEmvmWp/WJXh1\nHhl/8a2RfGwZJNRxVW6WspORsickaF8HLNBhXfTEhE1YMTMcdHm43wBrFCkn\nexK5EtiDOvlHQzVY2iGmaznorjhInkJJjpgNxk4l5+ivKc2FI7DBbYi/muh7\npOe0\r\n=/FeX\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"services@serverless.com","name":"serverless-main"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_2.0.3_1563484000393_0.9750390883262356"},"_hasShrinkwrap":false},"2.0.3-6-g690a296":{"name":"@serverless/platform-sdk","version":"2.0.3-6-g690a296","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"prepare":"npm run build","build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","lint:staged":"lint-staged","setup":"./scripts/setup.sh","setup:ci":"./scripts/setup-ci.sh","test":"./scripts/test.sh","test:ci":"snyk test && ./scripts/test-ci.sh","watch":"./scripts/watch.sh"},"dependencies":{"body-parser":"^1.19.0","chalk":"^2.4.1","express":"^4.16.3","is-docker":"^1.1.0","isomorphic-fetch":"^2.2.1","jwt-decode":"^2.2.0","opn":"^5.5.0","querystring":"^0.2.0","ramda":"^0.25.0","rc":"^1.2.8","regenerator-runtime":"^0.13.1","source-map-support":"^0.5.12","uuid":"^3.3.2","write-file-atomic":"^2.4.2"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^21.2.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.17.2","eslint-plugin-prettier":"^2.6.1","jest-cli":"^21.2.0","lint-staged":"7.1.3","pre-commit":"^1.2.2","prettier":"^1.17.1","snyk":"^1.163.3"},"publishConfig":{"access":"public"},"lint-staged":{"*.js":["eslint --fix .","git add -A"]},"pre-commit":["lint:staged"],"gitHead":"690a296b595f821bb3c929a0b75727dec9d4a9be","readme":"# Platform SDK\n\nFunctional SDK for the Serverless Platfrom.\n\n## Project Status\n\n[![Build Status](https://travis-ci.com/serverless/platform-sdk.svg)](https://travis-ci.com/serverless/platform-sdk)\n[![license](https://img.shields.io/npm/l/@serverless/platform-sdk.svg)](https://www.npmjs.com/package/@serverless/platform-sdk)\n[![coverage](https://img.shields.io/codecov/c/github/serverless/platform-sdk.svg)](https://codecov.io/gh/serverless/platform-sdk)\n[![Known Vulnerabilities](https://snyk.io/test/github/serverless/platform-sdk/badge.svg)](https://snyk.io/test/github/serverless/platform-sdk)\n\n## Contents\n\n- [Installation](#installation)\n- [Functions](#functions)\n  - [login](#login)\n  - [refreshToken](#refreshtoken)\n  - [createAccessKey](#createaccesskey)\n  - [archiveService](#archiveservice)\n  - [getServiceUrl](#getserviceurl)\n  - [listTenants](#listtenants)\n  - [createDeployment](#createdeployment)\n  - [updateDeployment](#updatedeployment)\n  - [getApp](#getapp)\n  - [createApp](#createapp)\n\n## installation\n\n```\nnpm i -s @serverless/platform-sdk\n```\n\n## Functions\n### `login`\nOpens a browser for the user to login, along with a running server awaiting auth data once the user logs in.\n\n**Parameters**\n\nNone\n\n**Returns**\n\nPromise resolving to the following object:\n\n- `username` - `string` - dashboard username\n- `accessToken` - `string` - Auth0 access token\n- `idToken` - `string` - Auth0 idToken\n- `refreshToken` - `string` - Auth0 refreshToken\n- `expiresAt` - `string` - epoch time at which the idToken expires\n\n**Example**\n\n```js\nconst { login } = require('@serverless/platform-sdk')\n\nconst { username, accessToken, idToken, expiresAt } = await login()\n```\n\n---\n\n### `refreshToken`\nRefreshes Auth0 idToken\n\n**Parameters**\n\nrefresh token string\n\n**Returns**\n\n\nPromise resolving to the following object:\n\n- `id_token` - `string` - new Auth0 id token\n- `access_token` - `string` - new Auth0 access token\n- `expires_in` - `string` - number of seconds until token expiration\n\n**Example**\n\n```js\nconst { refreshToken } = require('@serverless/platform-sdk')\n\nconst { id_token, access_token, expires_in } = await refreshToken('some-refresh-token')\n```\n\n---\n\n### `createAccessKey`\nCreates a platform access key for the authenticated user.\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `tenant` - `string` - dashboard tenant\n- `idToken` - `string` - Auth0 idToken\n- `title` - `string` - title of the access key\n\n**Returns**\n\nPromise resolving to an `accessKey` string, that is the access key.\n\n**Example**\n\n```js\nconst { createAccessKey } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  tenant: 'eahefnawy',\n  idToken: 'abc',\n  title: 'Framework'\n}\n\nconst accessKey = await createAccessKey(data)\n```\n\n---\n\n### `archiveService`\nArchives a service in the platform.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `accessKey` - `string` - dashboard access key\n- `app` - `string` - service app\n- `name` - `string` - service name\n- `provider` - `string` - provider name\n- `region` - `string` - region name\n\n**Returns**\n\nNone\n\n**Example**\n\n```js\nconst { archiveService } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  accessKey: 'abc',\n  app: 'my-app',\n  name: 'my-service',\n  provider: 'aws',\n  region: 'us-east-1'\n}\n\nawait archiveService(data)\n```\n\n---\n\n### `getServiceUrl`\nConstructs a service url based on passed-in data.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `app` - `string` - service app\n- `name` - `string` - service name\n\n\n**Returns**\n\nThe service url string.\n\n**Example**\n\n```js\nconst { getServiceUrl } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  name: 'my-service'\n}\n\nconst serviceUrl = getServiceUrl(data)\n```\n\n---\n\n### `listTenants`\nLists the tenants for a given username\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `idToken` - `string` - auth0 user id token\n\n\n**Returns**\n\nArray of objects, each represents a single tenant data model.\n\n**Example**\n\n```js\nconst { listTenants } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  idToken: 'abc'\n}\n\nconst tenants = await listTenants(data)\n```\n\n---\n\n### `createDeploymnet`\nCreates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `accessKey` - `string` - dashboard access key\n- `files` - `object` - files which should be stored in the Platforms deployment record\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { createDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  accessKey: 'abc',\n  files: {\n    'serverless-state.json': {\n      //...snip...\n    }\n  }\n}\n\nconst { id } = await createDeployment(data)\n```\n\n---\n\n### `updateDeployment`\nUpdates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `deploymentId` - `string` - id of the previously created deployment\n- `status` - `string` - status of the deployment to update\n- `accessKey` - `string` - dashboard access key\n- `computedData` - `object` - computed data the Platform needs to generate the state items\n\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { updateDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  deploymentId: 'abc',\n  status: 'failed',\n  accessKey: 'abc',\n  computedData: {\n    // ...snip...\n  }\n}\n\nconst { id } = await updateDeployment(data)\n```\n\n---\n\n### `getApp`\nGets a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { getApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await getApp(data)\n```\n\n---\n\n### `createApp`\nCreates a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { createApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await createApp(data)\n```\n","readmeFilename":"README.md","_id":"@serverless/platform-sdk@2.0.3-6-g690a296","_npmVersion":"6.4.1","_nodeVersion":"10.15.3","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-Zd/zCbSeIcsz1yWJnG83JzbiTt/UL2SxldeUgweGx2g/mGR4xmf1QVf+/m6+2t9hE8EwZaZ9RljrVtlfszyUcA==","shasum":"9f68066a0cc0b4cd1760110d5f55673bbe496541","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-2.0.3-6-g690a296.tgz","fileCount":85,"unpackedSize":173606,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdNeJgCRA9TVsSAnZWagAAbO8P/0F8GFhWbdf6oxhNAngp\n7I+BqsyWZ4tFdbkCCudznXn3H5gLF1+QyoNTU52PWBdJ+e834k1JoRruKqPq\nFw3aJwy2YyTaxkrVeeEZleeYKnvS0t2kK45WxbG8PzPZYPbRovA+bVQ23i/2\nPjTlaXja4Osxap4PILoUZ5VqIpqZr/A37Axv/Y0eCH8qCMWZq9VxVTluYYHt\nkFPxmep6w0aM8P1NBUScdK5k8nl3GNSljzr19f+MbgldFv5+FLmiwiNcEWjI\n9T4d3a44YIG/9eeWVNhGmJbsKmzCAwP5oW6+DZkQyDRu2aRKKBOv5FOaiHz9\ncVbgLPTx7bSlFc2EMa7wZR6SpuxicgaFDheZsyl2KXF8DUBEdTk706yDlC8C\n7UuO9Bwwl6wsnf9/09rXks7WkukeU7gygcMpWHetW3REBcBYVJ1xTrFyHAJs\nwA5GE0215MtpK1t/B4NES9GC+OyF9xN7x4p8pcRWdiz/54XyCCj8amslnFWX\nZ4wh+io0cNwa20vEpOmzHTGTRXrK78c6fuZYmstnOnEe0/tr3cocGlqYMwjg\nxAVEykjLHPasduWWwr1clkseSaI7kSyeANAgiuhWEMxbwNjwF2EsRVD8EKg5\nmndUeTjLh/0lGGOZySS/QEvFloYH67pR7rTiB8iQufTywLrrI89QCYOCHbGO\ny5zB\r\n=82qL\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"services@serverless.com","name":"serverless-main"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_2.0.3-6-g690a296_1563812447722_0.6010481879637666"},"_hasShrinkwrap":false},"2.0.4":{"name":"@serverless/platform-sdk","version":"2.0.4","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"prepare":"npm run build","build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","lint:staged":"lint-staged","setup":"./scripts/setup.sh","setup:ci":"./scripts/setup-ci.sh","test":"./scripts/test.sh","test:ci":"snyk test && ./scripts/test-ci.sh","watch":"./scripts/watch.sh"},"dependencies":{"body-parser":"^1.19.0","chalk":"^2.4.1","express":"^4.16.3","is-docker":"^1.1.0","isomorphic-fetch":"^2.2.1","jwt-decode":"^2.2.0","opn":"^5.5.0","querystring":"^0.2.0","ramda":"^0.25.0","rc":"^1.2.8","regenerator-runtime":"^0.13.1","source-map-support":"^0.5.12","uuid":"^3.3.2","write-file-atomic":"^2.4.2"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^21.2.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.17.2","eslint-plugin-prettier":"^2.6.1","jest-cli":"^21.2.0","lint-staged":"7.1.3","pre-commit":"^1.2.2","prettier":"^1.17.1","snyk":"^1.163.3"},"publishConfig":{"access":"public"},"lint-staged":{"*.js":["eslint --fix .","git add -A"]},"pre-commit":["lint:staged"],"gitHead":"690a296b595f821bb3c929a0b75727dec9d4a9be","_id":"@serverless/platform-sdk@2.0.4","_npmVersion":"6.4.1","_nodeVersion":"10.15.3","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-jVKXU/WT0WOxTOfJmrRQFHpgGJo53+KogCB0OX0gHMITpVdbxP21CntsDYv7BR3Gi7blEGll+byeFCqHv6r7XQ==","shasum":"1a8b5985a1d52595473f5ac2696aabb59fbde684","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-2.0.4.tgz","fileCount":85,"unpackedSize":173595,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdNfGECRA9TVsSAnZWagAAIcsP/0odf9g6VygiwKhRZFQB\nUpp1d7rrN/5y6LX1THXNVGkmmbUcpCMv2RXmNF0WvfrZXb5QxSYgF28BlMsY\n7PuTXSfxEDvy2R7GtT7n1p04hC8gn9+m7ng1LQGysRSHljHC2vt0k1coGS44\nSjtOxsFs4e1nvabsjF66W8HtDyJY0jf6u2R12lMYrx38xLMVfEcCgbI0WnXN\nFVHNIZcg3YXLLAkhHscBLYDrUBGTu9kS5O1g6GWaXC3jfkGxT9UPQaMrbwz1\n0QsQW79zdegKVrSTykKIB24Uf9In8Zu9dWti+LyTJtL6pvrMs5/t19T6GfrW\nxST7rD9bc8AopIOJpAD2LrQepxuNIUm1ttMvb3wbX+vznlDtEE8vSbqsYBG9\ncLTiGYAa9Vdu+KjIrlqaAlkEauCJib9OYWpXkDYaRXktmKYXuUMhtfSc0TKi\n2gu1TTXgxxBlodG5eTmJNw8BPcb2sMgxdNVNbH8sVYNO9sB0JGrZg1B0/qtc\njVxfLRq6PwQriClgeOmAQSVDC4ZMx+QSMgnYZnWz/VbsFNfpV7sCIiHqMrgc\n76IuptmzExHRPXDRv+SoEBipkEoRFXiszwfXyh1Eufi6mYYNVhmi2ilzLgyI\nsH1r/Y17cUJ8e2Ye08pqVJHoCPyaQYOCfgbIEFFXw0FSA0/gzPo8+ftXjcQJ\n2NoD\r\n=jbU6\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"services@serverless.com","name":"serverless-main"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_2.0.4_1563816324153_0.41952768982584376"},"_hasShrinkwrap":false},"2.0.4-2-g3b11840":{"name":"@serverless/platform-sdk","version":"2.0.4-2-g3b11840","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"prepare":"npm run build","build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","lint:staged":"lint-staged","setup":"./scripts/setup.sh","setup:ci":"./scripts/setup-ci.sh","test":"./scripts/test.sh","test:ci":"snyk test && ./scripts/test-ci.sh","watch":"./scripts/watch.sh"},"dependencies":{"body-parser":"^1.19.0","chalk":"^2.4.1","express":"^4.16.3","is-docker":"^1.1.0","isomorphic-fetch":"^2.2.1","jwt-decode":"^2.2.0","opn":"^5.5.0","querystring":"^0.2.0","ramda":"^0.25.0","rc":"^1.2.8","regenerator-runtime":"^0.13.1","source-map-support":"^0.5.12","uuid":"^3.3.2","write-file-atomic":"^2.4.2"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^21.2.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.17.2","eslint-plugin-prettier":"^2.6.1","jest-cli":"^21.2.0","lint-staged":"7.1.3","pre-commit":"^1.2.2","prettier":"^1.17.1","snyk":"^1.163.3"},"publishConfig":{"access":"public"},"lint-staged":{"*.js":["eslint --fix .","git add -A"]},"pre-commit":["lint:staged"],"gitHead":"3b1184031b20fdf90d6f4cc46f26b72b1ba352a3","readme":"# Platform SDK\n\nFunctional SDK for the Serverless Platfrom.\n\n## Project Status\n\n[![Build Status](https://travis-ci.com/serverless/platform-sdk.svg)](https://travis-ci.com/serverless/platform-sdk)\n[![license](https://img.shields.io/npm/l/@serverless/platform-sdk.svg)](https://www.npmjs.com/package/@serverless/platform-sdk)\n[![coverage](https://img.shields.io/codecov/c/github/serverless/platform-sdk.svg)](https://codecov.io/gh/serverless/platform-sdk)\n[![Known Vulnerabilities](https://snyk.io/test/github/serverless/platform-sdk/badge.svg)](https://snyk.io/test/github/serverless/platform-sdk)\n\n## Contents\n\n- [Installation](#installation)\n- [Functions](#functions)\n  - [login](#login)\n  - [refreshToken](#refreshtoken)\n  - [createAccessKey](#createaccesskey)\n  - [archiveService](#archiveservice)\n  - [getServiceUrl](#getserviceurl)\n  - [listTenants](#listtenants)\n  - [createDeployment](#createdeployment)\n  - [updateDeployment](#updatedeployment)\n  - [getApp](#getapp)\n  - [createApp](#createapp)\n\n## installation\n\n```\nnpm i -s @serverless/platform-sdk\n```\n\n## Functions\n### `login`\nOpens a browser for the user to login, along with a running server awaiting auth data once the user logs in.\n\n**Parameters**\n\nNone\n\n**Returns**\n\nPromise resolving to the following object:\n\n- `username` - `string` - dashboard username\n- `accessToken` - `string` - Auth0 access token\n- `idToken` - `string` - Auth0 idToken\n- `refreshToken` - `string` - Auth0 refreshToken\n- `expiresAt` - `string` - epoch time at which the idToken expires\n\n**Example**\n\n```js\nconst { login } = require('@serverless/platform-sdk')\n\nconst { username, accessToken, idToken, expiresAt } = await login()\n```\n\n---\n\n### `refreshToken`\nRefreshes Auth0 idToken\n\n**Parameters**\n\nrefresh token string\n\n**Returns**\n\n\nPromise resolving to the following object:\n\n- `id_token` - `string` - new Auth0 id token\n- `access_token` - `string` - new Auth0 access token\n- `expires_in` - `string` - number of seconds until token expiration\n\n**Example**\n\n```js\nconst { refreshToken } = require('@serverless/platform-sdk')\n\nconst { id_token, access_token, expires_in } = await refreshToken('some-refresh-token')\n```\n\n---\n\n### `createAccessKey`\nCreates a platform access key for the authenticated user.\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `tenant` - `string` - dashboard tenant\n- `idToken` - `string` - Auth0 idToken\n- `title` - `string` - title of the access key\n\n**Returns**\n\nPromise resolving to an `accessKey` string, that is the access key.\n\n**Example**\n\n```js\nconst { createAccessKey } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  tenant: 'eahefnawy',\n  idToken: 'abc',\n  title: 'Framework'\n}\n\nconst accessKey = await createAccessKey(data)\n```\n\n---\n\n### `archiveService`\nArchives a service in the platform.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `accessKey` - `string` - dashboard access key\n- `app` - `string` - service app\n- `name` - `string` - service name\n- `provider` - `string` - provider name\n- `region` - `string` - region name\n\n**Returns**\n\nNone\n\n**Example**\n\n```js\nconst { archiveService } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  accessKey: 'abc',\n  app: 'my-app',\n  name: 'my-service',\n  provider: 'aws',\n  region: 'us-east-1'\n}\n\nawait archiveService(data)\n```\n\n---\n\n### `getServiceUrl`\nConstructs a service url based on passed-in data.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `app` - `string` - service app\n- `name` - `string` - service name\n\n\n**Returns**\n\nThe service url string.\n\n**Example**\n\n```js\nconst { getServiceUrl } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  name: 'my-service'\n}\n\nconst serviceUrl = getServiceUrl(data)\n```\n\n---\n\n### `listTenants`\nLists the tenants for a given username\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `idToken` - `string` - auth0 user id token\n\n\n**Returns**\n\nArray of objects, each represents a single tenant data model.\n\n**Example**\n\n```js\nconst { listTenants } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  idToken: 'abc'\n}\n\nconst tenants = await listTenants(data)\n```\n\n---\n\n### `createDeploymnet`\nCreates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `accessKey` - `string` - dashboard access key\n- `files` - `object` - files which should be stored in the Platforms deployment record\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { createDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  accessKey: 'abc',\n  files: {\n    'serverless-state.json': {\n      //...snip...\n    }\n  }\n}\n\nconst { id } = await createDeployment(data)\n```\n\n---\n\n### `updateDeployment`\nUpdates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `deploymentId` - `string` - id of the previously created deployment\n- `status` - `string` - status of the deployment to update\n- `accessKey` - `string` - dashboard access key\n- `computedData` - `object` - computed data the Platform needs to generate the state items\n\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { updateDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  deploymentId: 'abc',\n  status: 'failed',\n  accessKey: 'abc',\n  computedData: {\n    // ...snip...\n  }\n}\n\nconst { id } = await updateDeployment(data)\n```\n\n---\n\n### `getApp`\nGets a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { getApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await getApp(data)\n```\n\n---\n\n### `createApp`\nCreates a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { createApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await createApp(data)\n```\n","readmeFilename":"README.md","_id":"@serverless/platform-sdk@2.0.4-2-g3b11840","_npmVersion":"6.4.1","_nodeVersion":"10.15.3","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-QmQXbXqyD8VpA1nOpRCmrUlol9iabhopXf+w8T7aX8tDvKJZvm3BIUHkHuoT3hY+yyqBX3WPhgGsIGqOuCpC0g==","shasum":"e39123c3bbb2f5e96da069a3a1bc947597ceadf7","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-2.0.4-2-g3b11840.tgz","fileCount":85,"unpackedSize":174874,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdNiU8CRA9TVsSAnZWagAAKUIP/3F1hwMFeF4WQZQcRD6i\n1G6RMW327AogzRwlnb3yiBOdf3EcLX5b5T13d6AjY7530ik6ufcEbWSx11qZ\ncZsuarUKrnDpOiO5b9e664gTY4EfGW03Gpap7mBlfCkk9uB43HENJcU7Mrih\nY/dB8ivcVnui8wU0+Y5uk3kQZvUG35YW7pzrWT6qPaZ/DJo1KZghxaXKP0sd\nlhRji5eu9YchxHAdVJMzT2pVwO++Go/jaEzULTV2Mn4VMJvJtaVszBC6OpdR\ne8c//yWjaGzsGh8s9ac6SS+bL7GQyrWZkEqM5/6Oo03sUjDnlgSxnBnOiB5D\nqGszJPDrdp1wer3PZWYO9JCFZ/sJbHASMLd19OgXuGnWRVwRoIIfCKzGrKzL\n5JAJSIX7dyycZnMGJ0EfHCYFClXeTzaTliDnMdOmj3Q670VybP4V4ws6SvN+\nzq5daUGI4rOgXGOCfp44x2+v0TBLKqdHaYBi+4Kh+ZaX6oL2mgxCGh8XnNbz\nF+3dO1+YBuPxDOIwkVtUIoJZCVgteMPnx5VMsiLubV+iNO64GxdvY30XjRof\nzO7UjY0Bj2oq33u9eqZAS63nHq9w0uMFSroLgivu/NsGknmKzNWRyUwY7ndU\nDWIrm9WL0hYpcpuXG2XoS1SyCr2oqFNTyjlHx3mzqNLmnDRBwpMd7o2D/U3R\nAJnY\r\n=H5tY\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"services@serverless.com","name":"serverless-main"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_2.0.4-2-g3b11840_1563829564037_0.42439073541115135"},"_hasShrinkwrap":false},"2.0.4-4-gfdf3f79":{"name":"@serverless/platform-sdk","version":"2.0.4-4-gfdf3f79","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"prepare":"npm run build","build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","lint:staged":"lint-staged","setup":"./scripts/setup.sh","setup:ci":"./scripts/setup-ci.sh","test":"./scripts/test.sh","test:ci":"snyk test && ./scripts/test-ci.sh","watch":"./scripts/watch.sh"},"dependencies":{"body-parser":"^1.19.0","chalk":"^2.4.1","express":"^4.16.3","is-docker":"^1.1.0","isomorphic-fetch":"^2.2.1","jwt-decode":"^2.2.0","opn":"^5.5.0","querystring":"^0.2.0","ramda":"^0.25.0","rc":"^1.2.8","regenerator-runtime":"^0.13.1","source-map-support":"^0.5.12","uuid":"^3.3.2","write-file-atomic":"^2.4.2"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^21.2.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.17.2","eslint-plugin-prettier":"^2.6.1","jest-cli":"^21.2.0","lint-staged":"7.1.3","pre-commit":"^1.2.2","prettier":"^1.17.1","snyk":"^1.163.3"},"publishConfig":{"access":"public"},"lint-staged":{"*.js":["eslint --fix .","git add -A"]},"pre-commit":["lint:staged"],"gitHead":"fdf3f798a1120108f13b655857079b408c0ca0fa","readme":"# Platform SDK\n\nFunctional SDK for the Serverless Platfrom.\n\n## Project Status\n\n[![Build Status](https://travis-ci.com/serverless/platform-sdk.svg)](https://travis-ci.com/serverless/platform-sdk)\n[![license](https://img.shields.io/npm/l/@serverless/platform-sdk.svg)](https://www.npmjs.com/package/@serverless/platform-sdk)\n[![coverage](https://img.shields.io/codecov/c/github/serverless/platform-sdk.svg)](https://codecov.io/gh/serverless/platform-sdk)\n[![Known Vulnerabilities](https://snyk.io/test/github/serverless/platform-sdk/badge.svg)](https://snyk.io/test/github/serverless/platform-sdk)\n\n## Contents\n\n- [Installation](#installation)\n- [Functions](#functions)\n  - [login](#login)\n  - [refreshToken](#refreshtoken)\n  - [createAccessKey](#createaccesskey)\n  - [archiveService](#archiveservice)\n  - [getServiceUrl](#getserviceurl)\n  - [listTenants](#listtenants)\n  - [createDeployment](#createdeployment)\n  - [updateDeployment](#updatedeployment)\n  - [getApp](#getapp)\n  - [createApp](#createapp)\n\n## installation\n\n```\nnpm i -s @serverless/platform-sdk\n```\n\n## Functions\n### `login`\nOpens a browser for the user to login, along with a running server awaiting auth data once the user logs in.\n\n**Parameters**\n\nNone\n\n**Returns**\n\nPromise resolving to the following object:\n\n- `username` - `string` - dashboard username\n- `accessToken` - `string` - Auth0 access token\n- `idToken` - `string` - Auth0 idToken\n- `refreshToken` - `string` - Auth0 refreshToken\n- `expiresAt` - `string` - epoch time at which the idToken expires\n\n**Example**\n\n```js\nconst { login } = require('@serverless/platform-sdk')\n\nconst { username, accessToken, idToken, expiresAt } = await login()\n```\n\n---\n\n### `refreshToken`\nRefreshes Auth0 idToken\n\n**Parameters**\n\nrefresh token string\n\n**Returns**\n\n\nPromise resolving to the following object:\n\n- `id_token` - `string` - new Auth0 id token\n- `access_token` - `string` - new Auth0 access token\n- `expires_in` - `string` - number of seconds until token expiration\n\n**Example**\n\n```js\nconst { refreshToken } = require('@serverless/platform-sdk')\n\nconst { id_token, access_token, expires_in } = await refreshToken('some-refresh-token')\n```\n\n---\n\n### `createAccessKey`\nCreates a platform access key for the authenticated user.\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `tenant` - `string` - dashboard tenant\n- `idToken` - `string` - Auth0 idToken\n- `title` - `string` - title of the access key\n\n**Returns**\n\nPromise resolving to an `accessKey` string, that is the access key.\n\n**Example**\n\n```js\nconst { createAccessKey } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  tenant: 'eahefnawy',\n  idToken: 'abc',\n  title: 'Framework'\n}\n\nconst accessKey = await createAccessKey(data)\n```\n\n---\n\n### `archiveService`\nArchives a service in the platform.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `accessKey` - `string` - dashboard access key\n- `app` - `string` - service app\n- `name` - `string` - service name\n- `provider` - `string` - provider name\n- `region` - `string` - region name\n\n**Returns**\n\nNone\n\n**Example**\n\n```js\nconst { archiveService } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  accessKey: 'abc',\n  app: 'my-app',\n  name: 'my-service',\n  provider: 'aws',\n  region: 'us-east-1'\n}\n\nawait archiveService(data)\n```\n\n---\n\n### `getServiceUrl`\nConstructs a service url based on passed-in data.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `app` - `string` - service app\n- `name` - `string` - service name\n\n\n**Returns**\n\nThe service url string.\n\n**Example**\n\n```js\nconst { getServiceUrl } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  name: 'my-service'\n}\n\nconst serviceUrl = getServiceUrl(data)\n```\n\n---\n\n### `listTenants`\nLists the tenants for a given username\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `idToken` - `string` - auth0 user id token\n\n\n**Returns**\n\nArray of objects, each represents a single tenant data model.\n\n**Example**\n\n```js\nconst { listTenants } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  idToken: 'abc'\n}\n\nconst tenants = await listTenants(data)\n```\n\n---\n\n### `createDeploymnet`\nCreates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `accessKey` - `string` - dashboard access key\n- `files` - `object` - files which should be stored in the Platforms deployment record\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { createDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  accessKey: 'abc',\n  files: {\n    'serverless-state.json': {\n      //...snip...\n    }\n  }\n}\n\nconst { id } = await createDeployment(data)\n```\n\n---\n\n### `updateDeployment`\nUpdates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `deploymentId` - `string` - id of the previously created deployment\n- `status` - `string` - status of the deployment to update\n- `accessKey` - `string` - dashboard access key\n- `computedData` - `object` - computed data the Platform needs to generate the state items\n\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { updateDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  deploymentId: 'abc',\n  status: 'failed',\n  accessKey: 'abc',\n  computedData: {\n    // ...snip...\n  }\n}\n\nconst { id } = await updateDeployment(data)\n```\n\n---\n\n### `getApp`\nGets a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { getApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await getApp(data)\n```\n\n---\n\n### `createApp`\nCreates a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { createApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await createApp(data)\n```\n","readmeFilename":"README.md","_id":"@serverless/platform-sdk@2.0.4-4-gfdf3f79","_npmVersion":"6.4.1","_nodeVersion":"10.15.3","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-zk4NUzxox3dcyAXwxOOySs3ZnWy/N+vb51/+D+NG6lIhdYx5VgguQrBDrKvGxYY98zWr2o2NE4uz0etTA3z6VQ==","shasum":"58324d9ba94d247eea90515349472d1adbee9d34","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-2.0.4-4-gfdf3f79.tgz","fileCount":85,"unpackedSize":175272,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdNu4MCRA9TVsSAnZWagAAYg8QAIbBqEExL0knHznBSHKw\nXnB+WLnL23S+7/GLgQoqENmqJjSHU2G7u2HtSOb42lSboSEWdPrrcw/bU9q/\nQ+Du5u2YNAaQniBy++bVmOBaFI0I9TAbFasvc2IPcwc9FEua4B1uBdB3WwEB\nXgsi/UnIEvRjtePJXTfRqEsKscp2qJDeMvq4ppqsThyzvLfH080xUqBkmGvD\nuqhxSHy0IbF4E34JQq9XiWQ92gI41yObQzSIjVn3chncxwsnODfjusDOsPmc\n62mlUjSLAQRXEJTGpa/HbU8KbzrSw//iiat2YzW+YIxI548rPVpZXLkeCaoa\n4Lc6Jnm27yhwkP4FWc0Up/oQwd/nwu2gDZ6bCM2nonKxvchvYQTixqzYYI/n\nFHgALIlgh5hbiwz0OfLIP1k3Ak8CAVMOHV06ENKb1RsbTpoUrppn2RLbK089\n2UYhCXAMUcHuFFjRasCAzzw5l7qphIdi3G8xlfOtSZApRlNkiO5HeleyFy0Y\nJINNH2W6VqnyaRn/P8LxCYvGRMYM2bvd3rFBbGHWQQxRhUJFh2Bkc9drE8+X\nC/DwDSRyX6hBu/9MkM0vkf5riWRNETl58RXSSIJ+FYcW+G/gwFu/TF5Vq/xR\nt3vn/SlVwIUWDSUZHsd7DhvW9zBC3mxfpd+eOBSiLGU40GOMshsi3kkh5PcO\nPiCm\r\n=3GjD\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"services@serverless.com","name":"serverless-main"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_2.0.4-4-gfdf3f79_1563880971773_0.5538048199970949"},"_hasShrinkwrap":false},"2.0.4-8-gbf316d9":{"name":"@serverless/platform-sdk","version":"2.0.4-8-gbf316d9","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"prepare":"npm run build","build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","lint:staged":"lint-staged","setup":"./scripts/setup.sh","setup:ci":"./scripts/setup-ci.sh","test":"./scripts/test.sh","test:ci":"snyk test && ./scripts/test-ci.sh","watch":"./scripts/watch.sh"},"dependencies":{"body-parser":"^1.19.0","chalk":"^2.4.1","express":"^4.16.3","is-docker":"^1.1.0","isomorphic-fetch":"^2.2.1","jwt-decode":"^2.2.0","opn":"^5.5.0","querystring":"^0.2.0","ramda":"^0.25.0","rc":"^1.2.8","regenerator-runtime":"^0.13.1","source-map-support":"^0.5.12","uuid":"^3.3.2","write-file-atomic":"^2.4.2"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^21.2.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.17.2","eslint-plugin-prettier":"^2.6.1","jest-cli":"^21.2.0","lint-staged":"7.1.3","pre-commit":"^1.2.2","prettier":"^1.17.1","snyk":"^1.163.3"},"publishConfig":{"access":"public"},"lint-staged":{"*.js":["eslint --fix .","git add -A"]},"pre-commit":["lint:staged"],"gitHead":"bf316d96d43df65ae7eee1e112f383d228b1b5ac","readme":"# Platform SDK\n\nFunctional SDK for the Serverless Platfrom.\n\n## Project Status\n\n[![Build Status](https://travis-ci.com/serverless/platform-sdk.svg)](https://travis-ci.com/serverless/platform-sdk)\n[![license](https://img.shields.io/npm/l/@serverless/platform-sdk.svg)](https://www.npmjs.com/package/@serverless/platform-sdk)\n[![coverage](https://img.shields.io/codecov/c/github/serverless/platform-sdk.svg)](https://codecov.io/gh/serverless/platform-sdk)\n[![Known Vulnerabilities](https://snyk.io/test/github/serverless/platform-sdk/badge.svg)](https://snyk.io/test/github/serverless/platform-sdk)\n\n## Contents\n\n- [Installation](#installation)\n- [Functions](#functions)\n  - [login](#login)\n  - [refreshToken](#refreshtoken)\n  - [createAccessKey](#createaccesskey)\n  - [archiveService](#archiveservice)\n  - [getServiceUrl](#getserviceurl)\n  - [listTenants](#listtenants)\n  - [createDeployment](#createdeployment)\n  - [updateDeployment](#updatedeployment)\n  - [getApp](#getapp)\n  - [createApp](#createapp)\n\n## installation\n\n```\nnpm i -s @serverless/platform-sdk\n```\n\n## Functions\n### `login`\nOpens a browser for the user to login, along with a running server awaiting auth data once the user logs in.\n\n**Parameters**\n\nNone\n\n**Returns**\n\nPromise resolving to the following object:\n\n- `username` - `string` - dashboard username\n- `accessToken` - `string` - Auth0 access token\n- `idToken` - `string` - Auth0 idToken\n- `refreshToken` - `string` - Auth0 refreshToken\n- `expiresAt` - `string` - epoch time at which the idToken expires\n\n**Example**\n\n```js\nconst { login } = require('@serverless/platform-sdk')\n\nconst { username, accessToken, idToken, expiresAt } = await login()\n```\n\n---\n\n### `refreshToken`\nRefreshes Auth0 idToken\n\n**Parameters**\n\nrefresh token string\n\n**Returns**\n\n\nPromise resolving to the following object:\n\n- `id_token` - `string` - new Auth0 id token\n- `access_token` - `string` - new Auth0 access token\n- `expires_in` - `string` - number of seconds until token expiration\n\n**Example**\n\n```js\nconst { refreshToken } = require('@serverless/platform-sdk')\n\nconst { id_token, access_token, expires_in } = await refreshToken('some-refresh-token')\n```\n\n---\n\n### `createAccessKey`\nCreates a platform access key for the authenticated user.\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `tenant` - `string` - dashboard tenant\n- `idToken` - `string` - Auth0 idToken\n- `title` - `string` - title of the access key\n\n**Returns**\n\nPromise resolving to an `accessKey` string, that is the access key.\n\n**Example**\n\n```js\nconst { createAccessKey } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  tenant: 'eahefnawy',\n  idToken: 'abc',\n  title: 'Framework'\n}\n\nconst accessKey = await createAccessKey(data)\n```\n\n---\n\n### `archiveService`\nArchives a service in the platform.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `accessKey` - `string` - dashboard access key\n- `app` - `string` - service app\n- `name` - `string` - service name\n- `provider` - `string` - provider name\n- `region` - `string` - region name\n\n**Returns**\n\nNone\n\n**Example**\n\n```js\nconst { archiveService } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  accessKey: 'abc',\n  app: 'my-app',\n  name: 'my-service',\n  provider: 'aws',\n  region: 'us-east-1'\n}\n\nawait archiveService(data)\n```\n\n---\n\n### `getServiceUrl`\nConstructs a service url based on passed-in data.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `app` - `string` - service app\n- `name` - `string` - service name\n\n\n**Returns**\n\nThe service url string.\n\n**Example**\n\n```js\nconst { getServiceUrl } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  name: 'my-service'\n}\n\nconst serviceUrl = getServiceUrl(data)\n```\n\n---\n\n### `listTenants`\nLists the tenants for a given username\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `idToken` - `string` - auth0 user id token\n\n\n**Returns**\n\nArray of objects, each represents a single tenant data model.\n\n**Example**\n\n```js\nconst { listTenants } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  idToken: 'abc'\n}\n\nconst tenants = await listTenants(data)\n```\n\n---\n\n### `createDeploymnet`\nCreates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `accessKey` - `string` - dashboard access key\n- `files` - `object` - files which should be stored in the Platforms deployment record\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { createDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  accessKey: 'abc',\n  files: {\n    'serverless-state.json': {\n      //...snip...\n    }\n  }\n}\n\nconst { id } = await createDeployment(data)\n```\n\n---\n\n### `updateDeployment`\nUpdates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `deploymentId` - `string` - id of the previously created deployment\n- `status` - `string` - status of the deployment to update\n- `accessKey` - `string` - dashboard access key\n- `computedData` - `object` - computed data the Platform needs to generate the state items\n\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { updateDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  deploymentId: 'abc',\n  status: 'failed',\n  accessKey: 'abc',\n  computedData: {\n    // ...snip...\n  }\n}\n\nconst { id } = await updateDeployment(data)\n```\n\n---\n\n### `getApp`\nGets a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { getApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await getApp(data)\n```\n\n---\n\n### `createApp`\nCreates a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { createApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await createApp(data)\n```\n","readmeFilename":"README.md","_id":"@serverless/platform-sdk@2.0.4-8-gbf316d9","_npmVersion":"6.4.1","_nodeVersion":"10.15.3","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-Lk/dWz09rGGDy7DmG5q/cc8lbx/n+6aM2V8kho2CTZtOjgHkr/tnrA5roke+Ic6UoWBg2bt0gr1Nf7mulRjpgQ==","shasum":"ca0c63355acbc6cbeabdd183e09f5550468c491a","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-2.0.4-8-gbf316d9.tgz","fileCount":91,"unpackedSize":186114,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdN3WcCRA9TVsSAnZWagAAYVwP/R4FCxD3wHzCcyOVJJS7\nuRQye3XnuJ3McuQPUbKQc7iL2/3RWvVn2ewv8wfIRvyfZx/4NWwin6XaNtXR\nIimeeADtIvsRP26k7wwUHtWHoknjutbwVdPdcWhr3ymKBcGml+XcKrpUj/Lo\nqL91Obd80wlEYIFXIuDVkZMQxlsGdh/0QR1Y7opBoSgJQdpTW8Uo0nYyO5GO\nBKOyFv6h34Rrlh3CtOP5yDhMsUkBKPCaUrYDx1Ugluj848m+HiL++IBhV4BK\nvHk2hidsmfjvPXrgktlORq+gu9YeR+p+O+SyIh8y5Evezrfhu9LUpB/xgCxf\n7r7mhfPTuMmW/HgTq1+qPUlwzx8sF1CKL5VK/TCOcgugApbv3w1TmH9kKbtF\nslXlKvSYvGn8Pck8aO5UTIdVpykOhtbBiE3ZU5x9L/GMowhGDn3n1b11ijt5\n5oz5NH7wms89mUZMmhlrbLG2IQ04BrprcVochnmwLaOLOjCd62NoTpMt4tbY\nwfx//sO0e7/KbrhaV6CpIAd03G4YIwtoVb94TyqryCGBcQ/JKE5zq7nENYv7\nKjVNnYz1G9Tm8fCkEkWAIpVctWv+AyijmueucpI5Tbz2imk3etru6wBzCavH\nCRmZ7ZBxJH5iQULgyBZfZNxyVMS4NGjJqHfb0GgbYi4WIuLsbmmqE9kbugBu\nXJTc\r\n=8K9i\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"services@serverless.com","name":"serverless-main"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_2.0.4-8-gbf316d9_1563915676077_0.1371039301641339"},"_hasShrinkwrap":false},"2.1.0":{"name":"@serverless/platform-sdk","version":"2.1.0","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"prepare":"npm run build","build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","lint:staged":"lint-staged","setup":"./scripts/setup.sh","setup:ci":"./scripts/setup-ci.sh","test":"./scripts/test.sh","test:ci":"snyk test && ./scripts/test-ci.sh","watch":"./scripts/watch.sh"},"dependencies":{"body-parser":"^1.19.0","chalk":"^2.4.1","express":"^4.16.3","is-docker":"^1.1.0","isomorphic-fetch":"^2.2.1","jwt-decode":"^2.2.0","opn":"^5.5.0","querystring":"^0.2.0","ramda":"^0.25.0","rc":"^1.2.8","regenerator-runtime":"^0.13.1","source-map-support":"^0.5.12","uuid":"^3.3.2","write-file-atomic":"^2.4.2"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^21.2.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.17.2","eslint-plugin-prettier":"^2.6.1","jest-cli":"^21.2.0","lint-staged":"7.1.3","pre-commit":"^1.2.2","prettier":"^1.17.1","snyk":"^1.163.3"},"publishConfig":{"access":"public"},"lint-staged":{"*.js":["eslint --fix .","git add -A"]},"pre-commit":["lint:staged"],"gitHead":"bf316d96d43df65ae7eee1e112f383d228b1b5ac","_id":"@serverless/platform-sdk@2.1.0","_npmVersion":"6.4.1","_nodeVersion":"10.15.3","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-f9MY6tf9SXyAEX/1gqWPOJbm83y7F/GxsoGyCYn7mmo9RDIisy8uwoITmqIRsbxcoC6v2xQxuSRlAZPBH4JCyQ==","shasum":"caf3ed7a815ed5be96917fe8669d4b3c222c0065","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-2.1.0.tgz","fileCount":91,"unpackedSize":186103,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdOFZyCRA9TVsSAnZWagAATVsQAJH9CxofNo4JLrQb/bam\nfqNErj2UZGfvhlygyjrV09laDCawU4yDsejx1joRpnwyTpOnpHTINMT+suYc\n29CsyzMKKP7tDnwbSrrDLoiFyBtB1eVaYL2kX7+Bl1dt4cLSAuqnMc7J7iIi\nQIeRXg+ZCN27s/MIeJHCQQ8KWGik+C5kfAbzXqB+GNhJmwWqqgDVB7di8Iod\nM5uccwzjoyZkI62097fLZxiu6G/OblSCvL3k8wqTlZy78JOInMLhPTeWOej9\nsVi6otgu1JMRVmX2DR5RZoF30MTqH2iHdJzXLuBxnXVDnfAbiJldQTmCzeW6\nOUL0dBmtAlMAP0YkxWaO6YXFIyMziY72zdzZFr8+Ll4Q+YEn2pvwUg9uuMWr\nHj3zKufLljzVXbnbHPdLR6O3kDcbNvQQnXw8NHEnHPtpvBspIqLIo0Kj90Qk\n1r4fAGlzjRsdSi0CIBtqzgg87HQYV8eHQ91vcdNL6WcTM4GWKZNWE1HLxzTB\n3ukwqKCJA67aAPgRkui0RmbTABfh3s5cHW148kRI2YpDGQoT1h199JMycNwG\nx+WFo+OsiNqhcmJfLb9VrZsctQfVrKaYCsQ8GVHHIQsji/YUS0oLmtGFf6tf\nTa/ts1PDfrxIbUJd7IgXfKNpeX83e82K3MjXVeUl9yET1tfyuZPlR6dNjZJU\nZThe\r\n=f6ns\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"services@serverless.com","name":"serverless-main"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_2.1.0_1563973233834_0.30153472506261036"},"_hasShrinkwrap":false},"2.1.0-2-g9c4c9d4":{"name":"@serverless/platform-sdk","version":"2.1.0-2-g9c4c9d4","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"prepare":"npm run build","build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","lint:staged":"lint-staged","setup":"./scripts/setup.sh","setup:ci":"./scripts/setup-ci.sh","test":"./scripts/test.sh","test:ci":"snyk test && ./scripts/test-ci.sh","watch":"./scripts/watch.sh"},"dependencies":{"body-parser":"^1.19.0","chalk":"^2.4.1","express":"^4.16.3","https-proxy-agent":"^2.2.2","is-docker":"^1.1.0","isomorphic-fetch":"^2.2.1","jwt-decode":"^2.2.0","opn":"^5.5.0","querystring":"^0.2.0","ramda":"^0.25.0","rc":"^1.2.8","regenerator-runtime":"^0.13.1","source-map-support":"^0.5.12","uuid":"^3.3.2","write-file-atomic":"^2.4.2"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^21.2.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.17.2","eslint-plugin-prettier":"^2.6.1","jest-cli":"^21.2.0","lint-staged":"7.1.3","pre-commit":"^1.2.2","prettier":"^1.17.1","snyk":"^1.163.3"},"publishConfig":{"access":"public"},"lint-staged":{"*.js":["eslint --fix .","git add -A"]},"pre-commit":["lint:staged"],"gitHead":"9c4c9d40a383e14cc9fe28c0cbd841a298fe0fe5","readme":"# Platform SDK\n\nFunctional SDK for the Serverless Platfrom.\n\n## Project Status\n\n[![Build Status](https://travis-ci.com/serverless/platform-sdk.svg)](https://travis-ci.com/serverless/platform-sdk)\n[![license](https://img.shields.io/npm/l/@serverless/platform-sdk.svg)](https://www.npmjs.com/package/@serverless/platform-sdk)\n[![coverage](https://img.shields.io/codecov/c/github/serverless/platform-sdk.svg)](https://codecov.io/gh/serverless/platform-sdk)\n[![Known Vulnerabilities](https://snyk.io/test/github/serverless/platform-sdk/badge.svg)](https://snyk.io/test/github/serverless/platform-sdk)\n\n## Contents\n\n- [Installation](#installation)\n- [Functions](#functions)\n  - [login](#login)\n  - [refreshToken](#refreshtoken)\n  - [createAccessKey](#createaccesskey)\n  - [archiveService](#archiveservice)\n  - [getServiceUrl](#getserviceurl)\n  - [listTenants](#listtenants)\n  - [createDeployment](#createdeployment)\n  - [updateDeployment](#updatedeployment)\n  - [getApp](#getapp)\n  - [createApp](#createapp)\n\n## installation\n\n```\nnpm i -s @serverless/platform-sdk\n```\n\n## Functions\n### `login`\nOpens a browser for the user to login, along with a running server awaiting auth data once the user logs in.\n\n**Parameters**\n\nNone\n\n**Returns**\n\nPromise resolving to the following object:\n\n- `username` - `string` - dashboard username\n- `accessToken` - `string` - Auth0 access token\n- `idToken` - `string` - Auth0 idToken\n- `refreshToken` - `string` - Auth0 refreshToken\n- `expiresAt` - `string` - epoch time at which the idToken expires\n\n**Example**\n\n```js\nconst { login } = require('@serverless/platform-sdk')\n\nconst { username, accessToken, idToken, expiresAt } = await login()\n```\n\n---\n\n### `refreshToken`\nRefreshes Auth0 idToken\n\n**Parameters**\n\nrefresh token string\n\n**Returns**\n\n\nPromise resolving to the following object:\n\n- `id_token` - `string` - new Auth0 id token\n- `access_token` - `string` - new Auth0 access token\n- `expires_in` - `string` - number of seconds until token expiration\n\n**Example**\n\n```js\nconst { refreshToken } = require('@serverless/platform-sdk')\n\nconst { id_token, access_token, expires_in } = await refreshToken('some-refresh-token')\n```\n\n---\n\n### `createAccessKey`\nCreates a platform access key for the authenticated user.\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `tenant` - `string` - dashboard tenant\n- `idToken` - `string` - Auth0 idToken\n- `title` - `string` - title of the access key\n\n**Returns**\n\nPromise resolving to an `accessKey` string, that is the access key.\n\n**Example**\n\n```js\nconst { createAccessKey } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  tenant: 'eahefnawy',\n  idToken: 'abc',\n  title: 'Framework'\n}\n\nconst accessKey = await createAccessKey(data)\n```\n\n---\n\n### `archiveService`\nArchives a service in the platform.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `accessKey` - `string` - dashboard access key\n- `app` - `string` - service app\n- `name` - `string` - service name\n- `provider` - `string` - provider name\n- `region` - `string` - region name\n\n**Returns**\n\nNone\n\n**Example**\n\n```js\nconst { archiveService } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  accessKey: 'abc',\n  app: 'my-app',\n  name: 'my-service',\n  provider: 'aws',\n  region: 'us-east-1'\n}\n\nawait archiveService(data)\n```\n\n---\n\n### `getServiceUrl`\nConstructs a service url based on passed-in data.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `app` - `string` - service app\n- `name` - `string` - service name\n\n\n**Returns**\n\nThe service url string.\n\n**Example**\n\n```js\nconst { getServiceUrl } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  name: 'my-service'\n}\n\nconst serviceUrl = getServiceUrl(data)\n```\n\n---\n\n### `listTenants`\nLists the tenants for a given username\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `idToken` - `string` - auth0 user id token\n\n\n**Returns**\n\nArray of objects, each represents a single tenant data model.\n\n**Example**\n\n```js\nconst { listTenants } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  idToken: 'abc'\n}\n\nconst tenants = await listTenants(data)\n```\n\n---\n\n### `createDeploymnet`\nCreates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `accessKey` - `string` - dashboard access key\n- `files` - `object` - files which should be stored in the Platforms deployment record\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { createDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  accessKey: 'abc',\n  files: {\n    'serverless-state.json': {\n      //...snip...\n    }\n  }\n}\n\nconst { id } = await createDeployment(data)\n```\n\n---\n\n### `updateDeployment`\nUpdates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `deploymentId` - `string` - id of the previously created deployment\n- `status` - `string` - status of the deployment to update\n- `accessKey` - `string` - dashboard access key\n- `computedData` - `object` - computed data the Platform needs to generate the state items\n\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { updateDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  deploymentId: 'abc',\n  status: 'failed',\n  accessKey: 'abc',\n  computedData: {\n    // ...snip...\n  }\n}\n\nconst { id } = await updateDeployment(data)\n```\n\n---\n\n### `getApp`\nGets a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { getApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await getApp(data)\n```\n\n---\n\n### `createApp`\nCreates a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { createApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await createApp(data)\n```\n","readmeFilename":"README.md","_id":"@serverless/platform-sdk@2.1.0-2-g9c4c9d4","_npmVersion":"6.4.1","_nodeVersion":"10.15.3","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-CtooZvbpyOu691pCr+xfu3/qMh0fQOYYlo6ae8LHtFvWvTqNz+ncmXI1+efT3bHiJ7KnmHZaLy1PCeDI1sdt9A==","shasum":"2b9c5b23bfea1adc67d0545bda6d9ed8f73ed240","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-2.1.0-2-g9c4c9d4.tgz","fileCount":91,"unpackedSize":187471,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdUqc3CRA9TVsSAnZWagAAHbsP+gLSqx4Hq0qL9C/qAQ25\nwUHB/I8eumTyo7lo5kmp6fweWiOgk/0mJbbCMfJXnDb43Y5HaDy+5lBhDsg/\nDrPobzl6S9MOSRAgooPApl7lMll0rWqfi16ioD0+7AvYWV6c/70Jlm2NH2SD\nyu36+hoh76OfZFDyCr1aHZHh2/u5RUyb0JWucUZQqNCOc8ayharXlh5urKI7\ncjEb9Hdg8Ri5m6WGtlY2Xu//9NGqeEGITu5ToIvwoxVJVYFhR8U+UXCB9tE/\nagO10lftiQh6cGZfy5lXWC1M7owdNnHZQr+41ZckorNQ2vmMAgHE0+1q6cuX\nZnxb67P3DvGHIDGCxNmEvgqAqxaDsJktx2u7W/jzSW7sn4RHXRKLgED1KVeV\neRPXoHK0VLG4v/M8b0lkb9X2tG/Ab77nAUPRiP+qDrCqacziq6l8zgYK5pcG\nYENdHFjodtqs9yGJm+bMzd8639VpgFH+0qbIaf4oknpI8qjQoCQPRnw66jey\netf+vt8My+nbqHNc0VImApkyN3+skI0Nw2NXljSAc4YW7own9/M7qDPhJSFu\nFkfpnonKE3mgVC+yVUvCUHSlA4LgkqhHJdQxtJNlM8AwLCzn227FNFqEl9GU\nOr4cIZ+r9YmLocogFyNI7PCE48XyUeafV5RAy2zV9wZs76y7BaD23Z/4jLTl\nQfDD\r\n=v7KZ\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"services@serverless.com","name":"serverless-main"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_2.1.0-2-g9c4c9d4_1565697846659_0.5659582793601159"},"_hasShrinkwrap":false},"2.1.0-4-g9feec10":{"name":"@serverless/platform-sdk","version":"2.1.0-4-g9feec10","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"prepare":"npm run build","build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","lint:staged":"lint-staged","setup":"./scripts/setup.sh","setup:ci":"./scripts/setup-ci.sh","test":"./scripts/test.sh","test:ci":"snyk test && ./scripts/test-ci.sh","watch":"./scripts/watch.sh"},"dependencies":{"body-parser":"^1.19.0","chalk":"^2.4.1","express":"^4.16.3","https-proxy-agent":"^2.2.2","is-docker":"^1.1.0","isomorphic-fetch":"^2.2.1","jwt-decode":"^2.2.0","opn":"^5.5.0","querystring":"^0.2.0","ramda":"^0.25.0","rc":"^1.2.8","regenerator-runtime":"^0.13.1","source-map-support":"^0.5.12","uuid":"^3.3.2","write-file-atomic":"^2.4.2"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^21.2.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.17.2","eslint-plugin-prettier":"^2.6.1","jest-cli":"^21.2.0","lint-staged":"7.1.3","pre-commit":"^1.2.2","prettier":"^1.17.1","snyk":"^1.163.3"},"publishConfig":{"access":"public"},"lint-staged":{"*.js":["eslint --fix .","git add -A"]},"pre-commit":["lint:staged"],"gitHead":"9feec10fd1c7a4129795aec7f80f9523ffb7ae77","readme":"# Platform SDK\n\nFunctional SDK for the Serverless Platfrom.\n\n## Project Status\n\n[![Build Status](https://travis-ci.com/serverless/platform-sdk.svg)](https://travis-ci.com/serverless/platform-sdk)\n[![license](https://img.shields.io/npm/l/@serverless/platform-sdk.svg)](https://www.npmjs.com/package/@serverless/platform-sdk)\n[![coverage](https://img.shields.io/codecov/c/github/serverless/platform-sdk.svg)](https://codecov.io/gh/serverless/platform-sdk)\n[![Known Vulnerabilities](https://snyk.io/test/github/serverless/platform-sdk/badge.svg)](https://snyk.io/test/github/serverless/platform-sdk)\n\n## Contents\n\n- [Installation](#installation)\n- [Functions](#functions)\n  - [login](#login)\n  - [refreshToken](#refreshtoken)\n  - [createAccessKey](#createaccesskey)\n  - [archiveService](#archiveservice)\n  - [getServiceUrl](#getserviceurl)\n  - [listTenants](#listtenants)\n  - [createDeployment](#createdeployment)\n  - [updateDeployment](#updatedeployment)\n  - [getApp](#getapp)\n  - [createApp](#createapp)\n\n## installation\n\n```\nnpm i -s @serverless/platform-sdk\n```\n\n## Functions\n### `login`\nOpens a browser for the user to login, along with a running server awaiting auth data once the user logs in.\n\n**Parameters**\n\nNone\n\n**Returns**\n\nPromise resolving to the following object:\n\n- `username` - `string` - dashboard username\n- `accessToken` - `string` - Auth0 access token\n- `idToken` - `string` - Auth0 idToken\n- `refreshToken` - `string` - Auth0 refreshToken\n- `expiresAt` - `string` - epoch time at which the idToken expires\n\n**Example**\n\n```js\nconst { login } = require('@serverless/platform-sdk')\n\nconst { username, accessToken, idToken, expiresAt } = await login()\n```\n\n---\n\n### `refreshToken`\nRefreshes Auth0 idToken\n\n**Parameters**\n\nrefresh token string\n\n**Returns**\n\n\nPromise resolving to the following object:\n\n- `id_token` - `string` - new Auth0 id token\n- `access_token` - `string` - new Auth0 access token\n- `expires_in` - `string` - number of seconds until token expiration\n\n**Example**\n\n```js\nconst { refreshToken } = require('@serverless/platform-sdk')\n\nconst { id_token, access_token, expires_in } = await refreshToken('some-refresh-token')\n```\n\n---\n\n### `createAccessKey`\nCreates a platform access key for the authenticated user.\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `tenant` - `string` - dashboard tenant\n- `idToken` - `string` - Auth0 idToken\n- `title` - `string` - title of the access key\n\n**Returns**\n\nPromise resolving to an `accessKey` string, that is the access key.\n\n**Example**\n\n```js\nconst { createAccessKey } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  tenant: 'eahefnawy',\n  idToken: 'abc',\n  title: 'Framework'\n}\n\nconst accessKey = await createAccessKey(data)\n```\n\n---\n\n### `archiveService`\nArchives a service in the platform.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `accessKey` - `string` - dashboard access key\n- `app` - `string` - service app\n- `name` - `string` - service name\n- `provider` - `string` - provider name\n- `region` - `string` - region name\n\n**Returns**\n\nNone\n\n**Example**\n\n```js\nconst { archiveService } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  accessKey: 'abc',\n  app: 'my-app',\n  name: 'my-service',\n  provider: 'aws',\n  region: 'us-east-1'\n}\n\nawait archiveService(data)\n```\n\n---\n\n### `getServiceUrl`\nConstructs a service url based on passed-in data.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `app` - `string` - service app\n- `name` - `string` - service name\n\n\n**Returns**\n\nThe service url string.\n\n**Example**\n\n```js\nconst { getServiceUrl } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  name: 'my-service'\n}\n\nconst serviceUrl = getServiceUrl(data)\n```\n\n---\n\n### `listTenants`\nLists the tenants for a given username\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `idToken` - `string` - auth0 user id token\n\n\n**Returns**\n\nArray of objects, each represents a single tenant data model.\n\n**Example**\n\n```js\nconst { listTenants } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  idToken: 'abc'\n}\n\nconst tenants = await listTenants(data)\n```\n\n---\n\n### `createDeploymnet`\nCreates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `accessKey` - `string` - dashboard access key\n- `files` - `object` - files which should be stored in the Platforms deployment record\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { createDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  accessKey: 'abc',\n  files: {\n    'serverless-state.json': {\n      //...snip...\n    }\n  }\n}\n\nconst { id } = await createDeployment(data)\n```\n\n---\n\n### `updateDeployment`\nUpdates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `deploymentId` - `string` - id of the previously created deployment\n- `status` - `string` - status of the deployment to update\n- `accessKey` - `string` - dashboard access key\n- `computedData` - `object` - computed data the Platform needs to generate the state items\n\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { updateDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  deploymentId: 'abc',\n  status: 'failed',\n  accessKey: 'abc',\n  computedData: {\n    // ...snip...\n  }\n}\n\nconst { id } = await updateDeployment(data)\n```\n\n---\n\n### `getApp`\nGets a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { getApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await getApp(data)\n```\n\n---\n\n### `createApp`\nCreates a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { createApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await createApp(data)\n```\n","readmeFilename":"README.md","_id":"@serverless/platform-sdk@2.1.0-4-g9feec10","_npmVersion":"6.4.1","_nodeVersion":"10.15.3","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-Zik/31NiW3CdWA03iAmeFUHKN2eMDgTrGZc1+vee3cHFHe9CCsSIeb5ggcJ4yXouz8tiQek5OxXkaIqHjpD0rg==","shasum":"344098a42377d95a1de9571d7c683ff67ad9ecb6","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-2.1.0-4-g9feec10.tgz","fileCount":91,"unpackedSize":187471,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJddraBCRA9TVsSAnZWagAAMdgP/jaWTJ4V5vXnsblIilCi\na5N5gmw3JcxTKQZrmZxlvSyYwuQdrB/nDvLJ19f8S07twACgc3KGEb9kllXr\n/QqKPv7t4qhtz6efE8G3Ilk6lepuk9ZPlj9kNpoQNh7LcO0gemmINDMWNjem\nDip88KAvfWtVLBh9anQNVh0cigiYJMISHxWMa5AbPmGvid/XkdgOJ372x5N9\npIRbv5QCqHrhZUuQ90b3PT49MKO4EGM66wZK0sYyheh1XM4pLEpL7jlPURSh\nJng3bhBEooGRQmDFIaoB/AH+VlAAPFOJ95uT5xbMScGJWTwioAPeWogObFlZ\nLvNo4cSuIxoIKa26vV4zWsPUdvC3UbMcU97bLHIvxTHF4UFKXtpOq1e4AEzs\nOOdEakChmesdJKuLt2f1HVvFGmDI5ygnFTBrCds+6ua6PsWrt2egqBt+hDlV\nxMGxNJNCabMkYIzQsDNmwNCScr3C4vGngg/BljLoSSsB6g8YJv2xQT6YEG3D\ny3N7izn9EXq35GEBt/UVDXCXi5MWtBf4WgelbgB0y/ouwqFCSFqSwgpGIfy1\njqpUtRXg2aU1eaKXHMC8cyj17YN3f/oe5dXCGW5jL9N3fp/iZoYBy0l4kbAC\ndRUDf2kv28YDNtB8uka/32I8uPvgNJ2cf9VgaFdM23bUgYbSMmapZTA7pQ84\nidKE\r\n=eHQT\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"services@serverless.com","name":"serverless-main"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_2.1.0-4-g9feec10_1568061057049_0.3233943479053314"},"_hasShrinkwrap":false},"2.1.1":{"name":"@serverless/platform-sdk","version":"2.1.1","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"prepare":"npm run build","build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","lint:staged":"lint-staged","setup":"./scripts/setup.sh","setup:ci":"./scripts/setup-ci.sh","test":"./scripts/test.sh","test:ci":"snyk test && ./scripts/test-ci.sh","watch":"./scripts/watch.sh"},"dependencies":{"body-parser":"^1.19.0","chalk":"^2.4.1","express":"^4.16.3","https-proxy-agent":"^2.2.2","is-docker":"^1.1.0","isomorphic-fetch":"^2.2.1","jwt-decode":"^2.2.0","opn":"^5.5.0","querystring":"^0.2.0","ramda":"^0.25.0","rc":"^1.2.8","regenerator-runtime":"^0.13.1","source-map-support":"^0.5.12","uuid":"^3.3.2","write-file-atomic":"^2.4.2"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^21.2.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.17.2","eslint-plugin-prettier":"^2.6.1","jest-cli":"^21.2.0","lint-staged":"7.1.3","pre-commit":"^1.2.2","prettier":"^1.17.1","snyk":"^1.163.3"},"publishConfig":{"access":"public"},"lint-staged":{"*.js":["eslint --fix .","git add -A"]},"pre-commit":["lint:staged"],"gitHead":"9feec10fd1c7a4129795aec7f80f9523ffb7ae77","_id":"@serverless/platform-sdk@2.1.1","_npmVersion":"6.4.1","_nodeVersion":"10.15.3","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-bWmXwhUmnDxY4A5zFKinbBQaPcMbxd5i07i8nyJUDjvr8F8gB9fo2n5A20c1ahOIEiFntBRC9y4/6fxNjIsXqQ==","shasum":"da2dc1c806831d66261b9234294f7cb328aeb474","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-2.1.1.tgz","fileCount":91,"unpackedSize":187460,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJddrhHCRA9TVsSAnZWagAAJHEP/jedqoMqzFOIbHKO508c\nsWNBQV0TKw7vmP8ADHK0F9wYNTvJ3FYbBo0t/gdoZ2Yx/QZysKZjyiU9fT56\nXkD2ukbeHjUleK8b6SRCLEn22aTFXHCsXQ909ayR1stV3YTDcsXQ13sXl3fB\nFzoxk0ePJzlbAF5s3d3ibd1pKCL8vKzQENaJwnT4BhFXULvQ8RFX7OyCoStX\nDngNANntE7/vXwLOe3w4AkSsmia/TljhhGpot+K2AkpmrNeKUT/S7i/7d/a1\nYD9fqOJNWsrRa/9sgw2Cuo8/cNq15Wko/FL3xOXLJsb8mepcQphCzQnOMP6j\nPqzYHvMZBrIiD5i59JA5kSVWtD7f9RLYmQHJvh4dPoLo7WtIPx/iEcMJ74iH\nhYTJbp4Smh843HOrdVhyggXBvTaY9U7rm0OSC+buhKtvQf5J1f8P2eGT62TQ\nCBiLkgolkcdNWMXa25dbho9RChhycu/9jUhCdpjDlo6kKUzuN3vA37VaLLzk\nNFo6ImR7745wEBkXi3CVgnvhH6Zw9EIiou8hF3Yc27eIls8COtuIx9dqnGRE\nKMB7C4/2mZQ6prttRLLjBrQyjZz8CwUChQ2mInkHvjkYPGJ6eiHemP/kY+EZ\n9bKm0SPFIKTvzlJe05dVhRt45/yh+EDswbYQ52WXY0IKnvSp8wOEcJiZAQPX\njGs1\r\n=wHn9\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"services@serverless.com","name":"serverless-main"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_2.1.1_1568061511206_0.3237885942862675"},"_hasShrinkwrap":false},"2.1.1-2-g344e807":{"name":"@serverless/platform-sdk","version":"2.1.1-2-g344e807","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"prepare":"npm run build","build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","lint:staged":"lint-staged","setup":"./scripts/setup.sh","setup:ci":"./scripts/setup-ci.sh","test":"./scripts/test.sh","test:ci":"snyk test && ./scripts/test-ci.sh","watch":"./scripts/watch.sh"},"dependencies":{"body-parser":"^1.19.0","chalk":"^2.4.1","express":"^4.16.3","https-proxy-agent":"^3.0.0","is-docker":"^1.1.0","isomorphic-fetch":"^2.2.1","jwt-decode":"^2.2.0","opn":"^5.5.0","querystring":"^0.2.0","ramda":"^0.25.0","rc":"^1.2.8","regenerator-runtime":"^0.13.1","source-map-support":"^0.5.12","uuid":"^3.3.2","write-file-atomic":"^2.4.2"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^21.2.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.17.2","eslint-plugin-prettier":"^2.6.1","jest-cli":"^21.2.0","lint-staged":"7.1.3","pre-commit":"^1.2.2","prettier":"^1.17.1","snyk":"^1.163.3"},"publishConfig":{"access":"public"},"lint-staged":{"*.js":["eslint --fix .","git add -A"]},"pre-commit":["lint:staged"],"gitHead":"344e807eba6b1f545116c3f4dba9c3010ce1bf84","readme":"# Platform SDK\n\nFunctional SDK for the Serverless Platfrom.\n\n## Project Status\n\n[![Build Status](https://travis-ci.com/serverless/platform-sdk.svg)](https://travis-ci.com/serverless/platform-sdk)\n[![license](https://img.shields.io/npm/l/@serverless/platform-sdk.svg)](https://www.npmjs.com/package/@serverless/platform-sdk)\n[![coverage](https://img.shields.io/codecov/c/github/serverless/platform-sdk.svg)](https://codecov.io/gh/serverless/platform-sdk)\n[![Known Vulnerabilities](https://snyk.io/test/github/serverless/platform-sdk/badge.svg)](https://snyk.io/test/github/serverless/platform-sdk)\n\n## Contents\n\n- [Installation](#installation)\n- [Functions](#functions)\n  - [login](#login)\n  - [refreshToken](#refreshtoken)\n  - [createAccessKey](#createaccesskey)\n  - [archiveService](#archiveservice)\n  - [getServiceUrl](#getserviceurl)\n  - [listTenants](#listtenants)\n  - [createDeployment](#createdeployment)\n  - [updateDeployment](#updatedeployment)\n  - [getApp](#getapp)\n  - [createApp](#createapp)\n\n## installation\n\n```\nnpm i -s @serverless/platform-sdk\n```\n\n## Functions\n### `login`\nOpens a browser for the user to login, along with a running server awaiting auth data once the user logs in.\n\n**Parameters**\n\nNone\n\n**Returns**\n\nPromise resolving to the following object:\n\n- `username` - `string` - dashboard username\n- `accessToken` - `string` - Auth0 access token\n- `idToken` - `string` - Auth0 idToken\n- `refreshToken` - `string` - Auth0 refreshToken\n- `expiresAt` - `string` - epoch time at which the idToken expires\n\n**Example**\n\n```js\nconst { login } = require('@serverless/platform-sdk')\n\nconst { username, accessToken, idToken, expiresAt } = await login()\n```\n\n---\n\n### `refreshToken`\nRefreshes Auth0 idToken\n\n**Parameters**\n\nrefresh token string\n\n**Returns**\n\n\nPromise resolving to the following object:\n\n- `id_token` - `string` - new Auth0 id token\n- `access_token` - `string` - new Auth0 access token\n- `expires_in` - `string` - number of seconds until token expiration\n\n**Example**\n\n```js\nconst { refreshToken } = require('@serverless/platform-sdk')\n\nconst { id_token, access_token, expires_in } = await refreshToken('some-refresh-token')\n```\n\n---\n\n### `createAccessKey`\nCreates a platform access key for the authenticated user.\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `tenant` - `string` - dashboard tenant\n- `idToken` - `string` - Auth0 idToken\n- `title` - `string` - title of the access key\n\n**Returns**\n\nPromise resolving to an `accessKey` string, that is the access key.\n\n**Example**\n\n```js\nconst { createAccessKey } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  tenant: 'eahefnawy',\n  idToken: 'abc',\n  title: 'Framework'\n}\n\nconst accessKey = await createAccessKey(data)\n```\n\n---\n\n### `archiveService`\nArchives a service in the platform.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `accessKey` - `string` - dashboard access key\n- `app` - `string` - service app\n- `name` - `string` - service name\n- `provider` - `string` - provider name\n- `region` - `string` - region name\n\n**Returns**\n\nNone\n\n**Example**\n\n```js\nconst { archiveService } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  accessKey: 'abc',\n  app: 'my-app',\n  name: 'my-service',\n  provider: 'aws',\n  region: 'us-east-1'\n}\n\nawait archiveService(data)\n```\n\n---\n\n### `getServiceUrl`\nConstructs a service url based on passed-in data.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `app` - `string` - service app\n- `name` - `string` - service name\n\n\n**Returns**\n\nThe service url string.\n\n**Example**\n\n```js\nconst { getServiceUrl } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  name: 'my-service'\n}\n\nconst serviceUrl = getServiceUrl(data)\n```\n\n---\n\n### `listTenants`\nLists the tenants for a given username\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `idToken` - `string` - auth0 user id token\n\n\n**Returns**\n\nArray of objects, each represents a single tenant data model.\n\n**Example**\n\n```js\nconst { listTenants } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  idToken: 'abc'\n}\n\nconst tenants = await listTenants(data)\n```\n\n---\n\n### `createDeploymnet`\nCreates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `accessKey` - `string` - dashboard access key\n- `files` - `object` - files which should be stored in the Platforms deployment record\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { createDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  accessKey: 'abc',\n  files: {\n    'serverless-state.json': {\n      //...snip...\n    }\n  }\n}\n\nconst { id } = await createDeployment(data)\n```\n\n---\n\n### `updateDeployment`\nUpdates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `deploymentId` - `string` - id of the previously created deployment\n- `status` - `string` - status of the deployment to update\n- `accessKey` - `string` - dashboard access key\n- `computedData` - `object` - computed data the Platform needs to generate the state items\n\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { updateDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  deploymentId: 'abc',\n  status: 'failed',\n  accessKey: 'abc',\n  computedData: {\n    // ...snip...\n  }\n}\n\nconst { id } = await updateDeployment(data)\n```\n\n---\n\n### `getApp`\nGets a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { getApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await getApp(data)\n```\n\n---\n\n### `createApp`\nCreates a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { createApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await createApp(data)\n```\n","readmeFilename":"README.md","_id":"@serverless/platform-sdk@2.1.1-2-g344e807","_npmVersion":"6.4.1","_nodeVersion":"10.15.3","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-gQNJUfunktSR1jC/5EKLgSIYKAwqjXd4D2bfFYcS+s7O1YMPj4Zih2i9UhmUo2PCHR1c2EmK8YJSXIRtvjsorA==","shasum":"9f7449cb1f9c5ee002f348da0d1ca06514f3c6f6","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-2.1.1-2-g344e807.tgz","fileCount":91,"unpackedSize":187471,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdnyDXCRA9TVsSAnZWagAASNQQAKDLz3m82BoTKMbiVzvM\nqYJfwbAeKqpewNDhdCV2IUxSFsS92GKN6fzrrOo7B4DkxjoJakWhEyg5RSr2\nbaDH56fe+E8AhhhujRs8mBT16KnZ5fgZnJQN9TMtBwjWn78PLGNO7Vh0p+UC\nofjLQraI3wHn7/bvCQnLU120qGykgyGZ384nubSqTH2o89mbwKW/ZBmISqOf\nx8a0xGSsDlLRq+YN1BeGIl6c3m/h+cmO0+imCUOUtz8D9tfBXu3U9ryai5uv\nd4VcZIjtZ4wlp4D8B3+HTyUvQyIFySeTYxlrnaHFLRktotY2Gh6B4Rin1kVZ\n1KxBMjraHCuSsK+ZQojBBTZg9h6IKx3OCJpG9Hm0so8ujyIfHLaElf9i4eAG\n8eWwSDQ3aOj16iBzBPaPSkqsn+oC7zSHjQEenFsHBf8u1Vt5G4cvYmxWuOQM\nIWoqveNB5IevrNGokMYb2eZVuUf4lk28s9BaEAdoidny1NVG2hpm7HsL+kqS\nzDYv3ichv/xdJBocEYKJno7DlJfnAzZAkJIXBvukQ2VORKxG0HltzFhqnW9x\nxRIzdF2zYkh+q7Bviil/Kpl0w3tdWBStKN9rJ729MN06ThCDUFjn9fiC9ZJE\nazeIpM9RXYVb/R6+kCVnfe8yBLYaaM1iJiA1jmSQY6myw22+kEL82UdFPl9Q\nXT55\r\n=nGJ9\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"services@serverless.com","name":"serverless-main"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_2.1.1-2-g344e807_1570709719013_0.5885053991937126"},"_hasShrinkwrap":false},"2.1.2":{"name":"@serverless/platform-sdk","version":"2.1.2","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"prepare":"npm run build","build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","lint:staged":"lint-staged","setup":"./scripts/setup.sh","setup:ci":"./scripts/setup-ci.sh","test":"./scripts/test.sh","test:ci":"snyk test && ./scripts/test-ci.sh","watch":"./scripts/watch.sh"},"dependencies":{"body-parser":"^1.19.0","chalk":"^2.4.1","express":"^4.16.3","https-proxy-agent":"^3.0.0","is-docker":"^1.1.0","isomorphic-fetch":"^2.2.1","jwt-decode":"^2.2.0","opn":"^5.5.0","querystring":"^0.2.0","ramda":"^0.25.0","rc":"^1.2.8","regenerator-runtime":"^0.13.1","source-map-support":"^0.5.12","uuid":"^3.3.2","write-file-atomic":"^2.4.2"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^21.2.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.17.2","eslint-plugin-prettier":"^2.6.1","jest-cli":"^21.2.0","lint-staged":"7.1.3","pre-commit":"^1.2.2","prettier":"^1.17.1","snyk":"^1.163.3"},"publishConfig":{"access":"public"},"lint-staged":{"*.js":["eslint --fix .","git add -A"]},"pre-commit":["lint:staged"],"gitHead":"344e807eba6b1f545116c3f4dba9c3010ce1bf84","_id":"@serverless/platform-sdk@2.1.2","_npmVersion":"6.4.1","_nodeVersion":"10.15.3","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-+mMrcagi6ROhlhHaZ5CBSJrWbs/Rk+/24Vqm+KEQliDpktr5CHTC5sFGk01uiKVFyceR3fTwxmNlRyywM7DRPA==","shasum":"69a5cd36107d19a35e62423111f229c18cc939e1","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-2.1.2.tgz","fileCount":91,"unpackedSize":187460,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdnypnCRA9TVsSAnZWagAA4YYP/jQlT3Nd0zC6hfqN+Hum\nInU2kFLDoxMNuqG2uzoeF2Ot3E+Q8/FARaIunKqOSNGv5Ubm3As+Nvk0s/ua\nhOGrwrtfgyE/9Vg8aJ/61hzVx8d8K9LSZg9xDcaGFtZQAtrM6Nej7Z1r2kNu\nejvDruob0YLlAExAPXmAXVjxDkozW4hkFqzNea/IOmGOzEYdSLFuywV4M7EA\nQfqk/Ke379rFwLo603sl/+mMfXcDjvgOImjIJNkJ3cBxK4hBGuykiQ3I4zOe\n7A+J6mfVU4Ep4/hO5ykvAT245fBoCxoms44pQNqDpuVkjKsNg6g+j2o733Bs\naXlzw2LwMlu9NtNNCNjxVhByBceh0xch0GRhknd0qiAAR6tAr2bJN3TzX1O3\nWQAW6pGaiE3srvMcYQEZTuyeY7Bv+8UAOP2IFxF8tpQ/1BKvFuhhWlpTZpF3\niNrWJG6wzBL7hCOunzpjbBPFNqUkKlJL/rFQsZko8NCgkzUzBR/NMtNUJMVR\nqw8TxsOovJxCbUDo64M8MUb9UMBFvR4K8iI88M80z+NRpwfV7ctwf3q9m0pe\nuxwU6zxJ3UiA/txFTkU8lxMJWNwOZX3dqQ8JqOaLdTsdnc8fE2GmcWxrckAm\nCPKyCwQdZIMGjFnmCpFxn0g/OznJjP3b08YsRRK+FdkzmOWyXX2JJt/8zNOv\nk+iD\r\n=MIBq\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"services@serverless.com","name":"serverless-main"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_2.1.2_1570712166835_0.63405823342835"},"_hasShrinkwrap":false},"2.1.2-9-g14cd43f":{"name":"@serverless/platform-sdk","version":"2.1.2-9-g14cd43f","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"prepare":"npm run build","build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","lint:staged":"lint-staged","setup":"./scripts/setup.sh","setup:ci":"./scripts/setup-ci.sh","test":"./scripts/test.sh","test:ci":"snyk test && ./scripts/test-ci.sh","watch":"./scripts/watch.sh"},"dependencies":{"chalk":"^2.4.1","https-proxy-agent":"^3.0.0","is-docker":"^1.1.0","isomorphic-fetch":"^2.2.1","jwt-decode":"^2.2.0","opn":"^5.5.0","querystring":"^0.2.0","ramda":"^0.25.0","rc":"^1.2.8","regenerator-runtime":"^0.13.1","source-map-support":"^0.5.12","uuid":"^3.3.2","write-file-atomic":"^2.4.2","ws":"<7.0.0"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^21.2.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.17.2","eslint-plugin-prettier":"^2.6.1","jest-cli":"^21.2.0","lint-staged":"7.1.3","pre-commit":"^1.2.2","prettier":"^1.17.1","snyk":"^1.163.3"},"publishConfig":{"access":"public"},"lint-staged":{"*.js":["eslint --fix .","git add -A"]},"pre-commit":["lint:staged"],"gitHead":"14cd43f2bd6b8f956b4c23df4f4bbbed80d64680","readme":"# Platform SDK\n\nFunctional SDK for the Serverless Platfrom.\n\n## Project Status\n\n[![Build Status](https://travis-ci.com/serverless/platform-sdk.svg)](https://travis-ci.com/serverless/platform-sdk)\n[![license](https://img.shields.io/npm/l/@serverless/platform-sdk.svg)](https://www.npmjs.com/package/@serverless/platform-sdk)\n[![coverage](https://img.shields.io/codecov/c/github/serverless/platform-sdk.svg)](https://codecov.io/gh/serverless/platform-sdk)\n[![Known Vulnerabilities](https://snyk.io/test/github/serverless/platform-sdk/badge.svg)](https://snyk.io/test/github/serverless/platform-sdk)\n\n## Contents\n\n- [Installation](#installation)\n- [Functions](#functions)\n  - [login](#login)\n  - [refreshToken](#refreshtoken)\n  - [createAccessKey](#createaccesskey)\n  - [archiveService](#archiveservice)\n  - [getServiceUrl](#getserviceurl)\n  - [listTenants](#listtenants)\n  - [createDeployment](#createdeployment)\n  - [updateDeployment](#updatedeployment)\n  - [getApp](#getapp)\n  - [createApp](#createapp)\n\n## installation\n\n```\nnpm i -s @serverless/platform-sdk\n```\n\n## Functions\n### `login`\nOpens a browser for the user to login, along with a running server awaiting auth data once the user logs in.\n\n**Parameters**\n\nNone\n\n**Returns**\n\nPromise resolving to the following object:\n\n- `username` - `string` - dashboard username\n- `accessToken` - `string` - Auth0 access token\n- `idToken` - `string` - Auth0 idToken\n- `refreshToken` - `string` - Auth0 refreshToken\n- `expiresAt` - `string` - epoch time at which the idToken expires\n\n**Example**\n\n```js\nconst { login } = require('@serverless/platform-sdk')\n\nconst { username, accessToken, idToken, expiresAt } = await login()\n```\n\n---\n\n### `refreshToken`\nRefreshes Auth0 idToken\n\n**Parameters**\n\nrefresh token string\n\n**Returns**\n\n\nPromise resolving to the following object:\n\n- `id_token` - `string` - new Auth0 id token\n- `access_token` - `string` - new Auth0 access token\n- `expires_in` - `string` - number of seconds until token expiration\n\n**Example**\n\n```js\nconst { refreshToken } = require('@serverless/platform-sdk')\n\nconst { id_token, access_token, expires_in } = await refreshToken('some-refresh-token')\n```\n\n---\n\n### `createAccessKey`\nCreates a platform access key for the authenticated user.\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `tenant` - `string` - dashboard tenant\n- `idToken` - `string` - Auth0 idToken\n- `title` - `string` - title of the access key\n\n**Returns**\n\nPromise resolving to an `accessKey` string, that is the access key.\n\n**Example**\n\n```js\nconst { createAccessKey } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  tenant: 'eahefnawy',\n  idToken: 'abc',\n  title: 'Framework'\n}\n\nconst accessKey = await createAccessKey(data)\n```\n\n---\n\n### `archiveService`\nArchives a service in the platform.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `accessKey` - `string` - dashboard access key\n- `app` - `string` - service app\n- `name` - `string` - service name\n- `provider` - `string` - provider name\n- `region` - `string` - region name\n\n**Returns**\n\nNone\n\n**Example**\n\n```js\nconst { archiveService } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  accessKey: 'abc',\n  app: 'my-app',\n  name: 'my-service',\n  provider: 'aws',\n  region: 'us-east-1'\n}\n\nawait archiveService(data)\n```\n\n---\n\n### `getServiceUrl`\nConstructs a service url based on passed-in data.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `app` - `string` - service app\n- `name` - `string` - service name\n\n\n**Returns**\n\nThe service url string.\n\n**Example**\n\n```js\nconst { getServiceUrl } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  name: 'my-service'\n}\n\nconst serviceUrl = getServiceUrl(data)\n```\n\n---\n\n### `listTenants`\nLists the tenants for a given username\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `idToken` - `string` - auth0 user id token\n\n\n**Returns**\n\nArray of objects, each represents a single tenant data model.\n\n**Example**\n\n```js\nconst { listTenants } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  idToken: 'abc'\n}\n\nconst tenants = await listTenants(data)\n```\n\n---\n\n### `createDeploymnet`\nCreates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `accessKey` - `string` - dashboard access key\n- `files` - `object` - files which should be stored in the Platforms deployment record\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { createDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  accessKey: 'abc',\n  files: {\n    'serverless-state.json': {\n      //...snip...\n    }\n  }\n}\n\nconst { id } = await createDeployment(data)\n```\n\n---\n\n### `updateDeployment`\nUpdates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `deploymentId` - `string` - id of the previously created deployment\n- `status` - `string` - status of the deployment to update\n- `accessKey` - `string` - dashboard access key\n- `computedData` - `object` - computed data the Platform needs to generate the state items\n\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { updateDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  deploymentId: 'abc',\n  status: 'failed',\n  accessKey: 'abc',\n  computedData: {\n    // ...snip...\n  }\n}\n\nconst { id } = await updateDeployment(data)\n```\n\n---\n\n### `getApp`\nGets a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { getApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await getApp(data)\n```\n\n---\n\n### `createApp`\nCreates a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { createApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await createApp(data)\n```\n","readmeFilename":"README.md","_id":"@serverless/platform-sdk@2.1.2-9-g14cd43f","_npmVersion":"6.4.1","_nodeVersion":"10.15.3","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-92B0FD2pEmMvnZjEnRpGE9qRjxuFZsnJjAil0p1ag6tHAKkVOdrnIe5Q3lWSkA4bt1XVE+AnglGhbzaGpcBDYg==","shasum":"06fdf6962d717efd4c6b3d243d8668f8bf6d43ee","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-2.1.2-9-g14cd43f.tgz","fileCount":93,"unpackedSize":187630,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdrdAMCRA9TVsSAnZWagAAfKIP+wRn3n0Re9dQ4LDjXsn+\nO9KB2ZG6dzIux4jFo9CIDzDUxRFYZItWQdsdRoWPHmh7iFnpZI4dOWNZNYtt\nGAi4DDtFqQMSTh89WiPj3xjxxC2qEhh7BnG8HQLcU6wve+tUKtg4J4Xct0PA\n1v1q6yJidHnqhQ4+sLMQ/kdguOlCFrihrRV9CtGW2h8C0CUJjH+gg6LlBQOp\nfxzi/xDKPTlpmXQpLs7lKg99E6SrB2EMQAwkUJwD2o82KawhbkbC0+my15O4\n2GgpAZ5nrO8K9vsnuTKVs2ysylzegoRR1tC4L6j5DWrIBcCsUMjYm80JLvvH\nschajNNnFaslcZTuJZEHwIhLfzA6Fe85qLWrwjQFHD3pwrlmg2SOBz/F6dS+\nFT73Onh+5Dohiss9Y10eN410n8O7Cw3O1yd8LqkhpdhcWo2wBpXfOUcn8D0L\nb3PUN1762+CWCvd1dix/sIkAjsk9eTE4rdsvGmhb+Q0OrvWBAaqkisduXvws\nMlLksl00NkqrEL5ls62f9eG96nwBvShV2O1E1HQhlZ719AHVpmt3MMkdeMim\nRc9Pdoh2nx2L5JBfUw8zv3TX9eChiIUI+yq5dYAodmCk7x/ijursza8hvqJo\n8Y5UyjyjAPd/gHuoHCnXGEKJ2D6adIa2gtWfXX1+f/YnVhCzj6VZVxlsBOer\nOdUc\r\n=P14Q\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"services@serverless.com","name":"serverless-main"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_2.1.2-9-g14cd43f_1571672075797_0.781738744042638"},"_hasShrinkwrap":false},"2.1.2-14-ge361793":{"name":"@serverless/platform-sdk","version":"2.1.2-14-ge361793","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"prepare":"npm run build","build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","lint:staged":"lint-staged","setup":"./scripts/setup.sh","setup:ci":"./scripts/setup-ci.sh","test":"./scripts/test.sh","test:ci":"snyk test && ./scripts/test-ci.sh","watch":"./scripts/watch.sh"},"dependencies":{"chalk":"^2.4.1","https-proxy-agent":"^3.0.0","is-docker":"^1.1.0","isomorphic-fetch":"^2.2.1","jwt-decode":"^2.2.0","opn":"^5.5.0","querystring":"^0.2.0","ramda":"^0.25.0","rc":"^1.2.8","regenerator-runtime":"^0.13.1","source-map-support":"^0.5.12","uuid":"^3.3.2","write-file-atomic":"^2.4.2","ws":"<7.0.0"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^21.2.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.17.2","eslint-plugin-prettier":"^2.6.1","jest-cli":"^21.2.0","lint-staged":"7.1.3","pre-commit":"^1.2.2","prettier":"^1.17.1","snyk":"^1.163.3"},"publishConfig":{"access":"public"},"lint-staged":{"*.js":["eslint --fix .","git add -A"]},"pre-commit":["lint:staged"],"gitHead":"e3617932cf20f24af607ba1dc907be8f7749ec27","readme":"# Platform SDK\n\nFunctional SDK for the Serverless Platfrom.\n\n## Project Status\n\n[![Build Status](https://travis-ci.com/serverless/platform-sdk.svg)](https://travis-ci.com/serverless/platform-sdk)\n[![license](https://img.shields.io/npm/l/@serverless/platform-sdk.svg)](https://www.npmjs.com/package/@serverless/platform-sdk)\n[![coverage](https://img.shields.io/codecov/c/github/serverless/platform-sdk.svg)](https://codecov.io/gh/serverless/platform-sdk)\n[![Known Vulnerabilities](https://snyk.io/test/github/serverless/platform-sdk/badge.svg)](https://snyk.io/test/github/serverless/platform-sdk)\n\n## Contents\n\n- [Installation](#installation)\n- [Functions](#functions)\n  - [login](#login)\n  - [refreshToken](#refreshtoken)\n  - [createAccessKey](#createaccesskey)\n  - [archiveService](#archiveservice)\n  - [getServiceUrl](#getserviceurl)\n  - [listTenants](#listtenants)\n  - [createDeployment](#createdeployment)\n  - [updateDeployment](#updatedeployment)\n  - [getApp](#getapp)\n  - [createApp](#createapp)\n\n## installation\n\n```\nnpm i -s @serverless/platform-sdk\n```\n\n## Functions\n### `login`\nOpens a browser for the user to login, along with a running server awaiting auth data once the user logs in.\n\n**Parameters**\n\nNone\n\n**Returns**\n\nPromise resolving to the following object:\n\n- `username` - `string` - dashboard username\n- `accessToken` - `string` - Auth0 access token\n- `idToken` - `string` - Auth0 idToken\n- `refreshToken` - `string` - Auth0 refreshToken\n- `expiresAt` - `string` - epoch time at which the idToken expires\n\n**Example**\n\n```js\nconst { login } = require('@serverless/platform-sdk')\n\nconst { username, accessToken, idToken, expiresAt } = await login()\n```\n\n---\n\n### `refreshToken`\nRefreshes Auth0 idToken\n\n**Parameters**\n\nrefresh token string\n\n**Returns**\n\n\nPromise resolving to the following object:\n\n- `id_token` - `string` - new Auth0 id token\n- `access_token` - `string` - new Auth0 access token\n- `expires_in` - `string` - number of seconds until token expiration\n\n**Example**\n\n```js\nconst { refreshToken } = require('@serverless/platform-sdk')\n\nconst { id_token, access_token, expires_in } = await refreshToken('some-refresh-token')\n```\n\n---\n\n### `createAccessKey`\nCreates a platform access key for the authenticated user.\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `tenant` - `string` - dashboard tenant\n- `idToken` - `string` - Auth0 idToken\n- `title` - `string` - title of the access key\n\n**Returns**\n\nPromise resolving to an `accessKey` string, that is the access key.\n\n**Example**\n\n```js\nconst { createAccessKey } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  tenant: 'eahefnawy',\n  idToken: 'abc',\n  title: 'Framework'\n}\n\nconst accessKey = await createAccessKey(data)\n```\n\n---\n\n### `archiveService`\nArchives a service in the platform.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `accessKey` - `string` - dashboard access key\n- `app` - `string` - service app\n- `name` - `string` - service name\n- `provider` - `string` - provider name\n- `region` - `string` - region name\n\n**Returns**\n\nNone\n\n**Example**\n\n```js\nconst { archiveService } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  accessKey: 'abc',\n  app: 'my-app',\n  name: 'my-service',\n  provider: 'aws',\n  region: 'us-east-1'\n}\n\nawait archiveService(data)\n```\n\n---\n\n### `getServiceUrl`\nConstructs a service url based on passed-in data.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `app` - `string` - service app\n- `name` - `string` - service name\n\n\n**Returns**\n\nThe service url string.\n\n**Example**\n\n```js\nconst { getServiceUrl } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  name: 'my-service'\n}\n\nconst serviceUrl = getServiceUrl(data)\n```\n\n---\n\n### `listTenants`\nLists the tenants for a given username\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `idToken` - `string` - auth0 user id token\n\n\n**Returns**\n\nArray of objects, each represents a single tenant data model.\n\n**Example**\n\n```js\nconst { listTenants } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  idToken: 'abc'\n}\n\nconst tenants = await listTenants(data)\n```\n\n---\n\n### `createDeploymnet`\nCreates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `accessKey` - `string` - dashboard access key\n- `files` - `object` - files which should be stored in the Platforms deployment record\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { createDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  accessKey: 'abc',\n  files: {\n    'serverless-state.json': {\n      //...snip...\n    }\n  }\n}\n\nconst { id } = await createDeployment(data)\n```\n\n---\n\n### `updateDeployment`\nUpdates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `deploymentId` - `string` - id of the previously created deployment\n- `status` - `string` - status of the deployment to update\n- `accessKey` - `string` - dashboard access key\n- `computedData` - `object` - computed data the Platform needs to generate the state items\n\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { updateDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  deploymentId: 'abc',\n  status: 'failed',\n  accessKey: 'abc',\n  computedData: {\n    // ...snip...\n  }\n}\n\nconst { id } = await updateDeployment(data)\n```\n\n---\n\n### `getApp`\nGets a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { getApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await getApp(data)\n```\n\n---\n\n### `createApp`\nCreates a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { createApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await createApp(data)\n```\n","readmeFilename":"README.md","_id":"@serverless/platform-sdk@2.1.2-14-ge361793","_npmVersion":"6.4.1","_nodeVersion":"10.15.3","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-jaIJjT3yuMC0B3pWpPLdxYCQ9baGxvNLTmrOfLQey3qKqSycxxqgxnB8HCa9XIzFVOkYDlmIt9zg/Q7l1+QCgw==","shasum":"54243a256a6018843f58df97040137ebe7b9566d","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-2.1.2-14-ge361793.tgz","fileCount":93,"unpackedSize":187118,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJduxN6CRA9TVsSAnZWagAA6O8P/2bwLalowgfzGzyct8m2\nZE4vH0ni2hw1KRFReGRiQYx/yPHe/WqIp1YTuB4vX7SSApfeJ6Jzoaym0NQn\nCxCcH2Alh0sqdtIX5FeDi4kqFGoVo+PeTSkVW7/tSCnhnubO10qcZZ+eiyS6\nYrUSPANTkALbfrtHdKePjgbcVlqx/MiQieS28aWa1M0K75uM4d2JgtumwGqx\ndhbe3H7lqJVPmoPB2vwAfut+rOyzRf6etnf+FookvW33DSSVCKbE0kbxMyLW\ndGftb8McStNLLC+NZVDpCXFlXparXMGer7okHwBnvaHD2MudlJarQv0GJO4E\nyaxw1DMpLbD11fqi2OCspHlV68+XbzB9bUzsZjpk4WrsJ37TD5e2T8e7L9vn\nZBzFVNXxAX8qC3SNLgpdgac7fOVAfy8VT1TkOsSdHHQC5uFk+FlH5kZj60lJ\nIOziUW4MsfV5bs0KoGwcO61pJueLPd/ZtZVwfg9wfQF1ybbyxZFlo8txLzT7\niWYCeanhp7Feyx+TeI+YnEtiUWkVJhzkEuZY90q7y1rbh2C28ENt0vFbyTLE\nPRwEfHi959tE9HswewAqaGBWKsTh9IVprX+MPcJUZKXlRySSKqR/IknfI/ah\nvID0tDd3AYeVKoHk9JouTySZEp5mxwAeNF+65ehoGnIp2KszWlvhBRBJY1p8\nVP14\r\n=tmPZ\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"services@serverless.com","name":"serverless-main"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_2.1.2-14-ge361793_1572541306394_0.6863868929671386"},"_hasShrinkwrap":false},"2.2.0":{"name":"@serverless/platform-sdk","version":"2.2.0","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"prepare":"npm run build","build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","lint:staged":"lint-staged","setup":"./scripts/setup.sh","setup:ci":"./scripts/setup-ci.sh","test":"./scripts/test.sh","test:ci":"snyk test && ./scripts/test-ci.sh","watch":"./scripts/watch.sh"},"dependencies":{"chalk":"^2.4.1","https-proxy-agent":"^3.0.0","is-docker":"^1.1.0","isomorphic-fetch":"^2.2.1","jwt-decode":"^2.2.0","opn":"^5.5.0","querystring":"^0.2.0","ramda":"^0.25.0","rc":"^1.2.8","regenerator-runtime":"^0.13.1","source-map-support":"^0.5.12","uuid":"^3.3.2","write-file-atomic":"^2.4.2","ws":"<7.0.0"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^21.2.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.17.2","eslint-plugin-prettier":"^2.6.1","jest-cli":"^21.2.0","lint-staged":"7.1.3","pre-commit":"^1.2.2","prettier":"^1.17.1","snyk":"^1.163.3"},"publishConfig":{"access":"public"},"lint-staged":{"*.js":["eslint --fix .","git add -A"]},"pre-commit":["lint:staged"],"gitHead":"e3617932cf20f24af607ba1dc907be8f7749ec27","_id":"@serverless/platform-sdk@2.2.0","_npmVersion":"6.4.1","_nodeVersion":"10.15.3","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-w5A/szD0ZMUIuqUt5HyHllQ9LKO9/mpgv3rtJjLRI5ZJq1GvY4pv2pyQQPxGLT1gv0ER+b5vF+4tfrkx6MEuEw==","shasum":"ee650140572d62a434019723088b63ae9a1adaab","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-2.2.0.tgz","fileCount":93,"unpackedSize":187106,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJduzmJCRA9TVsSAnZWagAAZBYP/jhDphB5QT0s+pqr9Xmm\nOQiIYSxMqMAxIOFU+4YfEg4JG/JmPFuaVs9H1s2fb7Lsk4t0xWs6dmtQwRBp\n5HQ90hsCU8tb0bYpaSIVjXmV5zvnStZ31PGZRkqF/drA+/QXKHKi8ON2x2xH\nSdlCxXxVk3FsI1fN6EvnU1QATbj5WfxpiChCBzdiHSJmeYeufnwbLtbj2ysM\nMFwSkn/lDdGn6zkxgZf4QQwLtz9wXsQA5rANybnfNmSYzdrcSJTC0frFQS4/\ntZY+jTtaISdPO/H59WxZnL0ehBoSF0oNrZV4wpEXc1RTG17UYxHewqYvMJAD\n+VTJe71zZImmm2JC20Qgi5rkar8nasDfk3+rv+ggxkBun12JvCtLllgD0Hkp\ncXOJuqkCtPl64kJac9d3x7YcZZtqt4xs+DJUukL8Iq6ktxZPTl6WU08BiwBq\nLMin78GmZtc4WxDXyeXUBLtieofknndVfSWxgaEbr5r01vAmdubnyyng61Jy\nQ/vyVKZsLjg6yTnzsN0vdzbffGGCoIk7cYlMAAJEU2bM9aNAoN53hfTv35pU\n5zXhrCIENh5ZcA7h730EVjpAE8apBJsccmjWsGoCf2aY10vRVh6E0F5taAU7\nEQRg3z9fXL+dAFxpVvHoIcyFgz230x7fgmBWsZy2MFqQVCMtJqlvj2vnHPCd\nCl1W\r\n=sG+8\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"services@serverless.com","name":"serverless-main"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_2.2.0_1572551049178_0.7003458036959265"},"_hasShrinkwrap":false},"2.2.0-2-ge8b3a6c":{"name":"@serverless/platform-sdk","version":"2.2.0-2-ge8b3a6c","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"prepare":"npm run build","build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","lint:staged":"lint-staged","setup":"./scripts/setup.sh","setup:ci":"./scripts/setup-ci.sh","test":"./scripts/test.sh","test:ci":"snyk test && ./scripts/test-ci.sh","watch":"./scripts/watch.sh"},"dependencies":{"chalk":"^2.4.1","https-proxy-agent":"^3.0.0","is-docker":"^1.1.0","isomorphic-fetch":"^2.2.1","jwt-decode":"^2.2.0","opn":"^5.5.0","querystring":"^0.2.0","ramda":"^0.25.0","rc":"^1.2.8","regenerator-runtime":"^0.13.1","source-map-support":"^0.5.12","uuid":"^3.3.2","write-file-atomic":"^2.4.2","ws":"<7.0.0"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^21.2.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.17.2","eslint-plugin-prettier":"^2.6.1","jest-cli":"^21.2.0","lint-staged":"7.1.3","pre-commit":"^1.2.2","prettier":"^1.17.1","snyk":"^1.163.3"},"publishConfig":{"access":"public"},"lint-staged":{"*.js":["eslint --fix .","git add -A"]},"pre-commit":["lint:staged"],"gitHead":"e8b3a6cb1ab6b4383e412da5071398588699ee8c","readme":"# Platform SDK\n\nFunctional SDK for the Serverless Platfrom.\n\n## Project Status\n\n[![Build Status](https://travis-ci.com/serverless/platform-sdk.svg)](https://travis-ci.com/serverless/platform-sdk)\n[![license](https://img.shields.io/npm/l/@serverless/platform-sdk.svg)](https://www.npmjs.com/package/@serverless/platform-sdk)\n[![coverage](https://img.shields.io/codecov/c/github/serverless/platform-sdk.svg)](https://codecov.io/gh/serverless/platform-sdk)\n[![Known Vulnerabilities](https://snyk.io/test/github/serverless/platform-sdk/badge.svg)](https://snyk.io/test/github/serverless/platform-sdk)\n\n## Contents\n\n- [Installation](#installation)\n- [Functions](#functions)\n  - [login](#login)\n  - [refreshToken](#refreshtoken)\n  - [createAccessKey](#createaccesskey)\n  - [archiveService](#archiveservice)\n  - [getServiceUrl](#getserviceurl)\n  - [listTenants](#listtenants)\n  - [createDeployment](#createdeployment)\n  - [updateDeployment](#updatedeployment)\n  - [getApp](#getapp)\n  - [createApp](#createapp)\n\n## installation\n\n```\nnpm i -s @serverless/platform-sdk\n```\n\n## Functions\n### `login`\nOpens a browser for the user to login, along with a running server awaiting auth data once the user logs in.\n\n**Parameters**\n\nNone\n\n**Returns**\n\nPromise resolving to the following object:\n\n- `username` - `string` - dashboard username\n- `accessToken` - `string` - Auth0 access token\n- `idToken` - `string` - Auth0 idToken\n- `refreshToken` - `string` - Auth0 refreshToken\n- `expiresAt` - `string` - epoch time at which the idToken expires\n\n**Example**\n\n```js\nconst { login } = require('@serverless/platform-sdk')\n\nconst { username, accessToken, idToken, expiresAt } = await login()\n```\n\n---\n\n### `refreshToken`\nRefreshes Auth0 idToken\n\n**Parameters**\n\nrefresh token string\n\n**Returns**\n\n\nPromise resolving to the following object:\n\n- `id_token` - `string` - new Auth0 id token\n- `access_token` - `string` - new Auth0 access token\n- `expires_in` - `string` - number of seconds until token expiration\n\n**Example**\n\n```js\nconst { refreshToken } = require('@serverless/platform-sdk')\n\nconst { id_token, access_token, expires_in } = await refreshToken('some-refresh-token')\n```\n\n---\n\n### `createAccessKey`\nCreates a platform access key for the authenticated user.\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `tenant` - `string` - dashboard tenant\n- `idToken` - `string` - Auth0 idToken\n- `title` - `string` - title of the access key\n\n**Returns**\n\nPromise resolving to an `accessKey` string, that is the access key.\n\n**Example**\n\n```js\nconst { createAccessKey } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  tenant: 'eahefnawy',\n  idToken: 'abc',\n  title: 'Framework'\n}\n\nconst accessKey = await createAccessKey(data)\n```\n\n---\n\n### `archiveService`\nArchives a service in the platform.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `accessKey` - `string` - dashboard access key\n- `app` - `string` - service app\n- `name` - `string` - service name\n- `provider` - `string` - provider name\n- `region` - `string` - region name\n\n**Returns**\n\nNone\n\n**Example**\n\n```js\nconst { archiveService } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  accessKey: 'abc',\n  app: 'my-app',\n  name: 'my-service',\n  provider: 'aws',\n  region: 'us-east-1'\n}\n\nawait archiveService(data)\n```\n\n---\n\n### `getServiceUrl`\nConstructs a service url based on passed-in data.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `app` - `string` - service app\n- `name` - `string` - service name\n\n\n**Returns**\n\nThe service url string.\n\n**Example**\n\n```js\nconst { getServiceUrl } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  name: 'my-service'\n}\n\nconst serviceUrl = getServiceUrl(data)\n```\n\n---\n\n### `listTenants`\nLists the tenants for a given username\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `idToken` - `string` - auth0 user id token\n\n\n**Returns**\n\nArray of objects, each represents a single tenant data model.\n\n**Example**\n\n```js\nconst { listTenants } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  idToken: 'abc'\n}\n\nconst tenants = await listTenants(data)\n```\n\n---\n\n### `createDeploymnet`\nCreates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `accessKey` - `string` - dashboard access key\n- `files` - `object` - files which should be stored in the Platforms deployment record\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { createDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  accessKey: 'abc',\n  files: {\n    'serverless-state.json': {\n      //...snip...\n    }\n  }\n}\n\nconst { id } = await createDeployment(data)\n```\n\n---\n\n### `updateDeployment`\nUpdates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `deploymentId` - `string` - id of the previously created deployment\n- `status` - `string` - status of the deployment to update\n- `accessKey` - `string` - dashboard access key\n- `computedData` - `object` - computed data the Platform needs to generate the state items\n\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { updateDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  deploymentId: 'abc',\n  status: 'failed',\n  accessKey: 'abc',\n  computedData: {\n    // ...snip...\n  }\n}\n\nconst { id } = await updateDeployment(data)\n```\n\n---\n\n### `getApp`\nGets a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { getApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await getApp(data)\n```\n\n---\n\n### `createApp`\nCreates a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { createApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await createApp(data)\n```\n","readmeFilename":"README.md","_id":"@serverless/platform-sdk@2.2.0-2-ge8b3a6c","_npmVersion":"6.4.1","_nodeVersion":"10.15.3","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-DU/qYDc6CeX6hFr1Q0OQprX91HmWFVRVcv6Gg0DHb4zf29tfpxP6zyBVyW0TvqwyDFEMcyTn2aHwJz5OBU12Hw==","shasum":"345fc8c84a6de1891bd343c733ee9e25e1170f97","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-2.2.0-2-ge8b3a6c.tgz","fileCount":93,"unpackedSize":187101,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdwJdsCRA9TVsSAnZWagAAN0YP/i2FMpKahlazWV1zg8Xr\nqLDVfLsm1r2p5buhcNOqGLRpYfAllPbFn6E1JBo631nVdJTq/kA8LOaYvUUt\nvq5i2JkW1T1U/BF8Wk9hTDZhMOOCucbk7/1Uy63KxFydCNTeqkThh02a46XT\n2YIEe+Oo16wyEw5KbWS+hW9Eyo/ue4NPWrEwAhhqUf+G0veX7P/EAxtANcxX\nIfPybVp+hzK5tS8e8kLaPGWt2s0YWWcXzBc/MCYhwn00dCi6nhTlAJo13Ydo\n7AnYFxHA8krtIvwnDVE2UNQeGmU668BXDppDBkD5ooxNbVfIYAjzKl9c6qOz\nm6FkY0kjexb/iDcEyimnrrHkqpoXhA93Tf71bXwPLxof+xSKHO57yDQksq4z\nh1KnJZWAnj1iN/0q+P2idA0vQX+QAKyorugcfCctd7fSBSb1/9kWTGdjYCy/\nr1Hj0UVfSATVR284rT2+b32vjJCfIe05mZx9XA/GBY4w9etC/sZfBHT3zbxU\nVYAWNM1hDoFTyuBfbVqRGOzooabM1gh33KcOUJUYPXrTwStavD4DauAQtaJa\n+wDSA7YtPE6w440eWMil/y0/h42prFoWURfWJBiYUHD/BhkZCntrA/mfS3LU\nBzsfhcSpQdTY4chierWH7PHZVQM0aQSr0Ly/Kdlo1OPy/I9+XG9QgN8r0OLX\n8LDy\r\n=ZhU8\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"services@serverless.com","name":"serverless-main"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_2.2.0-2-ge8b3a6c_1572902764280_0.9346500898623828"},"_hasShrinkwrap":false},"2.2.0-6-gfad84fc":{"name":"@serverless/platform-sdk","version":"2.2.0-6-gfad84fc","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"prepare":"npm run build","build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","lint:staged":"lint-staged","setup":"./scripts/setup.sh","setup:ci":"./scripts/setup-ci.sh","test":"./scripts/test.sh","test:ci":"snyk test && ./scripts/test-ci.sh","watch":"./scripts/watch.sh"},"dependencies":{"chalk":"^2.4.1","https-proxy-agent":"^3.0.0","is-docker":"^1.1.0","isomorphic-fetch":"^2.2.1","jwt-decode":"^2.2.0","opn":"^5.5.0","querystring":"^0.2.0","ramda":"^0.25.0","rc":"^1.2.8","regenerator-runtime":"^0.13.1","source-map-support":"^0.5.12","uuid":"^3.3.2","write-file-atomic":"^2.4.2","ws":"<7.0.0"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^21.2.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.17.2","eslint-plugin-prettier":"^2.6.1","jest-cli":"^21.2.0","lint-staged":"7.1.3","pre-commit":"^1.2.2","prettier":"^1.17.1","snyk":"^1.163.3"},"publishConfig":{"access":"public"},"lint-staged":{"*.js":["eslint --fix .","git add -A"]},"pre-commit":["lint:staged"],"gitHead":"fad84fc600a31153d543c769e0d959801d351771","readme":"# Platform SDK\n\nFunctional SDK for the Serverless Platfrom.\n\n## Project Status\n\n[![Build Status](https://travis-ci.com/serverless/platform-sdk.svg)](https://travis-ci.com/serverless/platform-sdk)\n[![license](https://img.shields.io/npm/l/@serverless/platform-sdk.svg)](https://www.npmjs.com/package/@serverless/platform-sdk)\n[![coverage](https://img.shields.io/codecov/c/github/serverless/platform-sdk.svg)](https://codecov.io/gh/serverless/platform-sdk)\n[![Known Vulnerabilities](https://snyk.io/test/github/serverless/platform-sdk/badge.svg)](https://snyk.io/test/github/serverless/platform-sdk)\n\n## Contents\n\n- [Installation](#installation)\n- [Functions](#functions)\n  - [login](#login)\n  - [refreshToken](#refreshtoken)\n  - [createAccessKey](#createaccesskey)\n  - [archiveService](#archiveservice)\n  - [getServiceUrl](#getserviceurl)\n  - [listTenants](#listtenants)\n  - [createDeployment](#createdeployment)\n  - [updateDeployment](#updatedeployment)\n  - [getApp](#getapp)\n  - [createApp](#createapp)\n\n## installation\n\n```\nnpm i -s @serverless/platform-sdk\n```\n\n## Functions\n### `login`\nOpens a browser for the user to login, along with a running server awaiting auth data once the user logs in.\n\n**Parameters**\n\nNone\n\n**Returns**\n\nPromise resolving to the following object:\n\n- `username` - `string` - dashboard username\n- `accessToken` - `string` - Auth0 access token\n- `idToken` - `string` - Auth0 idToken\n- `refreshToken` - `string` - Auth0 refreshToken\n- `expiresAt` - `string` - epoch time at which the idToken expires\n\n**Example**\n\n```js\nconst { login } = require('@serverless/platform-sdk')\n\nconst { username, accessToken, idToken, expiresAt } = await login()\n```\n\n---\n\n### `refreshToken`\nRefreshes Auth0 idToken\n\n**Parameters**\n\nrefresh token string\n\n**Returns**\n\n\nPromise resolving to the following object:\n\n- `id_token` - `string` - new Auth0 id token\n- `access_token` - `string` - new Auth0 access token\n- `expires_in` - `string` - number of seconds until token expiration\n\n**Example**\n\n```js\nconst { refreshToken } = require('@serverless/platform-sdk')\n\nconst { id_token, access_token, expires_in } = await refreshToken('some-refresh-token')\n```\n\n---\n\n### `createAccessKey`\nCreates a platform access key for the authenticated user.\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `tenant` - `string` - dashboard tenant\n- `idToken` - `string` - Auth0 idToken\n- `title` - `string` - title of the access key\n\n**Returns**\n\nPromise resolving to an `accessKey` string, that is the access key.\n\n**Example**\n\n```js\nconst { createAccessKey } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  tenant: 'eahefnawy',\n  idToken: 'abc',\n  title: 'Framework'\n}\n\nconst accessKey = await createAccessKey(data)\n```\n\n---\n\n### `archiveService`\nArchives a service in the platform.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `accessKey` - `string` - dashboard access key\n- `app` - `string` - service app\n- `name` - `string` - service name\n- `provider` - `string` - provider name\n- `region` - `string` - region name\n\n**Returns**\n\nNone\n\n**Example**\n\n```js\nconst { archiveService } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  accessKey: 'abc',\n  app: 'my-app',\n  name: 'my-service',\n  provider: 'aws',\n  region: 'us-east-1'\n}\n\nawait archiveService(data)\n```\n\n---\n\n### `getServiceUrl`\nConstructs a service url based on passed-in data.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `app` - `string` - service app\n- `name` - `string` - service name\n\n\n**Returns**\n\nThe service url string.\n\n**Example**\n\n```js\nconst { getServiceUrl } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  name: 'my-service'\n}\n\nconst serviceUrl = getServiceUrl(data)\n```\n\n---\n\n### `listTenants`\nLists the tenants for a given username\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `idToken` - `string` - auth0 user id token\n\n\n**Returns**\n\nArray of objects, each represents a single tenant data model.\n\n**Example**\n\n```js\nconst { listTenants } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  idToken: 'abc'\n}\n\nconst tenants = await listTenants(data)\n```\n\n---\n\n### `createDeploymnet`\nCreates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `accessKey` - `string` - dashboard access key\n- `files` - `object` - files which should be stored in the Platforms deployment record\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { createDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  accessKey: 'abc',\n  files: {\n    'serverless-state.json': {\n      //...snip...\n    }\n  }\n}\n\nconst { id } = await createDeployment(data)\n```\n\n---\n\n### `updateDeployment`\nUpdates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `deploymentId` - `string` - id of the previously created deployment\n- `status` - `string` - status of the deployment to update\n- `accessKey` - `string` - dashboard access key\n- `computedData` - `object` - computed data the Platform needs to generate the state items\n\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { updateDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  deploymentId: 'abc',\n  status: 'failed',\n  accessKey: 'abc',\n  computedData: {\n    // ...snip...\n  }\n}\n\nconst { id } = await updateDeployment(data)\n```\n\n---\n\n### `getApp`\nGets a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { getApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await getApp(data)\n```\n\n---\n\n### `createApp`\nCreates a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { createApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await createApp(data)\n```\n","readmeFilename":"README.md","_id":"@serverless/platform-sdk@2.2.0-6-gfad84fc","_npmVersion":"6.4.1","_nodeVersion":"10.15.3","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-R8qPeR2JPsUqTVEhZix/zbWPCC9dVDHpSrgZXIhpSk6I+VDJDnov6yS7v3Gy9PAUsTjaVJXzIIb+s3CoaOlY+g==","shasum":"a1342b17ca095e879dfe1d0e1bb4b1bba70beaa6","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-2.2.0-6-gfad84fc.tgz","fileCount":93,"unpackedSize":187311,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdwbIaCRA9TVsSAnZWagAAb68P/1u3XYL7Jl0fjO0BJ5zX\nagyXG8pN+g0dSA2kBX5bUvMQeq75wUWO3WxSYDIiTQodlWu/lXXYxzIJFwS8\nXJPLAj2ZXCms9yjqCk63diqQHUUrq9RNPtmkGdx/zF6h3W9E/2Ip9id8nwVY\n7jKCod+ZSkZ/hFR3MeOurpB1EOhko3RzAIn+W6gn5K8vkidEdmpUkccILhbH\nP3H3yAW2pbBp0JfglcWc6SUSmydVIcTYDSHbjDnqJz4JE1z1jwYVJDa/Ta+t\nGTuCEKc+Yypbmp52fe9J19QST82WnKYDhlaOnwBj6HwTH4ug2M/T/ocxO5Z3\nNnaUfnuwtHII41sNv83WWEvWh8I28w0w/4fLIHt7wYVsLEHk7SxeOnyUxdHv\nUztLJUnsjOg6UwLwfM+9K9KqUYN6Mvyq1hy7p6LDN6yA36bQV1lcTm92DQTt\nn9Ed2Evu37pygjXy4ywg5GPe5D+xQdhHnIdSt1evdUNIeR+a31rEzyLwxbVU\nhPLJ0j1cDu0FizubqWgX9qfAH1qT+E+LrnpcDW8sDTpwblfJbczHZ1XtPf1Y\nCDo6IPy11nNGg0JJf4Mvjxeq5426cs/3E6YnfBOGRMvAAjjSW1QO+Eqe9YYE\nVV+FV+mo8md3VmccXlGN8+NCrXh/cHYAYGdlI0PZelYg2W6GszpaqwlUIpWJ\n/oDb\r\n=wGkm\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"services@serverless.com","name":"serverless-main"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_2.2.0-6-gfad84fc_1572975129629_0.49130583949929174"},"_hasShrinkwrap":false},"2.2.0-9-g212ff00":{"name":"@serverless/platform-sdk","version":"2.2.0-9-g212ff00","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"prepare":"npm run build","build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","lint:staged":"lint-staged","setup":"./scripts/setup.sh","setup:ci":"./scripts/setup-ci.sh","test":"./scripts/test.sh","test:ci":"snyk test && ./scripts/test-ci.sh","watch":"./scripts/watch.sh"},"dependencies":{"chalk":"^2.4.1","https-proxy-agent":"^3.0.0","is-docker":"^1.1.0","isomorphic-fetch":"^2.2.1","jwt-decode":"^2.2.0","opn":"^5.5.0","querystring":"^0.2.0","ramda":"^0.25.0","rc":"^1.2.8","regenerator-runtime":"^0.13.1","source-map-support":"^0.5.12","uuid":"^3.3.2","write-file-atomic":"^2.4.2","ws":"<7.0.0"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^21.2.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.17.2","eslint-plugin-prettier":"^2.6.1","jest-cli":"^21.2.0","lint-staged":"7.1.3","pre-commit":"^1.2.2","prettier":"^1.17.1","snyk":"^1.163.3"},"publishConfig":{"access":"public"},"lint-staged":{"*.js":["eslint --fix .","git add -A"]},"pre-commit":["lint:staged"],"gitHead":"212ff0054294d396af2813ec0c6c8fb7d5cf4393","readme":"# Platform SDK\n\nFunctional SDK for the Serverless Platfrom.\n\n## Project Status\n\n[![Build Status](https://travis-ci.com/serverless/platform-sdk.svg)](https://travis-ci.com/serverless/platform-sdk)\n[![license](https://img.shields.io/npm/l/@serverless/platform-sdk.svg)](https://www.npmjs.com/package/@serverless/platform-sdk)\n[![coverage](https://img.shields.io/codecov/c/github/serverless/platform-sdk.svg)](https://codecov.io/gh/serverless/platform-sdk)\n[![Known Vulnerabilities](https://snyk.io/test/github/serverless/platform-sdk/badge.svg)](https://snyk.io/test/github/serverless/platform-sdk)\n\n## Contents\n\n- [Installation](#installation)\n- [Functions](#functions)\n  - [login](#login)\n  - [refreshToken](#refreshtoken)\n  - [createAccessKey](#createaccesskey)\n  - [archiveService](#archiveservice)\n  - [getServiceUrl](#getserviceurl)\n  - [listTenants](#listtenants)\n  - [createDeployment](#createdeployment)\n  - [updateDeployment](#updatedeployment)\n  - [getApp](#getapp)\n  - [createApp](#createapp)\n\n## installation\n\n```\nnpm i -s @serverless/platform-sdk\n```\n\n## Functions\n### `login`\nOpens a browser for the user to login, along with a running server awaiting auth data once the user logs in.\n\n**Parameters**\n\nNone\n\n**Returns**\n\nPromise resolving to the following object:\n\n- `username` - `string` - dashboard username\n- `accessToken` - `string` - Auth0 access token\n- `idToken` - `string` - Auth0 idToken\n- `refreshToken` - `string` - Auth0 refreshToken\n- `expiresAt` - `string` - epoch time at which the idToken expires\n\n**Example**\n\n```js\nconst { login } = require('@serverless/platform-sdk')\n\nconst { username, accessToken, idToken, expiresAt } = await login()\n```\n\n---\n\n### `refreshToken`\nRefreshes Auth0 idToken\n\n**Parameters**\n\nrefresh token string\n\n**Returns**\n\n\nPromise resolving to the following object:\n\n- `id_token` - `string` - new Auth0 id token\n- `access_token` - `string` - new Auth0 access token\n- `expires_in` - `string` - number of seconds until token expiration\n\n**Example**\n\n```js\nconst { refreshToken } = require('@serverless/platform-sdk')\n\nconst { id_token, access_token, expires_in } = await refreshToken('some-refresh-token')\n```\n\n---\n\n### `createAccessKey`\nCreates a platform access key for the authenticated user.\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `tenant` - `string` - dashboard tenant\n- `idToken` - `string` - Auth0 idToken\n- `title` - `string` - title of the access key\n\n**Returns**\n\nPromise resolving to an `accessKey` string, that is the access key.\n\n**Example**\n\n```js\nconst { createAccessKey } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  tenant: 'eahefnawy',\n  idToken: 'abc',\n  title: 'Framework'\n}\n\nconst accessKey = await createAccessKey(data)\n```\n\n---\n\n### `archiveService`\nArchives a service in the platform.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `accessKey` - `string` - dashboard access key\n- `app` - `string` - service app\n- `name` - `string` - service name\n- `provider` - `string` - provider name\n- `region` - `string` - region name\n\n**Returns**\n\nNone\n\n**Example**\n\n```js\nconst { archiveService } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  accessKey: 'abc',\n  app: 'my-app',\n  name: 'my-service',\n  provider: 'aws',\n  region: 'us-east-1'\n}\n\nawait archiveService(data)\n```\n\n---\n\n### `getServiceUrl`\nConstructs a service url based on passed-in data.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `app` - `string` - service app\n- `name` - `string` - service name\n\n\n**Returns**\n\nThe service url string.\n\n**Example**\n\n```js\nconst { getServiceUrl } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  name: 'my-service'\n}\n\nconst serviceUrl = getServiceUrl(data)\n```\n\n---\n\n### `listTenants`\nLists the tenants for a given username\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `idToken` - `string` - auth0 user id token\n\n\n**Returns**\n\nArray of objects, each represents a single tenant data model.\n\n**Example**\n\n```js\nconst { listTenants } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  idToken: 'abc'\n}\n\nconst tenants = await listTenants(data)\n```\n\n---\n\n### `createDeploymnet`\nCreates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `accessKey` - `string` - dashboard access key\n- `files` - `object` - files which should be stored in the Platforms deployment record\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { createDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  accessKey: 'abc',\n  files: {\n    'serverless-state.json': {\n      //...snip...\n    }\n  }\n}\n\nconst { id } = await createDeployment(data)\n```\n\n---\n\n### `updateDeployment`\nUpdates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `deploymentId` - `string` - id of the previously created deployment\n- `status` - `string` - status of the deployment to update\n- `accessKey` - `string` - dashboard access key\n- `computedData` - `object` - computed data the Platform needs to generate the state items\n\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { updateDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  deploymentId: 'abc',\n  status: 'failed',\n  accessKey: 'abc',\n  computedData: {\n    // ...snip...\n  }\n}\n\nconst { id } = await updateDeployment(data)\n```\n\n---\n\n### `getApp`\nGets a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { getApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await getApp(data)\n```\n\n---\n\n### `createApp`\nCreates a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { createApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await createApp(data)\n```\n","readmeFilename":"README.md","_id":"@serverless/platform-sdk@2.2.0-9-g212ff00","_npmVersion":"6.4.1","_nodeVersion":"10.15.3","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-bD04v9qjVO6DwsXv0+Qo02P7IA8yJ5Gsj8emMKFZvrO+5hzXSk2L2br5v18tvJPAXF4l0VGtQk6HDx7EqLm8ag==","shasum":"b9508cd57538d991333d90d14a55cf4cc85b52d2","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-2.2.0-9-g212ff00.tgz","fileCount":93,"unpackedSize":187311,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdwcyaCRA9TVsSAnZWagAAJCAP/iLvCv8qEtzb6aA0gIdp\nBaAGAXsdqisPJF4DZXWwlRcs2Us23/exGxjSHffMxkxKaXRIqvVeY5qSmFn5\n8rL9q3H2pOGOKjkxs16HvbD+FtHxsUgHqe/TH+s6ul/sZxGBrNeLjlPKRJO2\nJ/erUplmWLenfhScqseoR00wp8QuvmdUNxyf4poOZPZ1ieglGSGRqa8hYmCO\ndFVCxkoU/UMDPTv/20nR2ByUvE4PuJ+pKMN6z7vVeFRlToxw5R1X/3gKFPeW\nrqkPmbQMIhJMMnQ7z/2cNWYyWGbYn6/AkY/nDC5cbj29Ce1QfgFiOJfm5yOZ\nbG4OtyW0rgGfZ+0vxF0GvtjEjycuFdwCTBI1LuqHh/haU2hibFTRyPi2Dd0B\nbwEZAKs2n3n5FlWcnIsWF0K5q0INwg1UquaqeHYy04xlPUFxezWUGBqCapBm\ne4WbCWwVu9v+WCoRq8H3u2G+48NSi2JXIh6PJmMkKGX+Zdb0qDlJASIUpGhR\nwLc7O8wFPjQOWJRTi2eh11XwJYxuAze/dOfPpKgB8s6lyAgXdpuQcYMjArop\n+N7T79xu4DbfOiBTg7P9XL/qxVGtwQiNkLVRLoo8fSiubERuATcQyDlpEOQO\nsjXAfG6S7EJvVLJCsC7wB4cib2VyC+aWagzXWBWf1JKbsd5ikY70KXu75M/i\n1eBJ\r\n=jj7j\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"services@serverless.com","name":"serverless-main"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_2.2.0-9-g212ff00_1572981914330_0.31377178079998624"},"_hasShrinkwrap":false},"2.2.1":{"name":"@serverless/platform-sdk","version":"2.2.1","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"prepare":"npm run build","build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","lint:staged":"lint-staged","setup":"./scripts/setup.sh","setup:ci":"./scripts/setup-ci.sh","test":"./scripts/test.sh","test:ci":"snyk test && ./scripts/test-ci.sh","watch":"./scripts/watch.sh"},"dependencies":{"chalk":"^2.4.1","https-proxy-agent":"^3.0.0","is-docker":"^1.1.0","isomorphic-fetch":"^2.2.1","jwt-decode":"^2.2.0","opn":"^5.5.0","querystring":"^0.2.0","ramda":"^0.25.0","rc":"^1.2.8","regenerator-runtime":"^0.13.1","source-map-support":"^0.5.12","uuid":"^3.3.2","write-file-atomic":"^2.4.2","ws":"<7.0.0"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^21.2.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.17.2","eslint-plugin-prettier":"^2.6.1","jest-cli":"^21.2.0","lint-staged":"7.1.3","pre-commit":"^1.2.2","prettier":"^1.17.1","snyk":"^1.163.3"},"publishConfig":{"access":"public"},"lint-staged":{"*.js":["eslint --fix .","git add -A"]},"pre-commit":["lint:staged"],"gitHead":"212ff0054294d396af2813ec0c6c8fb7d5cf4393","_id":"@serverless/platform-sdk@2.2.1","_npmVersion":"6.4.1","_nodeVersion":"10.15.3","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-XOpYzV9AKrWuW1IJqLxhwZZbspUTCe+f/bmkdMCzWZX7HpHtasYWCcAwZN/DsYq/3af/tBp8gkEsYh0GnaAaYg==","shasum":"735f146d758c2fbe82856b2a09c42972fda582bb","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-2.2.1.tgz","fileCount":93,"unpackedSize":187300,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdwc+qCRA9TVsSAnZWagAA0pEP+wSzr8ZPV6uW2anyGOWy\nY50b9jQ5vdtg9dVTwqFy2ULncIp1Xwy5Y7PF7zxYjN8i1NMpPwu6e3kQUkQX\n9+YpKYx483A5dGfJBhWhVBbe4DOozwaj3LyRtvQTg0yRJgjg3abt7BIqb9s6\n7kJRfRRMDpjlMpyV8zero07KEaNo9uv43Ozov+VJjLTq5Nsmm/T3R0PhgnLw\n+W7DRYWjGK4OQOxKqTf6En3LAiEMOWn7ck1SdFVHY2ylaPj16XcLzC9H6B8+\n7PYso/0zUO3FwxPOTyHJ5eJSXAyYRV+ElJtJCwd6jrv2Okg1QweAbrq7CsAk\nskCfUpgN7OxCo4wYttBSXMnlUVIOVmKU5pgGW/U9bA2WiYdYbjanqTvjm2aU\nRfxPeDzz4ochXgNb96Kke/hMi5p4Pw/XtL2gJdIF+7IHaPxCmhRvZpfV8Fd+\nPWgFAJ+41iON6tpegfke5V0zZgb5n5uTCNMGK6DIFHtQK73EU7T7HCrbpSML\nIK3VbLW3z1cKtPkY/2w5zWwaySyWtVI27WNTT65VixdzcvUPeYLRDyscFGKU\n1p8hGXmC+BxsKnoj8KRzO3C4Bg0lOwtCkki5shfxqIgLBWd90hOmON72iI+H\n4nHGh81EDJvs258UnaR0vsPwpV8ti4r51xjQbpj/FvCqZIvOn99vDJzGwyw3\nJvld\r\n=o4l5\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"services@serverless.com","name":"serverless-main"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_2.2.1_1572982698469_0.19537213174094847"},"_hasShrinkwrap":false},"2.2.1-2-g90e3144":{"name":"@serverless/platform-sdk","version":"2.2.1-2-g90e3144","description":"Serverless Platform SDK","author":{"name":"Serverless, Inc."},"license":"Apache-2.0","main":"dist/index.js","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"homepage":"https://github.com/serverless/platform-sdk#readme","scripts":{"prepare":"npm run build","build":"./scripts/build.sh","clean":"./scripts/clean.sh","cleanse":"./scripts/cleanse.sh","lint":"./scripts/lint.sh","lint:staged":"lint-staged","setup":"./scripts/setup.sh","setup:ci":"./scripts/setup-ci.sh","test":"./scripts/test.sh","test:ci":"snyk test && ./scripts/test-ci.sh","watch":"./scripts/watch.sh"},"dependencies":{"chalk":"^2.4.1","https-proxy-agent":"^3.0.0","is-docker":"^1.1.0","isomorphic-fetch":"^2.2.1","jwt-decode":"^2.2.0","opn":"^5.5.0","querystring":"^0.2.0","ramda":"^0.25.0","rc":"^1.2.8","regenerator-runtime":"^0.13.1","source-map-support":"^0.5.12","uuid":"^3.3.2","write-file-atomic":"^2.4.2","ws":"<7.0.0"},"devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-jest":"^21.2.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","eslint":"^4.19.1","eslint-config-prettier":"^2.9.0","eslint-plugin-import":"^2.17.2","eslint-plugin-prettier":"^2.6.1","jest-cli":"^21.2.0","lint-staged":"7.1.3","pre-commit":"^1.2.2","prettier":"^1.17.1","snyk":"^1.163.3"},"publishConfig":{"access":"public"},"lint-staged":{"*.js":["eslint --fix .","git add -A"]},"pre-commit":["lint:staged"],"gitHead":"90e3144340d26f5207b54cc1a6d054499b11bf87","readme":"# Platform SDK\n\nFunctional SDK for the Serverless Platfrom.\n\n## Project Status\n\n[![Build Status](https://travis-ci.com/serverless/platform-sdk.svg)](https://travis-ci.com/serverless/platform-sdk)\n[![license](https://img.shields.io/npm/l/@serverless/platform-sdk.svg)](https://www.npmjs.com/package/@serverless/platform-sdk)\n[![coverage](https://img.shields.io/codecov/c/github/serverless/platform-sdk.svg)](https://codecov.io/gh/serverless/platform-sdk)\n[![Known Vulnerabilities](https://snyk.io/test/github/serverless/platform-sdk/badge.svg)](https://snyk.io/test/github/serverless/platform-sdk)\n\n## Contents\n\n- [Installation](#installation)\n- [Functions](#functions)\n  - [login](#login)\n  - [refreshToken](#refreshtoken)\n  - [createAccessKey](#createaccesskey)\n  - [archiveService](#archiveservice)\n  - [getServiceUrl](#getserviceurl)\n  - [listTenants](#listtenants)\n  - [createDeployment](#createdeployment)\n  - [updateDeployment](#updatedeployment)\n  - [getApp](#getapp)\n  - [createApp](#createapp)\n\n## installation\n\n```\nnpm i -s @serverless/platform-sdk\n```\n\n## Functions\n### `login`\nOpens a browser for the user to login, along with a running server awaiting auth data once the user logs in.\n\n**Parameters**\n\nNone\n\n**Returns**\n\nPromise resolving to the following object:\n\n- `username` - `string` - dashboard username\n- `accessToken` - `string` - Auth0 access token\n- `idToken` - `string` - Auth0 idToken\n- `refreshToken` - `string` - Auth0 refreshToken\n- `expiresAt` - `string` - epoch time at which the idToken expires\n\n**Example**\n\n```js\nconst { login } = require('@serverless/platform-sdk')\n\nconst { username, accessToken, idToken, expiresAt } = await login()\n```\n\n---\n\n### `refreshToken`\nRefreshes Auth0 idToken\n\n**Parameters**\n\nrefresh token string\n\n**Returns**\n\n\nPromise resolving to the following object:\n\n- `id_token` - `string` - new Auth0 id token\n- `access_token` - `string` - new Auth0 access token\n- `expires_in` - `string` - number of seconds until token expiration\n\n**Example**\n\n```js\nconst { refreshToken } = require('@serverless/platform-sdk')\n\nconst { id_token, access_token, expires_in } = await refreshToken('some-refresh-token')\n```\n\n---\n\n### `createAccessKey`\nCreates a platform access key for the authenticated user.\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `tenant` - `string` - dashboard tenant\n- `idToken` - `string` - Auth0 idToken\n- `title` - `string` - title of the access key\n\n**Returns**\n\nPromise resolving to an `accessKey` string, that is the access key.\n\n**Example**\n\n```js\nconst { createAccessKey } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  tenant: 'eahefnawy',\n  idToken: 'abc',\n  title: 'Framework'\n}\n\nconst accessKey = await createAccessKey(data)\n```\n\n---\n\n### `archiveService`\nArchives a service in the platform.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `accessKey` - `string` - dashboard access key\n- `app` - `string` - service app\n- `name` - `string` - service name\n- `provider` - `string` - provider name\n- `region` - `string` - region name\n\n**Returns**\n\nNone\n\n**Example**\n\n```js\nconst { archiveService } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  accessKey: 'abc',\n  app: 'my-app',\n  name: 'my-service',\n  provider: 'aws',\n  region: 'us-east-1'\n}\n\nawait archiveService(data)\n```\n\n---\n\n### `getServiceUrl`\nConstructs a service url based on passed-in data.\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant\n- `app` - `string` - service app\n- `name` - `string` - service name\n\n\n**Returns**\n\nThe service url string.\n\n**Example**\n\n```js\nconst { getServiceUrl } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  name: 'my-service'\n}\n\nconst serviceUrl = getServiceUrl(data)\n```\n\n---\n\n### `listTenants`\nLists the tenants for a given username\n\n**Parameters**\n\nObject\n\n- `username` - `string` - dashboard username\n- `idToken` - `string` - auth0 user id token\n\n\n**Returns**\n\nArray of objects, each represents a single tenant data model.\n\n**Example**\n\n```js\nconst { listTenants } = require('@serverless/platform-sdk')\n\nconst data = {\n  username: 'eahefnawy',\n  idToken: 'abc'\n}\n\nconst tenants = await listTenants(data)\n```\n\n---\n\n### `createDeploymnet`\nCreates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `accessKey` - `string` - dashboard access key\n- `files` - `object` - files which should be stored in the Platforms deployment record\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { createDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  accessKey: 'abc',\n  files: {\n    'serverless-state.json': {\n      //...snip...\n    }\n  }\n}\n\nconst { id } = await createDeployment(data)\n```\n\n---\n\n### `updateDeployment`\nUpdates a platform deployment\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `serviceName` - `string` - service name\n- `deploymentId` - `string` - id of the previously created deployment\n- `status` - `string` - status of the deployment to update\n- `accessKey` - `string` - dashboard access key\n- `computedData` - `object` - computed data the Platform needs to generate the state items\n\n\n**Returns**\n\nObject - Deployment model\n\n**Example**\n\n```js\nconst { updateDeployment } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  serviceName: 'my-service',\n  deploymentId: 'abc',\n  status: 'failed',\n  accessKey: 'abc',\n  computedData: {\n    // ...snip...\n  }\n}\n\nconst { id } = await updateDeployment(data)\n```\n\n---\n\n### `getApp`\nGets a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { getApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await getApp(data)\n```\n\n---\n\n### `createApp`\nCreates a platform app\n\n**Parameters**\n\nObject\n\n- `tenant` - `string` - dashboard tenant name\n- `app` - `string` - app name\n- `token` - `string` - Auth0 id token\n\n\n**Returns**\n\nObject - App model\n\n**Example**\n\n```js\nconst { createApp } = require('@serverless/platform-sdk')\n\nconst data = {\n  tenant: 'eahefnawy',\n  app: 'my-app',\n  token: 'abc'\n}\n\nconst app = await createApp(data)\n```\n","readmeFilename":"README.md","_id":"@serverless/platform-sdk@2.2.1-2-g90e3144","_npmVersion":"6.4.1","_nodeVersion":"10.15.3","_npmUser":{"name":"serverless-main","email":"services@serverless.com"},"dist":{"integrity":"sha512-NQzebY+mbCjLqFX2YjvYX4I+RHkusOqS7DRz8+QxvQONceukUP50WFSgGRAhshtHJlCBK/ectAfQ397oaZDMYg==","shasum":"55ebbf04de40d1f35d27fa82f6d420b984a95262","tarball":"https://registry.npmjs.org/@serverless/platform-sdk/-/platform-sdk-2.2.1-2-g90e3144.tgz","fileCount":93,"unpackedSize":187032,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJd6RzuCRA9TVsSAnZWagAAQjQP/2xR0+QjAdPGB2tV4mbF\nKViw4jr3z9nm7fgX949F57vNzA6FLQbXPZSb2wdHooxZlmF8ByqHKWrgRslA\nhqLkIBo4af6shLt7V8lGSmEf8kTFjDgFR9bLFFJaXrfUFGV+lBcvKX/fwaui\ngH5xCYxt4J5pPoNrnNcLrqLR0rxipYwN3OtDIFrtMDaS/OdpF6DKxjwFDhPF\niR8rG2mueB9X7FAKfQW9qNllmwXdLiZ8vhoPZzBDnb02EBrs5L6+epGuHyvE\ngy6xbQE9zUxMJi2sgPN6vY6ZjdsvkUd//EVZZwmAlA6Ypw6IF5FbThyh/lb/\nTVMCesnQ5CRGzxlMA9tZxzhHRvnHyj2VIvdZVgQ7tc3OOQrjqoFGcV3oBNoS\nxZDVXP6w0Ly0M8d5LNTlA6JsjZv+lKyTcolbS4xu8KgqMYUVPKQ7g0LaCzJs\nrnPnlxgHQ5RnLSebxCSVePqvcAOZi/GaeJnP2xsAIfZ6h7hmBE7z31gLrp8x\nWUtOwYbecufIln3mbyTRv5F7AVch+0WtF2f+DiG3ShVZADJzhn9csvX3DX3e\nDbtVnsq0Fs6kcn3ED/UUiVYaHhpSneQzGF31AkiFhAsGJUjBCYQFAld2DV5E\ngFhcI7h06dyveaXMNWmH+mNEt7K64IFfTSQoIIzlLDHU84nYimtE4cvx5xgI\nvg30\r\n=2HGf\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"services@serverless.com","name":"serverless-main"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/platform-sdk_2.2.1-2-g90e3144_1575558382193_0.641143397911446"},"_hasShrinkwrap":false}},"time":{"created":"2018-06-18T13:58:40.655Z","0.0.1":"2018-06-18T13:58:40.935Z","modified":"2019-12-05T15:06:24.605Z","0.0.2":"2018-06-20T11:07:05.693Z","0.0.3":"2018-06-20T12:20:26.224Z","0.0.4":"2018-06-21T12:16:18.228Z","0.0.5":"2018-06-26T11:16:09.806Z","0.0.6":"2018-06-27T13:16:57.805Z","0.1.0":"2018-06-28T19:44:12.511Z","0.1.1":"2018-06-29T10:43:59.723Z","0.1.2":"2018-06-30T11:32:04.940Z","0.1.3":"2018-07-03T13:50:02.550Z","0.1.4":"2018-07-03T16:05:51.280Z","0.1.5":"2018-07-04T05:55:58.203Z","0.2.0":"2018-07-24T13:45:20.281Z","0.2.1":"2018-08-09T14:12:08.875Z","0.3.0":"2018-09-17T14:53:33.063Z","0.4.0-beta":"2019-01-04T12:46:52.429Z","0.4.0-beta-2-gc07b199":"2019-01-14T17:35:27.531Z","0.4.0-beta-6-g29e4617":"2019-01-14T22:04:43.525Z","0.4.0-beta-10-g444552d":"2019-01-15T04:18:13.637Z","0.4.0-beta-21-gc49dcd4":"2019-01-16T12:23:03.346Z","0.4.0-beta-23-gda0fa26":"2019-01-17T13:32:07.154Z","0.4.0-beta-25-gad9a66b":"2019-01-21T16:02:27.866Z","0.4.0":"2019-01-21T17:05:36.407Z","0.4.0-2-g1da41e5":"2019-01-22T15:18:38.603Z","0.4.0-10-g0a71b8d":"2019-01-24T16:47:49.165Z","0.4.0-12-gfcf26a9":"2019-01-24T18:45:22.093Z","0.4.0-15-g3d08763":"2019-01-28T20:22:09.612Z","0.5.0":"2019-01-31T15:17:56.880Z","0.5.0-3-g50a7098":"2019-02-07T20:30:13.229Z","0.5.0-6-gb5f6b70":"2019-02-07T22:26:32.564Z","0.5.0-8-gfc58bac":"2019-02-11T19:33:24.609Z","0.5.0-10-g9a6f0e6":"2019-02-18T15:23:58.600Z","0.5.0-12-gbabddd7":"2019-02-18T16:06:59.873Z","0.6.0":"2019-02-18T16:10:27.920Z","0.6.0-2-g26f1372":"2019-02-22T00:37:01.523Z","0.6.0-6-g6f337be":"2019-02-25T00:53:48.499Z","0.6.0-8-gf5544e5":"2019-02-26T21:06:47.608Z","0.6.0-23-g3632763":"2019-03-12T13:03:00.609Z","0.6.0-25-g91cc266":"2019-03-13T20:08:27.604Z","0.6.0-27-g3bae9d8":"2019-03-25T15:21:49.091Z","0.7.0":"2019-03-25T15:27:44.779Z","0.7.0-3-g5c0f615":"2019-04-09T13:59:03.195Z","0.7.1":"2019-04-09T14:03:34.074Z","0.7.1-6-g59f0c47":"2019-04-15T21:41:57.790Z","0.7.1-8-g128ea55":"2019-04-16T18:32:08.441Z","0.7.2":"2019-04-17T14:12:26.285Z","0.7.2-5-ge69663a":"2019-04-17T14:57:30.207Z","0.7.2-7-gb8033fb":"2019-04-17T21:09:27.256Z","0.7.2-9-gc7c71cb":"2019-04-18T13:34:13.754Z","0.7.2-11-gbe810b8":"2019-04-18T15:43:05.709Z","0.7.2-13-gb9afd32":"2019-04-30T15:17:33.931Z","0.7.3":"2019-04-30T15:22:00.660Z","0.7.3-8-gf42d72a":"2019-05-14T15:35:37.257Z","0.7.3-10-gf8af46c":"2019-05-15T16:50:45.250Z","0.7.3-12-ge78fc3e":"2019-05-20T14:29:18.382Z","0.7.3-16-g1353fc9":"2019-05-20T15:29:18.524Z","0.7.3-18-gadb6424":"2019-05-20T16:19:31.914Z","1.0.0":"2019-05-20T16:22:59.823Z","1.0.0-3-g144f440":"2019-05-22T13:52:29.649Z","1.0.0-5-g1c589d1":"2019-05-28T11:33:41.287Z","1.0.1":"2019-05-28T12:15:37.875Z","1.0.1-4-g16d9fb3":"2019-06-28T16:43:12.959Z","1.0.2":"2019-06-28T17:03:56.957Z","1.0.2-8-g1b71dd1":"2019-07-09T18:19:11.462Z","1.0.2-10-g1437fbc":"2019-07-12T20:57:18.607Z","1.0.2-13-gfe23ad1":"2019-07-15T16:20:04.333Z","2.0.0":"2019-07-15T16:22:08.259Z","2.0.0-5-g7a1454c":"2019-07-15T20:32:08.748Z","2.0.1":"2019-07-15T20:34:15.867Z","2.0.1-4-g193f754":"2019-07-16T19:43:56.598Z","2.0.2":"2019-07-16T19:54:29.750Z","2.0.2-5-gc35c02b":"2019-07-18T15:45:43.079Z","2.0.2-7-gd9e3a74":"2019-07-18T21:02:59.865Z","2.0.3":"2019-07-18T21:06:40.570Z","2.0.3-6-g690a296":"2019-07-22T16:20:47.931Z","2.0.4":"2019-07-22T17:25:24.261Z","2.0.4-2-g3b11840":"2019-07-22T21:06:04.160Z","2.0.4-4-gfdf3f79":"2019-07-23T11:22:51.897Z","2.0.4-8-gbf316d9":"2019-07-23T21:01:16.321Z","2.1.0":"2019-07-24T13:00:34.163Z","2.1.0-2-g9c4c9d4":"2019-08-13T12:04:06.776Z","2.1.0-4-g9feec10":"2019-09-09T20:30:57.145Z","2.1.1":"2019-09-09T20:38:31.352Z","2.1.1-2-g344e807":"2019-10-10T12:15:19.163Z","2.1.2":"2019-10-10T12:56:06.940Z","2.1.2-9-g14cd43f":"2019-10-21T15:34:35.955Z","2.1.2-14-ge361793":"2019-10-31T17:01:46.556Z","2.2.0":"2019-10-31T19:44:09.310Z","2.2.0-2-ge8b3a6c":"2019-11-04T21:26:04.422Z","2.2.0-6-gfad84fc":"2019-11-05T17:32:09.786Z","2.2.0-9-g212ff00":"2019-11-05T19:25:14.471Z","2.2.1":"2019-11-05T19:38:18.630Z","2.2.1-2-g90e3144":"2019-12-05T15:06:22.302Z"},"maintainers":[{"email":"services@serverless.com","name":"serverless-main"}],"description":"Serverless Platform SDK","homepage":"https://github.com/serverless/platform-sdk#readme","repository":{"type":"git","url":"git+https://github.com/serverless/platform-sdk.git"},"author":{"name":"Serverless, Inc."},"bugs":{"url":"https://github.com/serverless/platform-sdk/issues"},"license":"Apache-2.0","readme":"","readmeFilename":"","_etag":"W/\"bf5169ad208eed61cfaddb9581c8f373\"","_lastModified":"Thu, 05 Dec 2019 15:06:26 GMT"}